
lab3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000b20  00000bb4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b20  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000022f  0080012a  0080012a  00000bde  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000bde  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c10  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000c8  00000000  00000000  00000c50  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000012f6  00000000  00000000  00000d18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c40  00000000  00000000  0000200e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000856  00000000  00000000  00002c4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000234  00000000  00000000  000034a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b0  00000000  00000000  000036d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000bac  00000000  00000000  00003c88  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001a0  00000000  00000000  00004834  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   8:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
   c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  10:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  14:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  18:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  1c:	0c 94 dd 04 	jmp	0x9ba	; 0x9ba <__vector_7>
  20:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  24:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  28:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  2c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  30:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  34:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  38:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  3c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  40:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  44:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  48:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  4c:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  50:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  54:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>
  58:	0c 94 4b 00 	jmp	0x96	; 0x96 <__bad_interrupt>

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf ef       	ldi	r28, 0xFF	; 255
  62:	d4 e0       	ldi	r29, 0x04	; 4
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	11 e0       	ldi	r17, 0x01	; 1
  6a:	a0 e0       	ldi	r26, 0x00	; 0
  6c:	b1 e0       	ldi	r27, 0x01	; 1
  6e:	e0 e2       	ldi	r30, 0x20	; 32
  70:	fb e0       	ldi	r31, 0x0B	; 11
  72:	02 c0       	rjmp	.+4      	; 0x78 <__do_copy_data+0x10>
  74:	05 90       	lpm	r0, Z+
  76:	0d 92       	st	X+, r0
  78:	aa 32       	cpi	r26, 0x2A	; 42
  7a:	b1 07       	cpc	r27, r17
  7c:	d9 f7       	brne	.-10     	; 0x74 <__do_copy_data+0xc>

0000007e <__do_clear_bss>:
  7e:	23 e0       	ldi	r18, 0x03	; 3
  80:	aa e2       	ldi	r26, 0x2A	; 42
  82:	b1 e0       	ldi	r27, 0x01	; 1
  84:	01 c0       	rjmp	.+2      	; 0x88 <.do_clear_bss_start>

00000086 <.do_clear_bss_loop>:
  86:	1d 92       	st	X+, r1

00000088 <.do_clear_bss_start>:
  88:	a9 35       	cpi	r26, 0x59	; 89
  8a:	b2 07       	cpc	r27, r18
  8c:	e1 f7       	brne	.-8      	; 0x86 <.do_clear_bss_loop>
  8e:	0e 94 a7 03 	call	0x74e	; 0x74e <main>
  92:	0c 94 8e 05 	jmp	0xb1c	; 0xb1c <_exit>

00000096 <__bad_interrupt>:
  96:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000009a <writeChar.part.0>:
		if(getBlinkCounter() == 0){
			LCDDR2 = 0x0040;
		}
		if(getBlinkCounter() == 1) {
			LCDDR2 = 0x0000;
			resetBlinkCounter();
  9a:	cf 93       	push	r28
  9c:	df 93       	push	r29
  9e:	cd b7       	in	r28, 0x3d	; 61
  a0:	de b7       	in	r29, 0x3e	; 62
  a2:	c0 5e       	subi	r28, 0xE0	; 224
  a4:	d1 40       	sbci	r29, 0x01	; 1
  a6:	0f b6       	in	r0, 0x3f	; 63
  a8:	f8 94       	cli
  aa:	de bf       	out	0x3e, r29	; 62
  ac:	0f be       	out	0x3f, r0	; 63
  ae:	cd bf       	out	0x3d, r28	; 61
  b0:	81 53       	subi	r24, 0x31	; 49
  b2:	89 30       	cpi	r24, 0x09	; 9
  b4:	08 f0       	brcs	.+2      	; 0xb8 <writeChar.part.0+0x1e>
  b6:	98 c0       	rjmp	.+304    	; 0x1e8 <writeChar.part.0+0x14e>
  b8:	e8 2f       	mov	r30, r24
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	ee 0f       	add	r30, r30
  be:	ff 1f       	adc	r31, r31
  c0:	e8 5e       	subi	r30, 0xE8	; 232
  c2:	fe 4f       	sbci	r31, 0xFE	; 254
  c4:	80 81       	ld	r24, Z
  c6:	91 81       	ldd	r25, Z+1	; 0x01
  c8:	62 30       	cpi	r22, 0x02	; 2
  ca:	71 05       	cpc	r23, r1
  cc:	09 f4       	brne	.+2      	; 0xd0 <writeChar.part.0+0x36>
  ce:	92 c0       	rjmp	.+292    	; 0x1f4 <writeChar.part.0+0x15a>
  d0:	63 30       	cpi	r22, 0x03	; 3
  d2:	71 05       	cpc	r23, r1
  d4:	0c f4       	brge	.+2      	; 0xd8 <writeChar.part.0+0x3e>
  d6:	ff c0       	rjmp	.+510    	; 0x2d6 <__EEPROM_REGION_LENGTH__+0xd6>
  d8:	64 30       	cpi	r22, 0x04	; 4
  da:	71 05       	cpc	r23, r1
  dc:	09 f4       	brne	.+2      	; 0xe0 <writeChar.part.0+0x46>
  de:	78 c1       	rjmp	.+752    	; 0x3d0 <__EEPROM_REGION_LENGTH__+0x1d0>
  e0:	0c f4       	brge	.+2      	; 0xe4 <writeChar.part.0+0x4a>
  e2:	46 c2       	rjmp	.+1164   	; 0x570 <__stack+0x71>
  e4:	65 30       	cpi	r22, 0x05	; 5
  e6:	71 05       	cpc	r23, r1
  e8:	09 f0       	breq	.+2      	; 0xec <writeChar.part.0+0x52>
  ea:	74 c0       	rjmp	.+232    	; 0x1d4 <writeChar.part.0+0x13a>
  ec:	40 91 ee 00 	lds	r20, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
  f0:	24 e1       	ldi	r18, 0x14	; 20
  f2:	e4 e0       	ldi	r30, 0x04	; 4
  f4:	f1 e0       	ldi	r31, 0x01	; 1
  f6:	de 01       	movw	r26, r28
  f8:	af 56       	subi	r26, 0x6F	; 111
  fa:	be 4f       	sbci	r27, 0xFE	; 254
  fc:	01 90       	ld	r0, Z+
  fe:	0d 92       	st	X+, r0
 100:	2a 95       	dec	r18
 102:	e1 f7       	brne	.-8      	; 0xfc <writeChar.part.0+0x62>
 104:	88 0f       	add	r24, r24
 106:	99 1f       	adc	r25, r25
 108:	e1 e9       	ldi	r30, 0x91	; 145
 10a:	f1 e0       	ldi	r31, 0x01	; 1
 10c:	ec 0f       	add	r30, r28
 10e:	fd 1f       	adc	r31, r29
 110:	e8 0f       	add	r30, r24
 112:	f9 1f       	adc	r31, r25
 114:	20 81       	ld	r18, Z
 116:	31 81       	ldd	r19, Z+1	; 0x01
 118:	22 95       	swap	r18
 11a:	32 95       	swap	r19
 11c:	30 7f       	andi	r19, 0xF0	; 240
 11e:	32 27       	eor	r19, r18
 120:	20 7f       	andi	r18, 0xF0	; 240
 122:	32 27       	eor	r19, r18
 124:	4f 70       	andi	r20, 0x0F	; 15
 126:	24 2b       	or	r18, r20
 128:	20 93 ee 00 	sts	0x00EE, r18	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
 12c:	20 91 f3 00 	lds	r18, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
 130:	34 e1       	ldi	r19, 0x14	; 20
 132:	e4 e0       	ldi	r30, 0x04	; 4
 134:	f1 e0       	ldi	r31, 0x01	; 1
 136:	de 01       	movw	r26, r28
 138:	ab 55       	subi	r26, 0x5B	; 91
 13a:	be 4f       	sbci	r27, 0xFE	; 254
 13c:	01 90       	ld	r0, Z+
 13e:	0d 92       	st	X+, r0
 140:	3a 95       	dec	r19
 142:	e1 f7       	brne	.-8      	; 0x13c <writeChar.part.0+0xa2>
 144:	e5 ea       	ldi	r30, 0xA5	; 165
 146:	f1 e0       	ldi	r31, 0x01	; 1
 148:	ec 0f       	add	r30, r28
 14a:	fd 1f       	adc	r31, r29
 14c:	e8 0f       	add	r30, r24
 14e:	f9 1f       	adc	r31, r25
 150:	30 81       	ld	r19, Z
 152:	30 7f       	andi	r19, 0xF0	; 240
 154:	2f 70       	andi	r18, 0x0F	; 15
 156:	23 2b       	or	r18, r19
 158:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
 15c:	40 91 f8 00 	lds	r20, 0x00F8	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
 160:	24 e1       	ldi	r18, 0x14	; 20
 162:	e4 e0       	ldi	r30, 0x04	; 4
 164:	f1 e0       	ldi	r31, 0x01	; 1
 166:	de 01       	movw	r26, r28
 168:	a7 54       	subi	r26, 0x47	; 71
 16a:	be 4f       	sbci	r27, 0xFE	; 254
 16c:	01 90       	ld	r0, Z+
 16e:	0d 92       	st	X+, r0
 170:	2a 95       	dec	r18
 172:	e1 f7       	brne	.-8      	; 0x16c <writeChar.part.0+0xd2>
 174:	e9 eb       	ldi	r30, 0xB9	; 185
 176:	f1 e0       	ldi	r31, 0x01	; 1
 178:	ec 0f       	add	r30, r28
 17a:	fd 1f       	adc	r31, r29
 17c:	e8 0f       	add	r30, r24
 17e:	f9 1f       	adc	r31, r25
 180:	20 81       	ld	r18, Z
 182:	31 81       	ldd	r19, Z+1	; 0x01
 184:	22 27       	eor	r18, r18
 186:	3f 70       	andi	r19, 0x0F	; 15
 188:	35 95       	asr	r19
 18a:	27 95       	ror	r18
 18c:	35 95       	asr	r19
 18e:	27 95       	ror	r18
 190:	35 95       	asr	r19
 192:	27 95       	ror	r18
 194:	35 95       	asr	r19
 196:	27 95       	ror	r18
 198:	4f 70       	andi	r20, 0x0F	; 15
 19a:	24 2b       	or	r18, r20
 19c:	20 93 f8 00 	sts	0x00F8, r18	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
 1a0:	20 91 fd 00 	lds	r18, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
 1a4:	34 e1       	ldi	r19, 0x14	; 20
 1a6:	e4 e0       	ldi	r30, 0x04	; 4
 1a8:	f1 e0       	ldi	r31, 0x01	; 1
 1aa:	de 01       	movw	r26, r28
 1ac:	a3 53       	subi	r26, 0x33	; 51
 1ae:	be 4f       	sbci	r27, 0xFE	; 254
 1b0:	01 90       	ld	r0, Z+
 1b2:	0d 92       	st	X+, r0
 1b4:	3a 95       	dec	r19
 1b6:	e1 f7       	brne	.-8      	; 0x1b0 <writeChar.part.0+0x116>
 1b8:	ed ec       	ldi	r30, 0xCD	; 205
 1ba:	f1 e0       	ldi	r31, 0x01	; 1
 1bc:	ec 0f       	add	r30, r28
 1be:	fd 1f       	adc	r31, r29
 1c0:	e8 0f       	add	r30, r24
 1c2:	f9 1f       	adc	r31, r25
 1c4:	80 81       	ld	r24, Z
 1c6:	91 81       	ldd	r25, Z+1	; 0x01
 1c8:	88 27       	eor	r24, r24
 1ca:	90 7f       	andi	r25, 0xF0	; 240
 1cc:	2f 70       	andi	r18, 0x0F	; 15
 1ce:	29 2b       	or	r18, r25
 1d0:	20 93 fd 00 	sts	0x00FD, r18	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
 1d4:	c0 52       	subi	r28, 0x20	; 32
 1d6:	de 4f       	sbci	r29, 0xFE	; 254
 1d8:	0f b6       	in	r0, 0x3f	; 63
 1da:	f8 94       	cli
 1dc:	de bf       	out	0x3e, r29	; 62
 1de:	0f be       	out	0x3f, r0	; 63
 1e0:	cd bf       	out	0x3d, r28	; 61
 1e2:	df 91       	pop	r29
 1e4:	cf 91       	pop	r28
 1e6:	08 95       	ret
 1e8:	80 e0       	ldi	r24, 0x00	; 0
 1ea:	90 e0       	ldi	r25, 0x00	; 0
 1ec:	62 30       	cpi	r22, 0x02	; 2
 1ee:	71 05       	cpc	r23, r1
 1f0:	09 f0       	breq	.+2      	; 0x1f4 <writeChar.part.0+0x15a>
 1f2:	6e cf       	rjmp	.-292    	; 0xd0 <writeChar.part.0+0x36>
 1f4:	20 91 ed 00 	lds	r18, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
 1f8:	34 e1       	ldi	r19, 0x14	; 20
 1fa:	e4 e0       	ldi	r30, 0x04	; 4
 1fc:	f1 e0       	ldi	r31, 0x01	; 1
 1fe:	de 01       	movw	r26, r28
 200:	af 55       	subi	r26, 0x5F	; 95
 202:	bf 4f       	sbci	r27, 0xFF	; 255
 204:	01 90       	ld	r0, Z+
 206:	0d 92       	st	X+, r0
 208:	3a 95       	dec	r19
 20a:	e1 f7       	brne	.-8      	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
 20c:	88 0f       	add	r24, r24
 20e:	99 1f       	adc	r25, r25
 210:	e1 ea       	ldi	r30, 0xA1	; 161
 212:	f0 e0       	ldi	r31, 0x00	; 0
 214:	ec 0f       	add	r30, r28
 216:	fd 1f       	adc	r31, r29
 218:	e8 0f       	add	r30, r24
 21a:	f9 1f       	adc	r31, r25
 21c:	30 81       	ld	r19, Z
 21e:	3f 70       	andi	r19, 0x0F	; 15
 220:	20 7f       	andi	r18, 0xF0	; 240
 222:	23 2b       	or	r18, r19
 224:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
 228:	40 91 f2 00 	lds	r20, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
 22c:	24 e1       	ldi	r18, 0x14	; 20
 22e:	e4 e0       	ldi	r30, 0x04	; 4
 230:	f1 e0       	ldi	r31, 0x01	; 1
 232:	de 01       	movw	r26, r28
 234:	ab 54       	subi	r26, 0x4B	; 75
 236:	bf 4f       	sbci	r27, 0xFF	; 255
 238:	01 90       	ld	r0, Z+
 23a:	0d 92       	st	X+, r0
 23c:	2a 95       	dec	r18
 23e:	e1 f7       	brne	.-8      	; 0x238 <__EEPROM_REGION_LENGTH__+0x38>
 240:	e5 eb       	ldi	r30, 0xB5	; 181
 242:	f0 e0       	ldi	r31, 0x00	; 0
 244:	ec 0f       	add	r30, r28
 246:	fd 1f       	adc	r31, r29
 248:	e8 0f       	add	r30, r24
 24a:	f9 1f       	adc	r31, r25
 24c:	20 81       	ld	r18, Z
 24e:	31 81       	ldd	r19, Z+1	; 0x01
 250:	20 7f       	andi	r18, 0xF0	; 240
 252:	33 27       	eor	r19, r19
 254:	35 95       	asr	r19
 256:	27 95       	ror	r18
 258:	35 95       	asr	r19
 25a:	27 95       	ror	r18
 25c:	35 95       	asr	r19
 25e:	27 95       	ror	r18
 260:	35 95       	asr	r19
 262:	27 95       	ror	r18
 264:	40 7f       	andi	r20, 0xF0	; 240
 266:	24 2b       	or	r18, r20
 268:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
 26c:	20 91 f7 00 	lds	r18, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
 270:	34 e1       	ldi	r19, 0x14	; 20
 272:	e4 e0       	ldi	r30, 0x04	; 4
 274:	f1 e0       	ldi	r31, 0x01	; 1
 276:	de 01       	movw	r26, r28
 278:	a7 53       	subi	r26, 0x37	; 55
 27a:	bf 4f       	sbci	r27, 0xFF	; 255
 27c:	01 90       	ld	r0, Z+
 27e:	0d 92       	st	X+, r0
 280:	3a 95       	dec	r19
 282:	e1 f7       	brne	.-8      	; 0x27c <__EEPROM_REGION_LENGTH__+0x7c>
 284:	e9 ec       	ldi	r30, 0xC9	; 201
 286:	f0 e0       	ldi	r31, 0x00	; 0
 288:	ec 0f       	add	r30, r28
 28a:	fd 1f       	adc	r31, r29
 28c:	e8 0f       	add	r30, r24
 28e:	f9 1f       	adc	r31, r25
 290:	40 81       	ld	r20, Z
 292:	51 81       	ldd	r21, Z+1	; 0x01
 294:	44 27       	eor	r20, r20
 296:	5f 70       	andi	r21, 0x0F	; 15
 298:	20 7f       	andi	r18, 0xF0	; 240
 29a:	25 2b       	or	r18, r21
 29c:	20 93 f7 00 	sts	0x00F7, r18	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
 2a0:	20 91 fc 00 	lds	r18, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
 2a4:	34 e1       	ldi	r19, 0x14	; 20
 2a6:	e4 e0       	ldi	r30, 0x04	; 4
 2a8:	f1 e0       	ldi	r31, 0x01	; 1
 2aa:	de 01       	movw	r26, r28
 2ac:	a3 52       	subi	r26, 0x23	; 35
 2ae:	bf 4f       	sbci	r27, 0xFF	; 255
 2b0:	01 90       	ld	r0, Z+
 2b2:	0d 92       	st	X+, r0
 2b4:	3a 95       	dec	r19
 2b6:	e1 f7       	brne	.-8      	; 0x2b0 <__EEPROM_REGION_LENGTH__+0xb0>
 2b8:	ed ed       	ldi	r30, 0xDD	; 221
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	ec 0f       	add	r30, r28
 2be:	fd 1f       	adc	r31, r29
 2c0:	e8 0f       	add	r30, r24
 2c2:	f9 1f       	adc	r31, r25
 2c4:	91 81       	ldd	r25, Z+1	; 0x01
 2c6:	92 95       	swap	r25
 2c8:	9f 70       	andi	r25, 0x0F	; 15
 2ca:	82 2f       	mov	r24, r18
 2cc:	80 7f       	andi	r24, 0xF0	; 240
 2ce:	89 2b       	or	r24, r25
 2d0:	80 93 fc 00 	sts	0x00FC, r24	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
 2d4:	7f cf       	rjmp	.-258    	; 0x1d4 <writeChar.part.0+0x13a>
 2d6:	61 15       	cp	r22, r1
 2d8:	71 05       	cpc	r23, r1
 2da:	09 f4       	brne	.+2      	; 0x2de <__EEPROM_REGION_LENGTH__+0xde>
 2dc:	ea c0       	rjmp	.+468    	; 0x4b2 <__DATA_REGION_LENGTH__+0xb2>
 2de:	61 30       	cpi	r22, 0x01	; 1
 2e0:	71 05       	cpc	r23, r1
 2e2:	09 f0       	breq	.+2      	; 0x2e6 <__EEPROM_REGION_LENGTH__+0xe6>
 2e4:	77 cf       	rjmp	.-274    	; 0x1d4 <writeChar.part.0+0x13a>
 2e6:	40 91 ec 00 	lds	r20, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
 2ea:	24 e1       	ldi	r18, 0x14	; 20
 2ec:	e4 e0       	ldi	r30, 0x04	; 4
 2ee:	f1 e0       	ldi	r31, 0x01	; 1
 2f0:	de 01       	movw	r26, r28
 2f2:	af 5a       	subi	r26, 0xAF	; 175
 2f4:	bf 4f       	sbci	r27, 0xFF	; 255
 2f6:	01 90       	ld	r0, Z+
 2f8:	0d 92       	st	X+, r0
 2fa:	2a 95       	dec	r18
 2fc:	e1 f7       	brne	.-8      	; 0x2f6 <__EEPROM_REGION_LENGTH__+0xf6>
 2fe:	88 0f       	add	r24, r24
 300:	99 1f       	adc	r25, r25
 302:	e1 e5       	ldi	r30, 0x51	; 81
 304:	f0 e0       	ldi	r31, 0x00	; 0
 306:	ec 0f       	add	r30, r28
 308:	fd 1f       	adc	r31, r29
 30a:	e8 0f       	add	r30, r24
 30c:	f9 1f       	adc	r31, r25
 30e:	20 81       	ld	r18, Z
 310:	31 81       	ldd	r19, Z+1	; 0x01
 312:	22 95       	swap	r18
 314:	32 95       	swap	r19
 316:	30 7f       	andi	r19, 0xF0	; 240
 318:	32 27       	eor	r19, r18
 31a:	20 7f       	andi	r18, 0xF0	; 240
 31c:	32 27       	eor	r19, r18
 31e:	4f 70       	andi	r20, 0x0F	; 15
 320:	24 2b       	or	r18, r20
 322:	20 93 ec 00 	sts	0x00EC, r18	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
 326:	20 91 f1 00 	lds	r18, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
 32a:	34 e1       	ldi	r19, 0x14	; 20
 32c:	e4 e0       	ldi	r30, 0x04	; 4
 32e:	f1 e0       	ldi	r31, 0x01	; 1
 330:	de 01       	movw	r26, r28
 332:	ab 59       	subi	r26, 0x9B	; 155
 334:	bf 4f       	sbci	r27, 0xFF	; 255
 336:	01 90       	ld	r0, Z+
 338:	0d 92       	st	X+, r0
 33a:	3a 95       	dec	r19
 33c:	e1 f7       	brne	.-8      	; 0x336 <__EEPROM_REGION_LENGTH__+0x136>
 33e:	e5 e6       	ldi	r30, 0x65	; 101
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	ec 0f       	add	r30, r28
 344:	fd 1f       	adc	r31, r29
 346:	e8 0f       	add	r30, r24
 348:	f9 1f       	adc	r31, r25
 34a:	30 81       	ld	r19, Z
 34c:	30 7f       	andi	r19, 0xF0	; 240
 34e:	2f 70       	andi	r18, 0x0F	; 15
 350:	23 2b       	or	r18, r19
 352:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
 356:	40 91 f6 00 	lds	r20, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
 35a:	24 e1       	ldi	r18, 0x14	; 20
 35c:	e4 e0       	ldi	r30, 0x04	; 4
 35e:	f1 e0       	ldi	r31, 0x01	; 1
 360:	de 01       	movw	r26, r28
 362:	a7 58       	subi	r26, 0x87	; 135
 364:	bf 4f       	sbci	r27, 0xFF	; 255
 366:	01 90       	ld	r0, Z+
 368:	0d 92       	st	X+, r0
 36a:	2a 95       	dec	r18
 36c:	e1 f7       	brne	.-8      	; 0x366 <__EEPROM_REGION_LENGTH__+0x166>
 36e:	e9 e7       	ldi	r30, 0x79	; 121
 370:	f0 e0       	ldi	r31, 0x00	; 0
 372:	ec 0f       	add	r30, r28
 374:	fd 1f       	adc	r31, r29
 376:	e8 0f       	add	r30, r24
 378:	f9 1f       	adc	r31, r25
 37a:	20 81       	ld	r18, Z
 37c:	31 81       	ldd	r19, Z+1	; 0x01
 37e:	22 27       	eor	r18, r18
 380:	3f 70       	andi	r19, 0x0F	; 15
 382:	35 95       	asr	r19
 384:	27 95       	ror	r18
 386:	35 95       	asr	r19
 388:	27 95       	ror	r18
 38a:	35 95       	asr	r19
 38c:	27 95       	ror	r18
 38e:	35 95       	asr	r19
 390:	27 95       	ror	r18
 392:	4f 70       	andi	r20, 0x0F	; 15
 394:	24 2b       	or	r18, r20
 396:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
 39a:	20 91 fb 00 	lds	r18, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
 39e:	34 e1       	ldi	r19, 0x14	; 20
 3a0:	e4 e0       	ldi	r30, 0x04	; 4
 3a2:	f1 e0       	ldi	r31, 0x01	; 1
 3a4:	de 01       	movw	r26, r28
 3a6:	a3 57       	subi	r26, 0x73	; 115
 3a8:	bf 4f       	sbci	r27, 0xFF	; 255
 3aa:	01 90       	ld	r0, Z+
 3ac:	0d 92       	st	X+, r0
 3ae:	3a 95       	dec	r19
 3b0:	e1 f7       	brne	.-8      	; 0x3aa <__EEPROM_REGION_LENGTH__+0x1aa>
 3b2:	ed e8       	ldi	r30, 0x8D	; 141
 3b4:	f0 e0       	ldi	r31, 0x00	; 0
 3b6:	ec 0f       	add	r30, r28
 3b8:	fd 1f       	adc	r31, r29
 3ba:	e8 0f       	add	r30, r24
 3bc:	f9 1f       	adc	r31, r25
 3be:	80 81       	ld	r24, Z
 3c0:	91 81       	ldd	r25, Z+1	; 0x01
 3c2:	88 27       	eor	r24, r24
 3c4:	90 7f       	andi	r25, 0xF0	; 240
 3c6:	2f 70       	andi	r18, 0x0F	; 15
 3c8:	29 2b       	or	r18, r25
 3ca:	20 93 fb 00 	sts	0x00FB, r18	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
 3ce:	02 cf       	rjmp	.-508    	; 0x1d4 <writeChar.part.0+0x13a>
 3d0:	20 91 ee 00 	lds	r18, 0x00EE	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
 3d4:	34 e1       	ldi	r19, 0x14	; 20
 3d6:	e4 e0       	ldi	r30, 0x04	; 4
 3d8:	f1 e0       	ldi	r31, 0x01	; 1
 3da:	de 01       	movw	r26, r28
 3dc:	af 5b       	subi	r26, 0xBF	; 191
 3de:	be 4f       	sbci	r27, 0xFE	; 254
 3e0:	01 90       	ld	r0, Z+
 3e2:	0d 92       	st	X+, r0
 3e4:	3a 95       	dec	r19
 3e6:	e1 f7       	brne	.-8      	; 0x3e0 <__EEPROM_REGION_LENGTH__+0x1e0>
 3e8:	88 0f       	add	r24, r24
 3ea:	99 1f       	adc	r25, r25
 3ec:	e1 e4       	ldi	r30, 0x41	; 65
 3ee:	f1 e0       	ldi	r31, 0x01	; 1
 3f0:	ec 0f       	add	r30, r28
 3f2:	fd 1f       	adc	r31, r29
 3f4:	e8 0f       	add	r30, r24
 3f6:	f9 1f       	adc	r31, r25
 3f8:	30 81       	ld	r19, Z
 3fa:	3f 70       	andi	r19, 0x0F	; 15
 3fc:	20 7f       	andi	r18, 0xF0	; 240
 3fe:	23 2b       	or	r18, r19
 400:	20 93 ee 00 	sts	0x00EE, r18	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
 404:	40 91 f3 00 	lds	r20, 0x00F3	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
 408:	24 e1       	ldi	r18, 0x14	; 20
 40a:	e4 e0       	ldi	r30, 0x04	; 4
 40c:	f1 e0       	ldi	r31, 0x01	; 1
 40e:	de 01       	movw	r26, r28
 410:	ab 5a       	subi	r26, 0xAB	; 171
 412:	be 4f       	sbci	r27, 0xFE	; 254
 414:	01 90       	ld	r0, Z+
 416:	0d 92       	st	X+, r0
 418:	2a 95       	dec	r18
 41a:	e1 f7       	brne	.-8      	; 0x414 <__DATA_REGION_LENGTH__+0x14>
 41c:	e5 e5       	ldi	r30, 0x55	; 85
 41e:	f1 e0       	ldi	r31, 0x01	; 1
 420:	ec 0f       	add	r30, r28
 422:	fd 1f       	adc	r31, r29
 424:	e8 0f       	add	r30, r24
 426:	f9 1f       	adc	r31, r25
 428:	20 81       	ld	r18, Z
 42a:	31 81       	ldd	r19, Z+1	; 0x01
 42c:	20 7f       	andi	r18, 0xF0	; 240
 42e:	33 27       	eor	r19, r19
 430:	35 95       	asr	r19
 432:	27 95       	ror	r18
 434:	35 95       	asr	r19
 436:	27 95       	ror	r18
 438:	35 95       	asr	r19
 43a:	27 95       	ror	r18
 43c:	35 95       	asr	r19
 43e:	27 95       	ror	r18
 440:	40 7f       	andi	r20, 0xF0	; 240
 442:	24 2b       	or	r18, r20
 444:	20 93 f3 00 	sts	0x00F3, r18	; 0x8000f3 <__TEXT_REGION_LENGTH__+0x7fc0f3>
 448:	20 91 f8 00 	lds	r18, 0x00F8	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
 44c:	34 e1       	ldi	r19, 0x14	; 20
 44e:	e4 e0       	ldi	r30, 0x04	; 4
 450:	f1 e0       	ldi	r31, 0x01	; 1
 452:	de 01       	movw	r26, r28
 454:	a7 59       	subi	r26, 0x97	; 151
 456:	be 4f       	sbci	r27, 0xFE	; 254
 458:	01 90       	ld	r0, Z+
 45a:	0d 92       	st	X+, r0
 45c:	3a 95       	dec	r19
 45e:	e1 f7       	brne	.-8      	; 0x458 <__DATA_REGION_LENGTH__+0x58>
 460:	e9 e6       	ldi	r30, 0x69	; 105
 462:	f1 e0       	ldi	r31, 0x01	; 1
 464:	ec 0f       	add	r30, r28
 466:	fd 1f       	adc	r31, r29
 468:	e8 0f       	add	r30, r24
 46a:	f9 1f       	adc	r31, r25
 46c:	40 81       	ld	r20, Z
 46e:	51 81       	ldd	r21, Z+1	; 0x01
 470:	44 27       	eor	r20, r20
 472:	5f 70       	andi	r21, 0x0F	; 15
 474:	20 7f       	andi	r18, 0xF0	; 240
 476:	25 2b       	or	r18, r21
 478:	20 93 f8 00 	sts	0x00F8, r18	; 0x8000f8 <__TEXT_REGION_LENGTH__+0x7fc0f8>
 47c:	20 91 fd 00 	lds	r18, 0x00FD	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
 480:	34 e1       	ldi	r19, 0x14	; 20
 482:	e4 e0       	ldi	r30, 0x04	; 4
 484:	f1 e0       	ldi	r31, 0x01	; 1
 486:	de 01       	movw	r26, r28
 488:	a3 58       	subi	r26, 0x83	; 131
 48a:	be 4f       	sbci	r27, 0xFE	; 254
 48c:	01 90       	ld	r0, Z+
 48e:	0d 92       	st	X+, r0
 490:	3a 95       	dec	r19
 492:	e1 f7       	brne	.-8      	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 494:	ed e7       	ldi	r30, 0x7D	; 125
 496:	f1 e0       	ldi	r31, 0x01	; 1
 498:	ec 0f       	add	r30, r28
 49a:	fd 1f       	adc	r31, r29
 49c:	e8 0f       	add	r30, r24
 49e:	f9 1f       	adc	r31, r25
 4a0:	91 81       	ldd	r25, Z+1	; 0x01
 4a2:	92 95       	swap	r25
 4a4:	9f 70       	andi	r25, 0x0F	; 15
 4a6:	82 2f       	mov	r24, r18
 4a8:	80 7f       	andi	r24, 0xF0	; 240
 4aa:	89 2b       	or	r24, r25
 4ac:	80 93 fd 00 	sts	0x00FD, r24	; 0x8000fd <__TEXT_REGION_LENGTH__+0x7fc0fd>
 4b0:	91 ce       	rjmp	.-734    	; 0x1d4 <writeChar.part.0+0x13a>
 4b2:	20 91 ec 00 	lds	r18, 0x00EC	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
 4b6:	34 e1       	ldi	r19, 0x14	; 20
 4b8:	e4 e0       	ldi	r30, 0x04	; 4
 4ba:	f1 e0       	ldi	r31, 0x01	; 1
 4bc:	de 01       	movw	r26, r28
 4be:	11 96       	adiw	r26, 0x01	; 1
 4c0:	01 90       	ld	r0, Z+
 4c2:	0d 92       	st	X+, r0
 4c4:	3a 95       	dec	r19
 4c6:	e1 f7       	brne	.-8      	; 0x4c0 <__DATA_REGION_LENGTH__+0xc0>
 4c8:	88 0f       	add	r24, r24
 4ca:	99 1f       	adc	r25, r25
 4cc:	41 e0       	ldi	r20, 0x01	; 1
 4ce:	50 e0       	ldi	r21, 0x00	; 0
 4d0:	4c 0f       	add	r20, r28
 4d2:	5d 1f       	adc	r21, r29
 4d4:	84 0f       	add	r24, r20
 4d6:	95 1f       	adc	r25, r21
 4d8:	fc 01       	movw	r30, r24
 4da:	30 81       	ld	r19, Z
 4dc:	3f 70       	andi	r19, 0x0F	; 15
 4de:	20 7f       	andi	r18, 0xF0	; 240
 4e0:	23 2b       	or	r18, r19
 4e2:	20 93 ec 00 	sts	0x00EC, r18	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
 4e6:	40 91 f1 00 	lds	r20, 0x00F1	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
 4ea:	24 e1       	ldi	r18, 0x14	; 20
 4ec:	e4 e0       	ldi	r30, 0x04	; 4
 4ee:	f1 e0       	ldi	r31, 0x01	; 1
 4f0:	de 01       	movw	r26, r28
 4f2:	55 96       	adiw	r26, 0x15	; 21
 4f4:	01 90       	ld	r0, Z+
 4f6:	0d 92       	st	X+, r0
 4f8:	2a 95       	dec	r18
 4fa:	e1 f7       	brne	.-8      	; 0x4f4 <__DATA_REGION_LENGTH__+0xf4>
 4fc:	fc 01       	movw	r30, r24
 4fe:	24 89       	ldd	r18, Z+20	; 0x14
 500:	35 89       	ldd	r19, Z+21	; 0x15
 502:	20 7f       	andi	r18, 0xF0	; 240
 504:	33 27       	eor	r19, r19
 506:	35 95       	asr	r19
 508:	27 95       	ror	r18
 50a:	35 95       	asr	r19
 50c:	27 95       	ror	r18
 50e:	35 95       	asr	r19
 510:	27 95       	ror	r18
 512:	35 95       	asr	r19
 514:	27 95       	ror	r18
 516:	40 7f       	andi	r20, 0xF0	; 240
 518:	24 2b       	or	r18, r20
 51a:	20 93 f1 00 	sts	0x00F1, r18	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7fc0f1>
 51e:	20 91 f6 00 	lds	r18, 0x00F6	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
 522:	34 e1       	ldi	r19, 0x14	; 20
 524:	e4 e0       	ldi	r30, 0x04	; 4
 526:	f1 e0       	ldi	r31, 0x01	; 1
 528:	de 01       	movw	r26, r28
 52a:	99 96       	adiw	r26, 0x29	; 41
 52c:	01 90       	ld	r0, Z+
 52e:	0d 92       	st	X+, r0
 530:	3a 95       	dec	r19
 532:	e1 f7       	brne	.-8      	; 0x52c <__stack+0x2d>
 534:	fc 01       	movw	r30, r24
 536:	40 a5       	ldd	r20, Z+40	; 0x28
 538:	51 a5       	ldd	r21, Z+41	; 0x29
 53a:	44 27       	eor	r20, r20
 53c:	5f 70       	andi	r21, 0x0F	; 15
 53e:	20 7f       	andi	r18, 0xF0	; 240
 540:	25 2b       	or	r18, r21
 542:	20 93 f6 00 	sts	0x00F6, r18	; 0x8000f6 <__TEXT_REGION_LENGTH__+0x7fc0f6>
 546:	20 91 fb 00 	lds	r18, 0x00FB	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
 54a:	34 e1       	ldi	r19, 0x14	; 20
 54c:	e4 e0       	ldi	r30, 0x04	; 4
 54e:	f1 e0       	ldi	r31, 0x01	; 1
 550:	de 01       	movw	r26, r28
 552:	dd 96       	adiw	r26, 0x3d	; 61
 554:	01 90       	ld	r0, Z+
 556:	0d 92       	st	X+, r0
 558:	3a 95       	dec	r19
 55a:	e1 f7       	brne	.-8      	; 0x554 <__stack+0x55>
 55c:	fc 01       	movw	r30, r24
 55e:	95 ad       	ldd	r25, Z+61	; 0x3d
 560:	92 95       	swap	r25
 562:	9f 70       	andi	r25, 0x0F	; 15
 564:	82 2f       	mov	r24, r18
 566:	80 7f       	andi	r24, 0xF0	; 240
 568:	89 2b       	or	r24, r25
 56a:	80 93 fb 00 	sts	0x00FB, r24	; 0x8000fb <__TEXT_REGION_LENGTH__+0x7fc0fb>
 56e:	32 ce       	rjmp	.-924    	; 0x1d4 <writeChar.part.0+0x13a>
 570:	40 91 ed 00 	lds	r20, 0x00ED	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
 574:	24 e1       	ldi	r18, 0x14	; 20
 576:	e4 e0       	ldi	r30, 0x04	; 4
 578:	f1 e0       	ldi	r31, 0x01	; 1
 57a:	de 01       	movw	r26, r28
 57c:	af 50       	subi	r26, 0x0F	; 15
 57e:	bf 4f       	sbci	r27, 0xFF	; 255
 580:	01 90       	ld	r0, Z+
 582:	0d 92       	st	X+, r0
 584:	2a 95       	dec	r18
 586:	e1 f7       	brne	.-8      	; 0x580 <__stack+0x81>
 588:	88 0f       	add	r24, r24
 58a:	99 1f       	adc	r25, r25
 58c:	e1 ef       	ldi	r30, 0xF1	; 241
 58e:	f0 e0       	ldi	r31, 0x00	; 0
 590:	ec 0f       	add	r30, r28
 592:	fd 1f       	adc	r31, r29
 594:	e8 0f       	add	r30, r24
 596:	f9 1f       	adc	r31, r25
 598:	20 81       	ld	r18, Z
 59a:	31 81       	ldd	r19, Z+1	; 0x01
 59c:	22 95       	swap	r18
 59e:	32 95       	swap	r19
 5a0:	30 7f       	andi	r19, 0xF0	; 240
 5a2:	32 27       	eor	r19, r18
 5a4:	20 7f       	andi	r18, 0xF0	; 240
 5a6:	32 27       	eor	r19, r18
 5a8:	4f 70       	andi	r20, 0x0F	; 15
 5aa:	24 2b       	or	r18, r20
 5ac:	20 93 ed 00 	sts	0x00ED, r18	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
 5b0:	20 91 f2 00 	lds	r18, 0x00F2	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
 5b4:	34 e1       	ldi	r19, 0x14	; 20
 5b6:	e4 e0       	ldi	r30, 0x04	; 4
 5b8:	f1 e0       	ldi	r31, 0x01	; 1
 5ba:	de 01       	movw	r26, r28
 5bc:	ab 5f       	subi	r26, 0xFB	; 251
 5be:	be 4f       	sbci	r27, 0xFE	; 254
 5c0:	01 90       	ld	r0, Z+
 5c2:	0d 92       	st	X+, r0
 5c4:	3a 95       	dec	r19
 5c6:	e1 f7       	brne	.-8      	; 0x5c0 <__stack+0xc1>
 5c8:	e5 e0       	ldi	r30, 0x05	; 5
 5ca:	f1 e0       	ldi	r31, 0x01	; 1
 5cc:	ec 0f       	add	r30, r28
 5ce:	fd 1f       	adc	r31, r29
 5d0:	e8 0f       	add	r30, r24
 5d2:	f9 1f       	adc	r31, r25
 5d4:	30 81       	ld	r19, Z
 5d6:	30 7f       	andi	r19, 0xF0	; 240
 5d8:	2f 70       	andi	r18, 0x0F	; 15
 5da:	23 2b       	or	r18, r19
 5dc:	20 93 f2 00 	sts	0x00F2, r18	; 0x8000f2 <__TEXT_REGION_LENGTH__+0x7fc0f2>
 5e0:	40 91 f7 00 	lds	r20, 0x00F7	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
 5e4:	24 e1       	ldi	r18, 0x14	; 20
 5e6:	e4 e0       	ldi	r30, 0x04	; 4
 5e8:	f1 e0       	ldi	r31, 0x01	; 1
 5ea:	de 01       	movw	r26, r28
 5ec:	a7 5e       	subi	r26, 0xE7	; 231
 5ee:	be 4f       	sbci	r27, 0xFE	; 254
 5f0:	01 90       	ld	r0, Z+
 5f2:	0d 92       	st	X+, r0
 5f4:	2a 95       	dec	r18
 5f6:	e1 f7       	brne	.-8      	; 0x5f0 <__stack+0xf1>
 5f8:	e9 e1       	ldi	r30, 0x19	; 25
 5fa:	f1 e0       	ldi	r31, 0x01	; 1
 5fc:	ec 0f       	add	r30, r28
 5fe:	fd 1f       	adc	r31, r29
 600:	e8 0f       	add	r30, r24
 602:	f9 1f       	adc	r31, r25
 604:	20 81       	ld	r18, Z
 606:	31 81       	ldd	r19, Z+1	; 0x01
 608:	22 27       	eor	r18, r18
 60a:	3f 70       	andi	r19, 0x0F	; 15
 60c:	35 95       	asr	r19
 60e:	27 95       	ror	r18
 610:	35 95       	asr	r19
 612:	27 95       	ror	r18
 614:	35 95       	asr	r19
 616:	27 95       	ror	r18
 618:	35 95       	asr	r19
 61a:	27 95       	ror	r18
 61c:	4f 70       	andi	r20, 0x0F	; 15
 61e:	24 2b       	or	r18, r20
 620:	20 93 f7 00 	sts	0x00F7, r18	; 0x8000f7 <__TEXT_REGION_LENGTH__+0x7fc0f7>
 624:	20 91 fc 00 	lds	r18, 0x00FC	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
 628:	34 e1       	ldi	r19, 0x14	; 20
 62a:	e4 e0       	ldi	r30, 0x04	; 4
 62c:	f1 e0       	ldi	r31, 0x01	; 1
 62e:	de 01       	movw	r26, r28
 630:	a3 5d       	subi	r26, 0xD3	; 211
 632:	be 4f       	sbci	r27, 0xFE	; 254
 634:	01 90       	ld	r0, Z+
 636:	0d 92       	st	X+, r0
 638:	3a 95       	dec	r19
 63a:	e1 f7       	brne	.-8      	; 0x634 <__stack+0x135>
 63c:	ed e2       	ldi	r30, 0x2D	; 45
 63e:	f1 e0       	ldi	r31, 0x01	; 1
 640:	ec 0f       	add	r30, r28
 642:	fd 1f       	adc	r31, r29
 644:	e8 0f       	add	r30, r24
 646:	f9 1f       	adc	r31, r25
 648:	80 81       	ld	r24, Z
 64a:	91 81       	ldd	r25, Z+1	; 0x01
 64c:	88 27       	eor	r24, r24
 64e:	90 7f       	andi	r25, 0xF0	; 240
 650:	2f 70       	andi	r18, 0x0F	; 15
 652:	29 2b       	or	r18, r25
 654:	20 93 fc 00 	sts	0x00FC, r18	; 0x8000fc <__TEXT_REGION_LENGTH__+0x7fc0fc>
 658:	bd cd       	rjmp	.-1158   	; 0x1d4 <writeChar.part.0+0x13a>

0000065a <printAt>:
 65a:	cf 92       	push	r12
 65c:	df 92       	push	r13
 65e:	ef 92       	push	r14
 660:	ff 92       	push	r15
 662:	cf 93       	push	r28
 664:	df 93       	push	r29
 666:	6b 01       	movw	r12, r22
 668:	7c 01       	movw	r14, r24
 66a:	ea 01       	movw	r28, r20
 66c:	50 93 31 01 	sts	0x0131, r21	; 0x800131 <pp+0x1>
 670:	40 93 30 01 	sts	0x0130, r20	; 0x800130 <pp>
 674:	46 30       	cpi	r20, 0x06	; 6
 676:	51 05       	cpc	r21, r1
 678:	10 f1       	brcs	.+68     	; 0x6be <printAt+0x64>
 67a:	21 96       	adiw	r28, 0x01	; 1
 67c:	d0 93 31 01 	sts	0x0131, r29	; 0x800131 <pp+0x1>
 680:	c0 93 30 01 	sts	0x0130, r28	; 0x800130 <pp>
 684:	c6 30       	cpi	r28, 0x06	; 6
 686:	d1 05       	cpc	r29, r1
 688:	38 f0       	brcs	.+14     	; 0x698 <printAt+0x3e>
 68a:	df 91       	pop	r29
 68c:	cf 91       	pop	r28
 68e:	ff 90       	pop	r15
 690:	ef 90       	pop	r14
 692:	df 90       	pop	r13
 694:	cf 90       	pop	r12
 696:	08 95       	ret
 698:	c7 01       	movw	r24, r14
 69a:	b6 01       	movw	r22, r12
 69c:	2a e0       	ldi	r18, 0x0A	; 10
 69e:	30 e0       	ldi	r19, 0x00	; 0
 6a0:	40 e0       	ldi	r20, 0x00	; 0
 6a2:	50 e0       	ldi	r21, 0x00	; 0
 6a4:	0e 94 0c 05 	call	0xa18	; 0xa18 <__divmodsi4>
 6a8:	86 2f       	mov	r24, r22
 6aa:	be 01       	movw	r22, r28
 6ac:	80 5d       	subi	r24, 0xD0	; 208
 6ae:	df 91       	pop	r29
 6b0:	cf 91       	pop	r28
 6b2:	ff 90       	pop	r15
 6b4:	ef 90       	pop	r14
 6b6:	df 90       	pop	r13
 6b8:	cf 90       	pop	r12
 6ba:	0c 94 4d 00 	jmp	0x9a	; 0x9a <writeChar.part.0>
 6be:	24 e6       	ldi	r18, 0x64	; 100
 6c0:	30 e0       	ldi	r19, 0x00	; 0
 6c2:	40 e0       	ldi	r20, 0x00	; 0
 6c4:	50 e0       	ldi	r21, 0x00	; 0
 6c6:	0e 94 0c 05 	call	0xa18	; 0xa18 <__divmodsi4>
 6ca:	2a e0       	ldi	r18, 0x0A	; 10
 6cc:	30 e0       	ldi	r19, 0x00	; 0
 6ce:	40 e0       	ldi	r20, 0x00	; 0
 6d0:	50 e0       	ldi	r21, 0x00	; 0
 6d2:	0e 94 0c 05 	call	0xa18	; 0xa18 <__divmodsi4>
 6d6:	be 01       	movw	r22, r28
 6d8:	80 e3       	ldi	r24, 0x30	; 48
 6da:	82 0f       	add	r24, r18
 6dc:	0e 94 4d 00 	call	0x9a	; 0x9a <writeChar.part.0>
 6e0:	c0 91 30 01 	lds	r28, 0x0130	; 0x800130 <pp>
 6e4:	d0 91 31 01 	lds	r29, 0x0131	; 0x800131 <pp+0x1>
 6e8:	c8 cf       	rjmp	.-112    	; 0x67a <printAt+0x20>

000006ea <computePrimes>:
 6ea:	ec 01       	movw	r28, r24
 6ec:	81 2c       	mov	r8, r1
 6ee:	91 2c       	mov	r9, r1
 6f0:	54 01       	movw	r10, r8
 6f2:	83 94       	inc	r8
 6f4:	83 e0       	ldi	r24, 0x03	; 3
 6f6:	88 16       	cp	r8, r24
 6f8:	91 04       	cpc	r9, r1
 6fa:	a1 04       	cpc	r10, r1
 6fc:	b1 04       	cpc	r11, r1
 6fe:	e4 f0       	brlt	.+56     	; 0x738 <computePrimes+0x4e>
 700:	80 fe       	sbrs	r8, 0
 702:	1f c0       	rjmp	.+62     	; 0x742 <computePrimes+0x58>
 704:	83 e0       	ldi	r24, 0x03	; 3
 706:	c8 2e       	mov	r12, r24
 708:	d1 2c       	mov	r13, r1
 70a:	e1 2c       	mov	r14, r1
 70c:	f1 2c       	mov	r15, r1
 70e:	0d c0       	rjmp	.+26     	; 0x72a <computePrimes+0x40>
 710:	8f ef       	ldi	r24, 0xFF	; 255
 712:	c8 1a       	sub	r12, r24
 714:	d8 0a       	sbc	r13, r24
 716:	e8 0a       	sbc	r14, r24
 718:	f8 0a       	sbc	r15, r24
 71a:	c5 01       	movw	r24, r10
 71c:	b4 01       	movw	r22, r8
 71e:	0e 94 0c 05 	call	0xa18	; 0xa18 <__divmodsi4>
 722:	67 2b       	or	r22, r23
 724:	68 2b       	or	r22, r24
 726:	69 2b       	or	r22, r25
 728:	61 f0       	breq	.+24     	; 0x742 <computePrimes+0x58>
 72a:	96 01       	movw	r18, r12
 72c:	a7 01       	movw	r20, r14
 72e:	c8 14       	cp	r12, r8
 730:	d9 04       	cpc	r13, r9
 732:	ea 04       	cpc	r14, r10
 734:	fb 04       	cpc	r15, r11
 736:	61 f7       	brne	.-40     	; 0x710 <computePrimes+0x26>
 738:	ae 01       	movw	r20, r28
 73a:	c5 01       	movw	r24, r10
 73c:	b4 01       	movw	r22, r8
 73e:	0e 94 2d 03 	call	0x65a	; 0x65a <printAt>
 742:	8f ef       	ldi	r24, 0xFF	; 255
 744:	88 1a       	sub	r8, r24
 746:	98 0a       	sbc	r9, r24
 748:	a8 0a       	sbc	r10, r24
 74a:	b8 0a       	sbc	r11, r24
 74c:	d3 cf       	rjmp	.-90     	; 0x6f4 <computePrimes+0xa>

0000074e <main>:
	}

}

int main() {
	CLKPR = (0x80);
 74e:	e1 e6       	ldi	r30, 0x61	; 97
 750:	f0 e0       	ldi	r31, 0x00	; 0
 752:	80 e8       	ldi	r24, 0x80	; 128
 754:	80 83       	st	Z, r24
	CLKPR = (0x00);
 756:	10 82       	st	Z, r1
     *
     * returns: none
     */

    /* Asynchronous clock, 1/3 bias, 1/4 duty cycle,   25 segments */
    LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
 758:	87 eb       	ldi	r24, 0xB7	; 183
 75a:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
    /* Set volt to 3.35V */
    LCDCCR = (1<<LCDCC3) |(1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
 75e:	8f e0       	ldi	r24, 0x0F	; 15
 760:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
    /* Clock division factor to 8, and prescaler to 16 */
    LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
 764:	87 e0       	ldi	r24, 0x07	; 7
 766:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
    /* low power waveform, no frame interrupt, no blanking */
    LCDCRA = (1<<LCDAB) | (1<<LCDEN);
 76a:	80 ec       	ldi	r24, 0xC0	; 192
 76c:	80 93 e4 00 	sts	0x00E4, r24	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
	CLKPR = (0x80);
	CLKPR = (0x00);
	LCD_init();
	//blink();
    //spawn(blink, 0);
	spawn(computePrimes, 0);
 770:	60 e0       	ldi	r22, 0x00	; 0
 772:	70 e0       	ldi	r23, 0x00	; 0
 774:	85 e7       	ldi	r24, 0x75	; 117
 776:	93 e0       	ldi	r25, 0x03	; 3
 778:	0e 94 e1 03 	call	0x7c2	; 0x7c2 <spawn>
    //button();
	
}
 77c:	80 e0       	ldi	r24, 0x00	; 0
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	08 95       	ret

00000782 <dispatch>:

int resetBlinkCounter() {
	DISABLE();
	blinkCounter = 0;
	ENABLE();
}
 782:	cf 93       	push	r28
 784:	df 93       	push	r29
 786:	00 d0       	rcall	.+0      	; 0x788 <dispatch+0x6>
 788:	cd b7       	in	r28, 0x3d	; 61
 78a:	de b7       	in	r29, 0x3e	; 62
 78c:	9a 83       	std	Y+2, r25	; 0x02
 78e:	89 83       	std	Y+1, r24	; 0x01
 790:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 794:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 798:	06 96       	adiw	r24, 0x06	; 6
 79a:	0e 94 4d 05 	call	0xa9a	; 0xa9a <setjmp>
 79e:	89 2b       	or	r24, r25
 7a0:	29 f0       	breq	.+10     	; 0x7ac <dispatch+0x2a>
 7a2:	0f 90       	pop	r0
 7a4:	0f 90       	pop	r0
 7a6:	df 91       	pop	r29
 7a8:	cf 91       	pop	r28
 7aa:	08 95       	ret
 7ac:	89 81       	ldd	r24, Y+1	; 0x01
 7ae:	9a 81       	ldd	r25, Y+2	; 0x02
 7b0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 7b4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
 7b8:	61 e0       	ldi	r22, 0x01	; 1
 7ba:	70 e0       	ldi	r23, 0x00	; 0
 7bc:	06 96       	adiw	r24, 0x06	; 6
 7be:	0e 94 6d 05 	call	0xada	; 0xada <longjmp>

000007c2 <spawn>:
		current = next;
		longjmp(next->context,1);
	}
}

void spawn(void (* function)(int), int arg) {
 7c2:	cf 93       	push	r28
 7c4:	df 93       	push	r29
 7c6:	00 d0       	rcall	.+0      	; 0x7c8 <spawn+0x6>
 7c8:	cd b7       	in	r28, 0x3d	; 61
 7ca:	de b7       	in	r29, 0x3e	; 62
	thread newp;

	DISABLE();
 7cc:	f8 94       	cli
	if (!initialized) initialize();
 7ce:	20 91 2c 01 	lds	r18, 0x012C	; 0x80012c <initialized>
 7d2:	30 91 2d 01 	lds	r19, 0x012D	; 0x80012d <initialized+0x1>
 7d6:	23 2b       	or	r18, r19
 7d8:	09 f4       	brne	.+2      	; 0x7dc <spawn+0x1a>
 7da:	43 c0       	rjmp	.+134    	; 0x862 <spawn+0xa0>
		q->next = p;
	}
}

static thread dequeue(thread *queue) {
	thread p = *queue;
 7dc:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <freeQ>
 7e0:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <freeQ+0x1>
 7e4:	3a 83       	std	Y+2, r19	; 0x02
 7e6:	29 83       	std	Y+1, r18	; 0x01
	if (*queue) {
 7e8:	23 2b       	or	r18, r19
 7ea:	09 f4       	brne	.+2      	; 0x7ee <spawn+0x2c>
 7ec:	6f c0       	rjmp	.+222    	; 0x8cc <spawn+0x10a>
		*queue = (*queue)->next;
 7ee:	e9 81       	ldd	r30, Y+1	; 0x01
 7f0:	fa 81       	ldd	r31, Y+2	; 0x02
 7f2:	44 81       	ldd	r20, Z+4	; 0x04
 7f4:	55 81       	ldd	r21, Z+5	; 0x05
 7f6:	50 93 03 01 	sts	0x0103, r21	; 0x800103 <freeQ+0x1>
 7fa:	40 93 02 01 	sts	0x0102, r20	; 0x800102 <freeQ>

	DISABLE();
	if (!initialized) initialize();

	newp = dequeue(&freeQ);
	newp->function = function;
 7fe:	91 83       	std	Z+1, r25	; 0x01
 800:	80 83       	st	Z, r24
	newp->arg = arg;
 802:	73 83       	std	Z+3, r23	; 0x03
 804:	62 83       	std	Z+2, r22	; 0x02
	newp->next = NULL;
 806:	15 82       	std	Z+5, r1	; 0x05
 808:	14 82       	std	Z+4, r1	; 0x04
	if (setjmp(newp->context) == 1) {
 80a:	cf 01       	movw	r24, r30
 80c:	06 96       	adiw	r24, 0x06	; 6
 80e:	0e 94 4d 05 	call	0xa9a	; 0xa9a <setjmp>
 812:	01 97       	sbiw	r24, 0x01	; 1
 814:	09 f4       	brne	.+2      	; 0x818 <spawn+0x56>
 816:	67 c0       	rjmp	.+206    	; 0x8e6 <spawn+0x124>
		current->function(current->arg);
		DISABLE();
		enqueue(current, &freeQ);
		dispatch(dequeue(&readyQ));
	}
	SETSTACK(&newp->context, &newp->stack);
 818:	e9 81       	ldd	r30, Y+1	; 0x01
 81a:	fa 81       	ldd	r31, Y+2	; 0x02
 81c:	36 96       	adiw	r30, 0x06	; 6
 81e:	89 81       	ldd	r24, Y+1	; 0x01
 820:	9a 81       	ldd	r25, Y+2	; 0x02
 822:	87 59       	subi	r24, 0x97	; 151
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	91 8b       	std	Z+17, r25	; 0x11
 828:	80 8b       	std	Z+16, r24	; 0x10
 82a:	93 8b       	std	Z+19, r25	; 0x13
 82c:	82 8b       	std	Z+18, r24	; 0x12
	DISABLE();
	blinkCounter = 0;
	ENABLE();
}
static void enqueue(thread p, thread *queue) {
	p->next = NULL;
 82e:	e9 81       	ldd	r30, Y+1	; 0x01
 830:	fa 81       	ldd	r31, Y+2	; 0x02
 832:	15 82       	std	Z+5, r1	; 0x05
 834:	14 82       	std	Z+4, r1	; 0x04
	if (*queue == NULL) {
 836:	e0 91 2e 01 	lds	r30, 0x012E	; 0x80012e <readyQ>
 83a:	f0 91 2f 01 	lds	r31, 0x012F	; 0x80012f <readyQ+0x1>
 83e:	30 97       	sbiw	r30, 0x00	; 0
 840:	11 f4       	brne	.+4      	; 0x846 <spawn+0x84>
 842:	45 c0       	rjmp	.+138    	; 0x8ce <spawn+0x10c>
		*queue = p;
		} else {
		thread q = *queue;
		while (q->next)
 844:	fc 01       	movw	r30, r24
 846:	84 81       	ldd	r24, Z+4	; 0x04
 848:	95 81       	ldd	r25, Z+5	; 0x05
 84a:	00 97       	sbiw	r24, 0x00	; 0
 84c:	d9 f7       	brne	.-10     	; 0x844 <spawn+0x82>
		q = q->next;
		q->next = p;
 84e:	89 81       	ldd	r24, Y+1	; 0x01
 850:	9a 81       	ldd	r25, Y+2	; 0x02
 852:	95 83       	std	Z+5, r25	; 0x05
 854:	84 83       	std	Z+4, r24	; 0x04
		dispatch(dequeue(&readyQ));
	}
	SETSTACK(&newp->context, &newp->stack);

	enqueue(newp, &readyQ);
	ENABLE();
 856:	78 94       	sei
}
 858:	0f 90       	pop	r0
 85a:	0f 90       	pop	r0
 85c:	df 91       	pop	r29
 85e:	cf 91       	pop	r28
 860:	08 95       	ret
int blinkCounter = 0;

static void initialize(void) {
	int i;
	for (i=0; i<NTHREADS-1; i++)
	threads[i].next = &threads[i+1];
 862:	22 e1       	ldi	r18, 0x12	; 18
 864:	32 e0       	ldi	r19, 0x02	; 2
 866:	30 93 aa 01 	sts	0x01AA, r19	; 0x8001aa <threads+0x5>
 86a:	20 93 a9 01 	sts	0x01A9, r18	; 0x8001a9 <threads+0x4>
 86e:	2f e7       	ldi	r18, 0x7F	; 127
 870:	32 e0       	ldi	r19, 0x02	; 2
 872:	30 93 17 02 	sts	0x0217, r19	; 0x800217 <threads+0x72>
 876:	20 93 16 02 	sts	0x0216, r18	; 0x800216 <threads+0x71>
 87a:	2c ee       	ldi	r18, 0xEC	; 236
 87c:	32 e0       	ldi	r19, 0x02	; 2
 87e:	30 93 84 02 	sts	0x0284, r19	; 0x800284 <threads+0xdf>
 882:	20 93 83 02 	sts	0x0283, r18	; 0x800283 <threads+0xde>
	threads[NTHREADS-1].next = NULL;
 886:	10 92 f1 02 	sts	0x02F1, r1	; 0x8002f1 <threads+0x14c>
 88a:	10 92 f0 02 	sts	0x02F0, r1	; 0x8002f0 <threads+0x14b>
	
	

	// Enable interrupts
 	EIMSK |= (1<<PCIE1); // 7th bit enabled for PCIE1 (1<<7)
 88e:	ef 9a       	sbi	0x1d, 7	; 29

// 	8Mh clock

// 	Set OC1A to 1
 	TCCR1A |= (1<<COM1A0) | (1<<COM1A1);
 890:	e0 e8       	ldi	r30, 0x80	; 128
 892:	f0 e0       	ldi	r31, 0x00	; 0
 894:	20 81       	ld	r18, Z
 896:	20 6c       	ori	r18, 0xC0	; 192
 898:	20 83       	st	Z, r18
// 	Set the mode to CTC and prescaler to 1024
 	TCCR1B |= (1<<WGM12) | (1<<CS10) | (1<<CS12);
 89a:	e1 e8       	ldi	r30, 0x81	; 129
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	20 81       	ld	r18, Z
 8a0:	2d 60       	ori	r18, 0x0D	; 13
 8a2:	20 83       	st	Z, r18
// 	Activate "timer output"
  	TIMSK1 |= (1<<OCIE1A);
 8a4:	ef e6       	ldi	r30, 0x6F	; 111
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	20 81       	ld	r18, Z
 8aa:	22 60       	ori	r18, 0x02	; 2
 8ac:	20 83       	st	Z, r18
	   	
// 	// set timer to 0
 	//TCNT1 = 0;
	initialized = 1;
 8ae:	21 e0       	ldi	r18, 0x01	; 1
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	30 93 2d 01 	sts	0x012D, r19	; 0x80012d <initialized+0x1>
 8b6:	20 93 2c 01 	sts	0x012C, r18	; 0x80012c <initialized>
		q->next = p;
	}
}

static thread dequeue(thread *queue) {
	thread p = *queue;
 8ba:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <freeQ>
 8be:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <freeQ+0x1>
 8c2:	3a 83       	std	Y+2, r19	; 0x02
 8c4:	29 83       	std	Y+1, r18	; 0x01
	if (*queue) {
 8c6:	23 2b       	or	r18, r19
 8c8:	09 f0       	breq	.+2      	; 0x8cc <spawn+0x10a>
 8ca:	91 cf       	rjmp	.-222    	; 0x7ee <spawn+0x2c>
 8cc:	ff cf       	rjmp	.-2      	; 0x8cc <spawn+0x10a>
	ENABLE();
}
static void enqueue(thread p, thread *queue) {
	p->next = NULL;
	if (*queue == NULL) {
		*queue = p;
 8ce:	29 81       	ldd	r18, Y+1	; 0x01
 8d0:	3a 81       	ldd	r19, Y+2	; 0x02
 8d2:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <readyQ+0x1>
 8d6:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <readyQ>
		dispatch(dequeue(&readyQ));
	}
	SETSTACK(&newp->context, &newp->stack);

	enqueue(newp, &readyQ);
	ENABLE();
 8da:	78 94       	sei
}
 8dc:	0f 90       	pop	r0
 8de:	0f 90       	pop	r0
 8e0:	df 91       	pop	r29
 8e2:	cf 91       	pop	r28
 8e4:	08 95       	ret
	newp = dequeue(&freeQ);
	newp->function = function;
	newp->arg = arg;
	newp->next = NULL;
	if (setjmp(newp->context) == 1) {
		ENABLE();
 8e6:	78 94       	sei
		current->function(current->arg);
 8e8:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 8ec:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
 8f0:	ed 91       	ld	r30, X+
 8f2:	fc 91       	ld	r31, X
 8f4:	11 97       	sbiw	r26, 0x01	; 1
 8f6:	12 96       	adiw	r26, 0x02	; 2
 8f8:	8d 91       	ld	r24, X+
 8fa:	9c 91       	ld	r25, X
 8fc:	13 97       	sbiw	r26, 0x03	; 3
 8fe:	09 95       	icall
		DISABLE();
 900:	f8 94       	cli
		enqueue(current, &freeQ);
 902:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 906:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
	DISABLE();
	blinkCounter = 0;
	ENABLE();
}
static void enqueue(thread p, thread *queue) {
	p->next = NULL;
 90a:	15 96       	adiw	r26, 0x05	; 5
 90c:	1c 92       	st	X, r1
 90e:	1e 92       	st	-X, r1
 910:	14 97       	sbiw	r26, 0x04	; 4
	if (*queue == NULL) {
 912:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <freeQ>
 916:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <freeQ+0x1>
 91a:	30 97       	sbiw	r30, 0x00	; 0
 91c:	11 f4       	brne	.+4      	; 0x922 <spawn+0x160>
 91e:	17 c0       	rjmp	.+46     	; 0x94e <spawn+0x18c>
		*queue = p;
		} else {
		thread q = *queue;
		while (q->next)
 920:	fc 01       	movw	r30, r24
 922:	84 81       	ldd	r24, Z+4	; 0x04
 924:	95 81       	ldd	r25, Z+5	; 0x05
 926:	00 97       	sbiw	r24, 0x00	; 0
 928:	d9 f7       	brne	.-10     	; 0x920 <spawn+0x15e>
		q = q->next;
		q->next = p;
 92a:	b5 83       	std	Z+5, r27	; 0x05
 92c:	a4 83       	std	Z+4, r26	; 0x04
	}
}

static thread dequeue(thread *queue) {
	thread p = *queue;
 92e:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <readyQ>
 932:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <readyQ+0x1>
	if (*queue) {
 936:	00 97       	sbiw	r24, 0x00	; 0
 938:	a1 f0       	breq	.+40     	; 0x962 <spawn+0x1a0>
		*queue = (*queue)->next;
 93a:	fc 01       	movw	r30, r24
 93c:	24 81       	ldd	r18, Z+4	; 0x04
 93e:	35 81       	ldd	r19, Z+5	; 0x05
 940:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <readyQ+0x1>
 944:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <readyQ>
	if (setjmp(newp->context) == 1) {
		ENABLE();
		current->function(current->arg);
		DISABLE();
		enqueue(current, &freeQ);
		dispatch(dequeue(&readyQ));
 948:	0e 94 c1 03 	call	0x782	; 0x782 <dispatch>
 94c:	65 cf       	rjmp	.-310    	; 0x818 <spawn+0x56>
	ENABLE();
}
static void enqueue(thread p, thread *queue) {
	p->next = NULL;
	if (*queue == NULL) {
		*queue = p;
 94e:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <freeQ+0x1>
 952:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <freeQ>
		q->next = p;
	}
}

static thread dequeue(thread *queue) {
	thread p = *queue;
 956:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <readyQ>
 95a:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <readyQ+0x1>
	if (*queue) {
 95e:	00 97       	sbiw	r24, 0x00	; 0
 960:	61 f7       	brne	.-40     	; 0x93a <spawn+0x178>
 962:	ff cf       	rjmp	.-2      	; 0x962 <spawn+0x1a0>

00000964 <yield>:
	ENABLE();
}

void yield(void) {
	
	DISABLE();
 964:	f8 94       	cli
	enqueue(current,(&readyQ));
 966:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
 96a:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
	DISABLE();
	blinkCounter = 0;
	ENABLE();
}
static void enqueue(thread p, thread *queue) {
	p->next = NULL;
 96e:	fc 01       	movw	r30, r24
 970:	15 82       	std	Z+5, r1	; 0x05
 972:	14 82       	std	Z+4, r1	; 0x04
	if (*queue == NULL) {
 974:	a0 91 2e 01 	lds	r26, 0x012E	; 0x80012e <readyQ>
 978:	b0 91 2f 01 	lds	r27, 0x012F	; 0x80012f <readyQ+0x1>
 97c:	10 97       	sbiw	r26, 0x00	; 0
 97e:	b9 f0       	breq	.+46     	; 0x9ae <yield+0x4a>
 980:	fd 01       	movw	r30, r26
 982:	01 c0       	rjmp	.+2      	; 0x986 <yield+0x22>
		*queue = p;
		} else {
		thread q = *queue;
		while (q->next)
 984:	f9 01       	movw	r30, r18
 986:	24 81       	ldd	r18, Z+4	; 0x04
 988:	35 81       	ldd	r19, Z+5	; 0x05
 98a:	21 15       	cp	r18, r1
 98c:	31 05       	cpc	r19, r1
 98e:	d1 f7       	brne	.-12     	; 0x984 <yield+0x20>
		q = q->next;
		q->next = p;
 990:	95 83       	std	Z+5, r25	; 0x05
 992:	84 83       	std	Z+4, r24	; 0x04
 994:	14 96       	adiw	r26, 0x04	; 4
 996:	2d 91       	ld	r18, X+
 998:	3c 91       	ld	r19, X
 99a:	15 97       	sbiw	r26, 0x05	; 5
 99c:	cd 01       	movw	r24, r26
}

static thread dequeue(thread *queue) {
	thread p = *queue;
	if (*queue) {
		*queue = (*queue)->next;
 99e:	30 93 2f 01 	sts	0x012F, r19	; 0x80012f <readyQ+0x1>
 9a2:	20 93 2e 01 	sts	0x012E, r18	; 0x80012e <readyQ>

void yield(void) {
	
	DISABLE();
	enqueue(current,(&readyQ));
	dispatch(dequeue(&readyQ));
 9a6:	0e 94 c1 03 	call	0x782	; 0x782 <dispatch>
	ENABLE();
 9aa:	78 94       	sei
}
 9ac:	08 95       	ret
	}
}

static thread dequeue(thread *queue) {
	thread p = *queue;
	if (*queue) {
 9ae:	00 97       	sbiw	r24, 0x00	; 0
 9b0:	09 f4       	brne	.+2      	; 0x9b4 <yield+0x50>
 9b2:	ff cf       	rjmp	.-2      	; 0x9b2 <yield+0x4e>
 9b4:	20 e0       	ldi	r18, 0x00	; 0
 9b6:	30 e0       	ldi	r19, 0x00	; 0
 9b8:	f2 cf       	rjmp	.-28     	; 0x99e <yield+0x3a>

000009ba <__vector_7>:
	DISABLE();
	blinkCounter++;
	ENABLE();
}

ISR(TIMER1_COMPA_vect) { // Step 2
 9ba:	1f 92       	push	r1
 9bc:	0f 92       	push	r0
 9be:	0f b6       	in	r0, 0x3f	; 63
 9c0:	0f 92       	push	r0
 9c2:	11 24       	eor	r1, r1
 9c4:	2f 93       	push	r18
 9c6:	3f 93       	push	r19
 9c8:	4f 93       	push	r20
 9ca:	5f 93       	push	r21
 9cc:	6f 93       	push	r22
 9ce:	7f 93       	push	r23
 9d0:	8f 93       	push	r24
 9d2:	9f 93       	push	r25
 9d4:	af 93       	push	r26
 9d6:	bf 93       	push	r27
 9d8:	ef 93       	push	r30
 9da:	ff 93       	push	r31
 	//TCNT1 = 0;
	initialized = 1;
}

void addBlinkCounter(){
	DISABLE();
 9dc:	f8 94       	cli
	blinkCounter++;
 9de:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <__data_end>
 9e2:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <__data_end+0x1>
 9e6:	01 96       	adiw	r24, 0x01	; 1
 9e8:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <__data_end+0x1>
 9ec:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <__data_end>
	ENABLE();
 9f0:	78 94       	sei
}

ISR(TIMER1_COMPA_vect) { // Step 2
	addBlinkCounter();
	yield();
 9f2:	0e 94 b2 04 	call	0x964	; 0x964 <yield>
	
}
 9f6:	ff 91       	pop	r31
 9f8:	ef 91       	pop	r30
 9fa:	bf 91       	pop	r27
 9fc:	af 91       	pop	r26
 9fe:	9f 91       	pop	r25
 a00:	8f 91       	pop	r24
 a02:	7f 91       	pop	r23
 a04:	6f 91       	pop	r22
 a06:	5f 91       	pop	r21
 a08:	4f 91       	pop	r20
 a0a:	3f 91       	pop	r19
 a0c:	2f 91       	pop	r18
 a0e:	0f 90       	pop	r0
 a10:	0f be       	out	0x3f, r0	; 63
 a12:	0f 90       	pop	r0
 a14:	1f 90       	pop	r1
 a16:	18 95       	reti

00000a18 <__divmodsi4>:
 a18:	05 2e       	mov	r0, r21
 a1a:	97 fb       	bst	r25, 7
 a1c:	1e f4       	brtc	.+6      	; 0xa24 <__divmodsi4+0xc>
 a1e:	00 94       	com	r0
 a20:	0e 94 23 05 	call	0xa46	; 0xa46 <__negsi2>
 a24:	57 fd       	sbrc	r21, 7
 a26:	07 d0       	rcall	.+14     	; 0xa36 <__divmodsi4_neg2>
 a28:	0e 94 2b 05 	call	0xa56	; 0xa56 <__udivmodsi4>
 a2c:	07 fc       	sbrc	r0, 7
 a2e:	03 d0       	rcall	.+6      	; 0xa36 <__divmodsi4_neg2>
 a30:	4e f4       	brtc	.+18     	; 0xa44 <__divmodsi4_exit>
 a32:	0c 94 23 05 	jmp	0xa46	; 0xa46 <__negsi2>

00000a36 <__divmodsi4_neg2>:
 a36:	50 95       	com	r21
 a38:	40 95       	com	r20
 a3a:	30 95       	com	r19
 a3c:	21 95       	neg	r18
 a3e:	3f 4f       	sbci	r19, 0xFF	; 255
 a40:	4f 4f       	sbci	r20, 0xFF	; 255
 a42:	5f 4f       	sbci	r21, 0xFF	; 255

00000a44 <__divmodsi4_exit>:
 a44:	08 95       	ret

00000a46 <__negsi2>:
 a46:	90 95       	com	r25
 a48:	80 95       	com	r24
 a4a:	70 95       	com	r23
 a4c:	61 95       	neg	r22
 a4e:	7f 4f       	sbci	r23, 0xFF	; 255
 a50:	8f 4f       	sbci	r24, 0xFF	; 255
 a52:	9f 4f       	sbci	r25, 0xFF	; 255
 a54:	08 95       	ret

00000a56 <__udivmodsi4>:
 a56:	a1 e2       	ldi	r26, 0x21	; 33
 a58:	1a 2e       	mov	r1, r26
 a5a:	aa 1b       	sub	r26, r26
 a5c:	bb 1b       	sub	r27, r27
 a5e:	fd 01       	movw	r30, r26
 a60:	0d c0       	rjmp	.+26     	; 0xa7c <__udivmodsi4_ep>

00000a62 <__udivmodsi4_loop>:
 a62:	aa 1f       	adc	r26, r26
 a64:	bb 1f       	adc	r27, r27
 a66:	ee 1f       	adc	r30, r30
 a68:	ff 1f       	adc	r31, r31
 a6a:	a2 17       	cp	r26, r18
 a6c:	b3 07       	cpc	r27, r19
 a6e:	e4 07       	cpc	r30, r20
 a70:	f5 07       	cpc	r31, r21
 a72:	20 f0       	brcs	.+8      	; 0xa7c <__udivmodsi4_ep>
 a74:	a2 1b       	sub	r26, r18
 a76:	b3 0b       	sbc	r27, r19
 a78:	e4 0b       	sbc	r30, r20
 a7a:	f5 0b       	sbc	r31, r21

00000a7c <__udivmodsi4_ep>:
 a7c:	66 1f       	adc	r22, r22
 a7e:	77 1f       	adc	r23, r23
 a80:	88 1f       	adc	r24, r24
 a82:	99 1f       	adc	r25, r25
 a84:	1a 94       	dec	r1
 a86:	69 f7       	brne	.-38     	; 0xa62 <__udivmodsi4_loop>
 a88:	60 95       	com	r22
 a8a:	70 95       	com	r23
 a8c:	80 95       	com	r24
 a8e:	90 95       	com	r25
 a90:	9b 01       	movw	r18, r22
 a92:	ac 01       	movw	r20, r24
 a94:	bd 01       	movw	r22, r26
 a96:	cf 01       	movw	r24, r30
 a98:	08 95       	ret

00000a9a <setjmp>:
 a9a:	dc 01       	movw	r26, r24
 a9c:	2d 92       	st	X+, r2
 a9e:	3d 92       	st	X+, r3
 aa0:	4d 92       	st	X+, r4
 aa2:	5d 92       	st	X+, r5
 aa4:	6d 92       	st	X+, r6
 aa6:	7d 92       	st	X+, r7
 aa8:	8d 92       	st	X+, r8
 aaa:	9d 92       	st	X+, r9
 aac:	ad 92       	st	X+, r10
 aae:	bd 92       	st	X+, r11
 ab0:	cd 92       	st	X+, r12
 ab2:	dd 92       	st	X+, r13
 ab4:	ed 92       	st	X+, r14
 ab6:	fd 92       	st	X+, r15
 ab8:	0d 93       	st	X+, r16
 aba:	1d 93       	st	X+, r17
 abc:	cd 93       	st	X+, r28
 abe:	dd 93       	st	X+, r29
 ac0:	ff 91       	pop	r31
 ac2:	ef 91       	pop	r30
 ac4:	8d b7       	in	r24, 0x3d	; 61
 ac6:	8d 93       	st	X+, r24
 ac8:	8e b7       	in	r24, 0x3e	; 62
 aca:	8d 93       	st	X+, r24
 acc:	8f b7       	in	r24, 0x3f	; 63
 ace:	8d 93       	st	X+, r24
 ad0:	ed 93       	st	X+, r30
 ad2:	fd 93       	st	X+, r31
 ad4:	88 27       	eor	r24, r24
 ad6:	99 27       	eor	r25, r25
 ad8:	09 94       	ijmp

00000ada <longjmp>:
 ada:	dc 01       	movw	r26, r24
 adc:	cb 01       	movw	r24, r22
 ade:	81 30       	cpi	r24, 0x01	; 1
 ae0:	91 05       	cpc	r25, r1
 ae2:	81 1d       	adc	r24, r1
 ae4:	2d 90       	ld	r2, X+
 ae6:	3d 90       	ld	r3, X+
 ae8:	4d 90       	ld	r4, X+
 aea:	5d 90       	ld	r5, X+
 aec:	6d 90       	ld	r6, X+
 aee:	7d 90       	ld	r7, X+
 af0:	8d 90       	ld	r8, X+
 af2:	9d 90       	ld	r9, X+
 af4:	ad 90       	ld	r10, X+
 af6:	bd 90       	ld	r11, X+
 af8:	cd 90       	ld	r12, X+
 afa:	dd 90       	ld	r13, X+
 afc:	ed 90       	ld	r14, X+
 afe:	fd 90       	ld	r15, X+
 b00:	0d 91       	ld	r16, X+
 b02:	1d 91       	ld	r17, X+
 b04:	cd 91       	ld	r28, X+
 b06:	dd 91       	ld	r29, X+
 b08:	ed 91       	ld	r30, X+
 b0a:	fd 91       	ld	r31, X+
 b0c:	0d 90       	ld	r0, X+
 b0e:	f8 94       	cli
 b10:	fe bf       	out	0x3e, r31	; 62
 b12:	0f be       	out	0x3f, r0	; 63
 b14:	ed bf       	out	0x3d, r30	; 61
 b16:	ed 91       	ld	r30, X+
 b18:	fd 91       	ld	r31, X+
 b1a:	09 94       	ijmp

00000b1c <_exit>:
 b1c:	f8 94       	cli

00000b1e <__stop_program>:
 b1e:	ff cf       	rjmp	.-2      	; 0xb1e <__stop_program>
