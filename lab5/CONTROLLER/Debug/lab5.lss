
lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000030  00800100  00002170  00002204  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002170  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000358  00800130  00800130  00002234  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002234  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002264  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000218  00000000  00000000  000022a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002630  00000000  00000000  000024bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eac  00000000  00000000  00004aec  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000150c  00000000  00000000  00005998  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c20  00000000  00000000  00006ea4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000090a  00000000  00000000  00007ac4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000272f  00000000  00000000  000083ce  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000001d8  00000000  00000000  0000aafd  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
       4:	0c 94 91 04 	jmp	0x922	; 0x922 <__vector_1>
       8:	0c 94 00 05 	jmp	0xa00	; 0xa00 <__vector_2>
       c:	0c 94 6f 05 	jmp	0xade	; 0xade <__vector_3>
      10:	0c 94 de 05 	jmp	0xbbc	; 0xbbc <__vector_4>
      14:	0c 94 4d 06 	jmp	0xc9a	; 0xc9a <__vector_5>
      18:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      1c:	0c 94 b8 0c 	jmp	0x1970	; 0x1970 <__vector_7>
      20:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      24:	0c 94 66 0c 	jmp	0x18cc	; 0x18cc <__vector_9>
      28:	0c 94 bc 06 	jmp	0xd78	; 0xd78 <__vector_10>
      2c:	0c 94 2b 07 	jmp	0xe56	; 0xe56 <__vector_11>
      30:	0c 94 9a 07 	jmp	0xf34	; 0xf34 <__vector_12>
      34:	0c 94 09 08 	jmp	0x1012	; 0x1012 <__vector_13>
      38:	0c 94 78 08 	jmp	0x10f0	; 0x10f0 <__vector_14>
      3c:	0c 94 e7 08 	jmp	0x11ce	; 0x11ce <__vector_15>
      40:	0c 94 56 09 	jmp	0x12ac	; 0x12ac <__vector_16>
      44:	0c 94 c5 09 	jmp	0x138a	; 0x138a <__vector_17>
      48:	0c 94 34 0a 	jmp	0x1468	; 0x1468 <__vector_18>
      4c:	0c 94 a3 0a 	jmp	0x1546	; 0x1546 <__vector_19>
      50:	0c 94 12 0b 	jmp	0x1624	; 0x1624 <__vector_20>
      54:	0c 94 81 0b 	jmp	0x1702	; 0x1702 <__vector_21>
      58:	0c 94 f0 0b 	jmp	0x17e0	; 0x17e0 <__vector_22>
      5c:	b5 00       	.word	0x00b5	; ????
      5e:	9d 00       	.word	0x009d	; ????
      60:	a0 00       	.word	0x00a0	; ????
      62:	a3 00       	.word	0x00a3	; ????
      64:	a6 00       	.word	0x00a6	; ????
      66:	a9 00       	.word	0x00a9	; ????
      68:	ac 00       	.word	0x00ac	; ????
      6a:	af 00       	.word	0x00af	; ????
      6c:	b2 00       	.word	0x00b2	; ????

0000006e <__ctors_end>:
      6e:	11 24       	eor	r1, r1
      70:	1f be       	out	0x3f, r1	; 63
      72:	cf ef       	ldi	r28, 0xFF	; 255
      74:	d4 e0       	ldi	r29, 0x04	; 4
      76:	de bf       	out	0x3e, r29	; 62
      78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
      7a:	11 e0       	ldi	r17, 0x01	; 1
      7c:	a0 e0       	ldi	r26, 0x00	; 0
      7e:	b1 e0       	ldi	r27, 0x01	; 1
      80:	e0 e7       	ldi	r30, 0x70	; 112
      82:	f1 e2       	ldi	r31, 0x21	; 33
      84:	02 c0       	rjmp	.+4      	; 0x8a <__do_copy_data+0x10>
      86:	05 90       	lpm	r0, Z+
      88:	0d 92       	st	X+, r0
      8a:	a0 33       	cpi	r26, 0x30	; 48
      8c:	b1 07       	cpc	r27, r17
      8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0xc>

00000090 <__do_clear_bss>:
      90:	24 e0       	ldi	r18, 0x04	; 4
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b1 e0       	ldi	r27, 0x01	; 1
      96:	01 c0       	rjmp	.+2      	; 0x9a <.do_clear_bss_start>

00000098 <.do_clear_bss_loop>:
      98:	1d 92       	st	X+, r1

0000009a <.do_clear_bss_start>:
      9a:	a8 38       	cpi	r26, 0x88	; 136
      9c:	b2 07       	cpc	r27, r18
      9e:	e1 f7       	brne	.-8      	; 0x98 <.do_clear_bss_loop>
      a0:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <main>
      a4:	0c 94 b6 10 	jmp	0x216c	; 0x216c <_exit>

000000a8 <__bad_interrupt>:
      a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ac <LCD_init>:
     *
     * returns: none
     */
	
	//Initialize clock 
	CLKPR = 0x80;
      ac:	e1 e6       	ldi	r30, 0x61	; 97
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	80 e8       	ldi	r24, 0x80	; 128
      b2:	80 83       	st	Z, r24
	CLKPR = 0x00;
      b4:	10 82       	st	Z, r1
	
    /* Asynchronous clock, 1/3 bias, 1/4 duty cycle,   25 segments */
    LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
      b6:	87 eb       	ldi	r24, 0xB7	; 183
      b8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
    /* Set volt to 3.35V */
    LCDCCR = (1<<LCDCC3) |(1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
      bc:	8f e0       	ldi	r24, 0x0F	; 15
      be:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
    /* Clock division factor to 8, and prescaler to 16 */
    LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
      c2:	87 e0       	ldi	r24, 0x07	; 7
      c4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
    /* low power waveform, no frame interrupt, no blanking */
    LCDCRA = (1<<LCDAB) | (1<<LCDEN);
      c8:	90 ec       	ldi	r25, 0xC0	; 192
      ca:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

    PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
      ce:	85 b1       	in	r24, 0x05	; 5
      d0:	80 6d       	ori	r24, 0xD0	; 208
      d2:	85 b9       	out	0x05, r24	; 5
    PORTE |= (1<<PE2)|(1<<PE3);
      d4:	8e b1       	in	r24, 0x0e	; 14
      d6:	8c 60       	ori	r24, 0x0C	; 12
      d8:	8e b9       	out	0x0e, r24	; 14
	DDRB   = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
      da:	8f e2       	ldi	r24, 0x2F	; 47
      dc:	84 b9       	out	0x04, r24	; 4
	DDRE   = (1<<DDE6)|(1<<DDE4);
      de:	80 e5       	ldi	r24, 0x50	; 80
      e0:	8d b9       	out	0x0d, r24	; 13
   
    // Enable external interrupts
	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
      e2:	8c e0       	ldi	r24, 0x0C	; 12
      e4:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
      e8:	80 ed       	ldi	r24, 0xD0	; 208
      ea:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
	EIMSK = (1 << PCIE1)|(1 << PCIE0);
      ee:	9d bb       	out	0x1d, r25	; 29
      f0:	08 95       	ret

000000f2 <writeChar>:
}

void writeChar(char ch, int pos){
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	64 97       	sbiw	r28, 0x14	; 20
      fc:	0f b6       	in	r0, 0x3f	; 63
      fe:	f8 94       	cli
     100:	de bf       	out	0x3e, r29	; 62
     102:	0f be       	out	0x3f, r0	; 63
     104:	cd bf       	out	0x3d, r28	; 61
	#define SCC_6  0x1F41
	#define SCC_7  0x0111
	#define SCC_8  0x1F51
	#define SCC_9  0x0B51

	int numArr[10] = {SCC_0, SCC_1 , SCC_2, SCC_3, SCC_4, SCC_5, SCC_6, SCC_7, SCC_8, SCC_9};
     106:	94 e1       	ldi	r25, 0x14	; 20
     108:	eb e1       	ldi	r30, 0x1B	; 27
     10a:	f1 e0       	ldi	r31, 0x01	; 1
     10c:	de 01       	movw	r26, r28
     10e:	11 96       	adiw	r26, 0x01	; 1
     110:	01 90       	ld	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	9a 95       	dec	r25
     116:	e1 f7       	brne	.-8      	; 0x110 <writeChar+0x1e>
     */

    int i = 0;

    /* checks if pos is within fixed range */
    if(pos < 0 || pos > 5) {
     118:	66 30       	cpi	r22, 0x06	; 6
     11a:	71 05       	cpc	r23, r1
     11c:	08 f0       	brcs	.+2      	; 0x120 <writeChar+0x2e>
     11e:	9d c1       	rjmp	.+826    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        return;
    }

    /* index select of character */
    switch(ch){
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	fc 01       	movw	r30, r24
     124:	f1 97       	sbiw	r30, 0x31	; 49
     126:	e9 30       	cpi	r30, 0x09	; 9
     128:	f1 05       	cpc	r31, r1
     12a:	20 f4       	brcc	.+8      	; 0x134 <writeChar+0x42>
     12c:	e2 5d       	subi	r30, 0xD2	; 210
     12e:	ff 4f       	sbci	r31, 0xFF	; 255
     130:	0c 94 6f 10 	jmp	0x20de	; 0x20de <__tablejump2__>
     * position (int pos) if within fixed range.
     *
     * returns: none
     */

    int i = 0;
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	1a c0       	rjmp	.+52     	; 0x16e <writeChar+0x7c>
            break;
        case '1':
            i = 1;
            break;
        case '2':
            i = 2;
     13a:	82 e0       	ldi	r24, 0x02	; 2
     13c:	90 e0       	ldi	r25, 0x00	; 0
            break;
     13e:	17 c0       	rjmp	.+46     	; 0x16e <writeChar+0x7c>
        case '3':
            i = 3;
     140:	83 e0       	ldi	r24, 0x03	; 3
     142:	90 e0       	ldi	r25, 0x00	; 0
            break;
     144:	14 c0       	rjmp	.+40     	; 0x16e <writeChar+0x7c>
        case '4':
            i = 4;
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	90 e0       	ldi	r25, 0x00	; 0
            break;
     14a:	11 c0       	rjmp	.+34     	; 0x16e <writeChar+0x7c>
        case '5':
            i = 5;
     14c:	85 e0       	ldi	r24, 0x05	; 5
     14e:	90 e0       	ldi	r25, 0x00	; 0
            break;
     150:	0e c0       	rjmp	.+28     	; 0x16e <writeChar+0x7c>
        case '6':
            i = 6;
     152:	86 e0       	ldi	r24, 0x06	; 6
     154:	90 e0       	ldi	r25, 0x00	; 0
            break;
     156:	0b c0       	rjmp	.+22     	; 0x16e <writeChar+0x7c>
        case '7':
            i = 7;
     158:	87 e0       	ldi	r24, 0x07	; 7
     15a:	90 e0       	ldi	r25, 0x00	; 0
            break;
     15c:	08 c0       	rjmp	.+16     	; 0x16e <writeChar+0x7c>
        case '8':
            i = 8;
     15e:	88 e0       	ldi	r24, 0x08	; 8
     160:	90 e0       	ldi	r25, 0x00	; 0
            break;
     162:	05 c0       	rjmp	.+10     	; 0x16e <writeChar+0x7c>
        case '9':
            i = 9;
     164:	89 e0       	ldi	r24, 0x09	; 9
     166:	90 e0       	ldi	r25, 0x00	; 0
            break;
     168:	02 c0       	rjmp	.+4      	; 0x16e <writeChar+0x7c>
    switch(ch){
        case '0':
            i = 0;
            break;
        case '1':
            i = 1;
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
        default:
            break;
    }

    /* writes translated char at pos to LCD */
    switch(pos){
     16e:	62 30       	cpi	r22, 0x02	; 2
     170:	71 05       	cpc	r23, r1
     172:	09 f4       	brne	.+2      	; 0x176 <writeChar+0x84>
     174:	89 c0       	rjmp	.+274    	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
     176:	44 f4       	brge	.+16     	; 0x188 <writeChar+0x96>
     178:	61 15       	cp	r22, r1
     17a:	71 05       	cpc	r23, r1
     17c:	81 f0       	breq	.+32     	; 0x19e <writeChar+0xac>
     17e:	61 30       	cpi	r22, 0x01	; 1
     180:	71 05       	cpc	r23, r1
     182:	09 f4       	brne	.+2      	; 0x186 <writeChar+0x94>
     184:	44 c0       	rjmp	.+136    	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     186:	69 c1       	rjmp	.+722    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
     188:	64 30       	cpi	r22, 0x04	; 4
     18a:	71 05       	cpc	r23, r1
     18c:	09 f4       	brne	.+2      	; 0x190 <writeChar+0x9e>
     18e:	f1 c0       	rjmp	.+482    	; 0x372 <__EEPROM_REGION_LENGTH__+0x172>
     190:	0c f4       	brge	.+2      	; 0x194 <writeChar+0xa2>
     192:	b2 c0       	rjmp	.+356    	; 0x2f8 <__EEPROM_REGION_LENGTH__+0xf8>
     194:	65 30       	cpi	r22, 0x05	; 5
     196:	71 05       	cpc	r23, r1
     198:	09 f4       	brne	.+2      	; 0x19c <writeChar+0xaa>
     19a:	23 c1       	rjmp	.+582    	; 0x3e2 <__EEPROM_REGION_LENGTH__+0x1e2>
     19c:	5e c1       	rjmp	.+700    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 0:
            LCDDR0  = (LCDDR0&0x00F0)  |  (numArr[i] & 0x000F);
     19e:	ac ee       	ldi	r26, 0xEC	; 236
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	2c 91       	ld	r18, X
     1a4:	88 0f       	add	r24, r24
     1a6:	99 1f       	adc	r25, r25
     1a8:	e1 e0       	ldi	r30, 0x01	; 1
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	ec 0f       	add	r30, r28
     1ae:	fd 1f       	adc	r31, r29
     1b0:	e8 0f       	add	r30, r24
     1b2:	f9 1f       	adc	r31, r25
     1b4:	80 81       	ld	r24, Z
     1b6:	92 2f       	mov	r25, r18
     1b8:	90 7f       	andi	r25, 0xF0	; 240
     1ba:	8f 70       	andi	r24, 0x0F	; 15
     1bc:	89 2b       	or	r24, r25
     1be:	8c 93       	st	X, r24
            LCDDR5  = (LCDDR5&0x00F0)  | ((numArr[i] & 0x00F0))>>4;
     1c0:	a1 ef       	ldi	r26, 0xF1	; 241
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	2c 91       	ld	r18, X
     1c6:	80 81       	ld	r24, Z
     1c8:	91 81       	ldd	r25, Z+1	; 0x01
     1ca:	80 7f       	andi	r24, 0xF0	; 240
     1cc:	99 27       	eor	r25, r25
     1ce:	95 95       	asr	r25
     1d0:	87 95       	ror	r24
     1d2:	95 95       	asr	r25
     1d4:	87 95       	ror	r24
     1d6:	95 95       	asr	r25
     1d8:	87 95       	ror	r24
     1da:	95 95       	asr	r25
     1dc:	87 95       	ror	r24
     1de:	92 2f       	mov	r25, r18
     1e0:	90 7f       	andi	r25, 0xF0	; 240
     1e2:	89 2b       	or	r24, r25
     1e4:	8c 93       	st	X, r24
            LCDDR10 = (LCDDR10&0x00F0) | ((numArr[i] & 0x0F00))>>8;
     1e6:	a6 ef       	ldi	r26, 0xF6	; 246
     1e8:	b0 e0       	ldi	r27, 0x00	; 0
     1ea:	8c 91       	ld	r24, X
     1ec:	20 81       	ld	r18, Z
     1ee:	31 81       	ldd	r19, Z+1	; 0x01
     1f0:	22 27       	eor	r18, r18
     1f2:	3f 70       	andi	r19, 0x0F	; 15
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	83 2b       	or	r24, r19
     1f8:	8c 93       	st	X, r24
            LCDDR15 = (LCDDR15&0x00F0) | ((numArr[i] & 0xF000))>>12;
     1fa:	ab ef       	ldi	r26, 0xFB	; 251
     1fc:	b0 e0       	ldi	r27, 0x00	; 0
     1fe:	8c 91       	ld	r24, X
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	92 95       	swap	r25
     204:	9f 70       	andi	r25, 0x0F	; 15
     206:	80 7f       	andi	r24, 0xF0	; 240
     208:	89 2b       	or	r24, r25
     20a:	8c 93       	st	X, r24
            break;
     20c:	26 c1       	rjmp	.+588    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 1:
            LCDDR0  = (LCDDR0&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     20e:	ac ee       	ldi	r26, 0xEC	; 236
     210:	b0 e0       	ldi	r27, 0x00	; 0
     212:	2c 91       	ld	r18, X
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	e1 e0       	ldi	r30, 0x01	; 1
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	ec 0f       	add	r30, r28
     21e:	fd 1f       	adc	r31, r29
     220:	e8 0f       	add	r30, r24
     222:	f9 1f       	adc	r31, r25
     224:	80 81       	ld	r24, Z
     226:	91 81       	ldd	r25, Z+1	; 0x01
     228:	82 95       	swap	r24
     22a:	92 95       	swap	r25
     22c:	90 7f       	andi	r25, 0xF0	; 240
     22e:	98 27       	eor	r25, r24
     230:	80 7f       	andi	r24, 0xF0	; 240
     232:	98 27       	eor	r25, r24
     234:	92 2f       	mov	r25, r18
     236:	9f 70       	andi	r25, 0x0F	; 15
     238:	89 2b       	or	r24, r25
     23a:	8c 93       	st	X, r24
            LCDDR5  = (LCDDR5&0x000F)  |   (numArr[i] & 0x00F0);
     23c:	a1 ef       	ldi	r26, 0xF1	; 241
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	9c 91       	ld	r25, X
     242:	80 81       	ld	r24, Z
     244:	9f 70       	andi	r25, 0x0F	; 15
     246:	80 7f       	andi	r24, 0xF0	; 240
     248:	89 2b       	or	r24, r25
     24a:	8c 93       	st	X, r24
            LCDDR10 = (LCDDR10&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     24c:	a6 ef       	ldi	r26, 0xF6	; 246
     24e:	b0 e0       	ldi	r27, 0x00	; 0
     250:	2c 91       	ld	r18, X
     252:	80 81       	ld	r24, Z
     254:	91 81       	ldd	r25, Z+1	; 0x01
     256:	88 27       	eor	r24, r24
     258:	9f 70       	andi	r25, 0x0F	; 15
     25a:	95 95       	asr	r25
     25c:	87 95       	ror	r24
     25e:	95 95       	asr	r25
     260:	87 95       	ror	r24
     262:	95 95       	asr	r25
     264:	87 95       	ror	r24
     266:	95 95       	asr	r25
     268:	87 95       	ror	r24
     26a:	92 2f       	mov	r25, r18
     26c:	9f 70       	andi	r25, 0x0F	; 15
     26e:	89 2b       	or	r24, r25
     270:	8c 93       	st	X, r24
            LCDDR15 = (LCDDR15&0x000F) |  ((numArr[i] & 0xF000))>>8;
     272:	ab ef       	ldi	r26, 0xFB	; 251
     274:	b0 e0       	ldi	r27, 0x00	; 0
     276:	8c 91       	ld	r24, X
     278:	20 81       	ld	r18, Z
     27a:	31 81       	ldd	r19, Z+1	; 0x01
     27c:	22 27       	eor	r18, r18
     27e:	30 7f       	andi	r19, 0xF0	; 240
     280:	8f 70       	andi	r24, 0x0F	; 15
     282:	83 2b       	or	r24, r19
     284:	8c 93       	st	X, r24
            break;
     286:	e9 c0       	rjmp	.+466    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 2:
            LCDDR1  = (LCDDR1&0x00F0)  |  (numArr[i] & 0x000F);
     288:	ad ee       	ldi	r26, 0xED	; 237
     28a:	b0 e0       	ldi	r27, 0x00	; 0
     28c:	2c 91       	ld	r18, X
     28e:	88 0f       	add	r24, r24
     290:	99 1f       	adc	r25, r25
     292:	e1 e0       	ldi	r30, 0x01	; 1
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	ec 0f       	add	r30, r28
     298:	fd 1f       	adc	r31, r29
     29a:	e8 0f       	add	r30, r24
     29c:	f9 1f       	adc	r31, r25
     29e:	80 81       	ld	r24, Z
     2a0:	92 2f       	mov	r25, r18
     2a2:	90 7f       	andi	r25, 0xF0	; 240
     2a4:	8f 70       	andi	r24, 0x0F	; 15
     2a6:	89 2b       	or	r24, r25
     2a8:	8c 93       	st	X, r24
            LCDDR6  = (LCDDR6&0x00F0)  |  ((numArr[i] & 0x00F0))>>4;
     2aa:	a2 ef       	ldi	r26, 0xF2	; 242
     2ac:	b0 e0       	ldi	r27, 0x00	; 0
     2ae:	2c 91       	ld	r18, X
     2b0:	80 81       	ld	r24, Z
     2b2:	91 81       	ldd	r25, Z+1	; 0x01
     2b4:	80 7f       	andi	r24, 0xF0	; 240
     2b6:	99 27       	eor	r25, r25
     2b8:	95 95       	asr	r25
     2ba:	87 95       	ror	r24
     2bc:	95 95       	asr	r25
     2be:	87 95       	ror	r24
     2c0:	95 95       	asr	r25
     2c2:	87 95       	ror	r24
     2c4:	95 95       	asr	r25
     2c6:	87 95       	ror	r24
     2c8:	92 2f       	mov	r25, r18
     2ca:	90 7f       	andi	r25, 0xF0	; 240
     2cc:	89 2b       	or	r24, r25
     2ce:	8c 93       	st	X, r24
            LCDDR11 = (LCDDR11&0x00F0) |  ((numArr[i] & 0x0F00))>>8;
     2d0:	a7 ef       	ldi	r26, 0xF7	; 247
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	8c 91       	ld	r24, X
     2d6:	20 81       	ld	r18, Z
     2d8:	31 81       	ldd	r19, Z+1	; 0x01
     2da:	22 27       	eor	r18, r18
     2dc:	3f 70       	andi	r19, 0x0F	; 15
     2de:	80 7f       	andi	r24, 0xF0	; 240
     2e0:	83 2b       	or	r24, r19
     2e2:	8c 93       	st	X, r24
            LCDDR16 = (LCDDR16&0x00F0) |  ((numArr[i] & 0xF000))>>12;
     2e4:	ac ef       	ldi	r26, 0xFC	; 252
     2e6:	b0 e0       	ldi	r27, 0x00	; 0
     2e8:	8c 91       	ld	r24, X
     2ea:	91 81       	ldd	r25, Z+1	; 0x01
     2ec:	92 95       	swap	r25
     2ee:	9f 70       	andi	r25, 0x0F	; 15
     2f0:	80 7f       	andi	r24, 0xF0	; 240
     2f2:	89 2b       	or	r24, r25
     2f4:	8c 93       	st	X, r24
            break;
     2f6:	b1 c0       	rjmp	.+354    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 3:
            LCDDR1  = (LCDDR1&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     2f8:	ad ee       	ldi	r26, 0xED	; 237
     2fa:	b0 e0       	ldi	r27, 0x00	; 0
     2fc:	2c 91       	ld	r18, X
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	e1 e0       	ldi	r30, 0x01	; 1
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	ec 0f       	add	r30, r28
     308:	fd 1f       	adc	r31, r29
     30a:	e8 0f       	add	r30, r24
     30c:	f9 1f       	adc	r31, r25
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	82 95       	swap	r24
     314:	92 95       	swap	r25
     316:	90 7f       	andi	r25, 0xF0	; 240
     318:	98 27       	eor	r25, r24
     31a:	80 7f       	andi	r24, 0xF0	; 240
     31c:	98 27       	eor	r25, r24
     31e:	92 2f       	mov	r25, r18
     320:	9f 70       	andi	r25, 0x0F	; 15
     322:	89 2b       	or	r24, r25
     324:	8c 93       	st	X, r24
            LCDDR6  = (LCDDR6&0x000F)  |   (numArr[i] & 0x00F0);
     326:	a2 ef       	ldi	r26, 0xF2	; 242
     328:	b0 e0       	ldi	r27, 0x00	; 0
     32a:	9c 91       	ld	r25, X
     32c:	80 81       	ld	r24, Z
     32e:	9f 70       	andi	r25, 0x0F	; 15
     330:	80 7f       	andi	r24, 0xF0	; 240
     332:	89 2b       	or	r24, r25
     334:	8c 93       	st	X, r24
            LCDDR11 = (LCDDR11&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     336:	a7 ef       	ldi	r26, 0xF7	; 247
     338:	b0 e0       	ldi	r27, 0x00	; 0
     33a:	2c 91       	ld	r18, X
     33c:	80 81       	ld	r24, Z
     33e:	91 81       	ldd	r25, Z+1	; 0x01
     340:	88 27       	eor	r24, r24
     342:	9f 70       	andi	r25, 0x0F	; 15
     344:	95 95       	asr	r25
     346:	87 95       	ror	r24
     348:	95 95       	asr	r25
     34a:	87 95       	ror	r24
     34c:	95 95       	asr	r25
     34e:	87 95       	ror	r24
     350:	95 95       	asr	r25
     352:	87 95       	ror	r24
     354:	92 2f       	mov	r25, r18
     356:	9f 70       	andi	r25, 0x0F	; 15
     358:	89 2b       	or	r24, r25
     35a:	8c 93       	st	X, r24
            LCDDR16 = (LCDDR16&0x000F) |  ((numArr[i] & 0xF000))>>8;
     35c:	ac ef       	ldi	r26, 0xFC	; 252
     35e:	b0 e0       	ldi	r27, 0x00	; 0
     360:	8c 91       	ld	r24, X
     362:	20 81       	ld	r18, Z
     364:	31 81       	ldd	r19, Z+1	; 0x01
     366:	22 27       	eor	r18, r18
     368:	30 7f       	andi	r19, 0xF0	; 240
     36a:	8f 70       	andi	r24, 0x0F	; 15
     36c:	83 2b       	or	r24, r19
     36e:	8c 93       	st	X, r24
            break;
     370:	74 c0       	rjmp	.+232    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 4:
            LCDDR2  = (LCDDR2&0x00F0)  | ((numArr[i] & 0x000F));
     372:	ae ee       	ldi	r26, 0xEE	; 238
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	2c 91       	ld	r18, X
     378:	88 0f       	add	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	e1 e0       	ldi	r30, 0x01	; 1
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	ec 0f       	add	r30, r28
     382:	fd 1f       	adc	r31, r29
     384:	e8 0f       	add	r30, r24
     386:	f9 1f       	adc	r31, r25
     388:	80 81       	ld	r24, Z
     38a:	92 2f       	mov	r25, r18
     38c:	90 7f       	andi	r25, 0xF0	; 240
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	89 2b       	or	r24, r25
     392:	8c 93       	st	X, r24
            LCDDR7  = (LCDDR7&0x00F0)  | ((numArr[i] & 0x00F0))>>4;
     394:	a3 ef       	ldi	r26, 0xF3	; 243
     396:	b0 e0       	ldi	r27, 0x00	; 0
     398:	2c 91       	ld	r18, X
     39a:	80 81       	ld	r24, Z
     39c:	91 81       	ldd	r25, Z+1	; 0x01
     39e:	80 7f       	andi	r24, 0xF0	; 240
     3a0:	99 27       	eor	r25, r25
     3a2:	95 95       	asr	r25
     3a4:	87 95       	ror	r24
     3a6:	95 95       	asr	r25
     3a8:	87 95       	ror	r24
     3aa:	95 95       	asr	r25
     3ac:	87 95       	ror	r24
     3ae:	95 95       	asr	r25
     3b0:	87 95       	ror	r24
     3b2:	92 2f       	mov	r25, r18
     3b4:	90 7f       	andi	r25, 0xF0	; 240
     3b6:	89 2b       	or	r24, r25
     3b8:	8c 93       	st	X, r24
            LCDDR12 = (LCDDR12&0x00F0) | ((numArr[i] & 0x0F00))>>8;
     3ba:	a8 ef       	ldi	r26, 0xF8	; 248
     3bc:	b0 e0       	ldi	r27, 0x00	; 0
     3be:	8c 91       	ld	r24, X
     3c0:	20 81       	ld	r18, Z
     3c2:	31 81       	ldd	r19, Z+1	; 0x01
     3c4:	22 27       	eor	r18, r18
     3c6:	3f 70       	andi	r19, 0x0F	; 15
     3c8:	80 7f       	andi	r24, 0xF0	; 240
     3ca:	83 2b       	or	r24, r19
     3cc:	8c 93       	st	X, r24
            LCDDR17 = (LCDDR17&0x00F0) | ((numArr[i] & 0xF000))>>12;
     3ce:	ad ef       	ldi	r26, 0xFD	; 253
     3d0:	b0 e0       	ldi	r27, 0x00	; 0
     3d2:	8c 91       	ld	r24, X
     3d4:	91 81       	ldd	r25, Z+1	; 0x01
     3d6:	92 95       	swap	r25
     3d8:	9f 70       	andi	r25, 0x0F	; 15
     3da:	80 7f       	andi	r24, 0xF0	; 240
     3dc:	89 2b       	or	r24, r25
     3de:	8c 93       	st	X, r24
            break;
     3e0:	3c c0       	rjmp	.+120    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 5:
            LCDDR2  = (LCDDR2&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     3e2:	ae ee       	ldi	r26, 0xEE	; 238
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	2c 91       	ld	r18, X
     3e8:	88 0f       	add	r24, r24
     3ea:	99 1f       	adc	r25, r25
     3ec:	e1 e0       	ldi	r30, 0x01	; 1
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	ec 0f       	add	r30, r28
     3f2:	fd 1f       	adc	r31, r29
     3f4:	e8 0f       	add	r30, r24
     3f6:	f9 1f       	adc	r31, r25
     3f8:	80 81       	ld	r24, Z
     3fa:	91 81       	ldd	r25, Z+1	; 0x01
     3fc:	82 95       	swap	r24
     3fe:	92 95       	swap	r25
     400:	90 7f       	andi	r25, 0xF0	; 240
     402:	98 27       	eor	r25, r24
     404:	80 7f       	andi	r24, 0xF0	; 240
     406:	98 27       	eor	r25, r24
     408:	92 2f       	mov	r25, r18
     40a:	9f 70       	andi	r25, 0x0F	; 15
     40c:	89 2b       	or	r24, r25
     40e:	8c 93       	st	X, r24
            LCDDR7  = (LCDDR7&0x000F)  |  (numArr[i] & 0x00F0);
     410:	a3 ef       	ldi	r26, 0xF3	; 243
     412:	b0 e0       	ldi	r27, 0x00	; 0
     414:	9c 91       	ld	r25, X
     416:	80 81       	ld	r24, Z
     418:	9f 70       	andi	r25, 0x0F	; 15
     41a:	80 7f       	andi	r24, 0xF0	; 240
     41c:	89 2b       	or	r24, r25
     41e:	8c 93       	st	X, r24
            LCDDR12 = (LCDDR12&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     420:	a8 ef       	ldi	r26, 0xF8	; 248
     422:	b0 e0       	ldi	r27, 0x00	; 0
     424:	2c 91       	ld	r18, X
     426:	80 81       	ld	r24, Z
     428:	91 81       	ldd	r25, Z+1	; 0x01
     42a:	88 27       	eor	r24, r24
     42c:	9f 70       	andi	r25, 0x0F	; 15
     42e:	95 95       	asr	r25
     430:	87 95       	ror	r24
     432:	95 95       	asr	r25
     434:	87 95       	ror	r24
     436:	95 95       	asr	r25
     438:	87 95       	ror	r24
     43a:	95 95       	asr	r25
     43c:	87 95       	ror	r24
     43e:	92 2f       	mov	r25, r18
     440:	9f 70       	andi	r25, 0x0F	; 15
     442:	89 2b       	or	r24, r25
     444:	8c 93       	st	X, r24
            LCDDR17 = (LCDDR17&0x000F) |  ((numArr[i] & 0xF000))>>8;
     446:	ad ef       	ldi	r26, 0xFD	; 253
     448:	b0 e0       	ldi	r27, 0x00	; 0
     44a:	8c 91       	ld	r24, X
     44c:	20 81       	ld	r18, Z
     44e:	31 81       	ldd	r19, Z+1	; 0x01
     450:	22 27       	eor	r18, r18
     452:	30 7f       	andi	r19, 0xF0	; 240
     454:	8f 70       	andi	r24, 0x0F	; 15
     456:	83 2b       	or	r24, r19
     458:	8c 93       	st	X, r24
            break;
        default:
            break;
    }

}
     45a:	64 96       	adiw	r28, 0x14	; 20
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
     464:	cd bf       	out	0x3d, r28	; 61
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	08 95       	ret

0000046c <printAt>:


void printAt(uint8_t num, int pp) {
     46c:	0f 93       	push	r16
     46e:	1f 93       	push	r17
     470:	cf 93       	push	r28
     472:	df 93       	push	r29
     474:	d8 2f       	mov	r29, r24
     476:	8b 01       	movw	r16, r22
     *
     * returns: none
     */
	
  
    writeChar( (num % 100) / 10 + '0', pp);
     478:	89 e2       	ldi	r24, 0x29	; 41
     47a:	d8 9f       	mul	r29, r24
     47c:	81 2d       	mov	r24, r1
     47e:	11 24       	eor	r1, r1
     480:	82 95       	swap	r24
     482:	8f 70       	andi	r24, 0x0F	; 15
     484:	9d 2f       	mov	r25, r29
     486:	24 e6       	ldi	r18, 0x64	; 100
     488:	82 9f       	mul	r24, r18
     48a:	90 19       	sub	r25, r0
     48c:	11 24       	eor	r1, r1
     48e:	cd ec       	ldi	r28, 0xCD	; 205
     490:	9c 9f       	mul	r25, r28
     492:	81 2d       	mov	r24, r1
     494:	11 24       	eor	r1, r1
     496:	86 95       	lsr	r24
     498:	86 95       	lsr	r24
     49a:	86 95       	lsr	r24
     49c:	80 5d       	subi	r24, 0xD0	; 208
     49e:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
    pp++;
     4a2:	b8 01       	movw	r22, r16
     4a4:	6f 5f       	subi	r22, 0xFF	; 255
     4a6:	7f 4f       	sbci	r23, 0xFF	; 255
    writeChar( num % 10 + '0', pp);
     4a8:	dc 9f       	mul	r29, r28
     4aa:	c1 2d       	mov	r28, r1
     4ac:	11 24       	eor	r1, r1
     4ae:	c6 95       	lsr	r28
     4b0:	c6 95       	lsr	r28
     4b2:	c6 95       	lsr	r28
     4b4:	cc 0f       	add	r28, r28
     4b6:	8c 2f       	mov	r24, r28
     4b8:	88 0f       	add	r24, r24
     4ba:	88 0f       	add	r24, r24
     4bc:	c8 0f       	add	r28, r24
     4be:	8d 2f       	mov	r24, r29
     4c0:	8c 1b       	sub	r24, r28
     4c2:	80 5d       	subi	r24, 0xD0	; 208
     4c4:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
}
     4c8:	df 91       	pop	r29
     4ca:	cf 91       	pop	r28
     4cc:	1f 91       	pop	r17
     4ce:	0f 91       	pop	r16
     4d0:	08 95       	ret

000004d2 <USART_init>:
guiClass GUI = initGUI(NULL); // (pos)
Bridge B = initBridge(&GUI, 1); // (gui, direction)

void USART_init(void){
	// - Set baud rate prescaler.
	UBRR0H = (UBRR_VALUE >> 8);
     4d2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = UBRR_VALUE;
     4d6:	84 e3       	ldi	r24, 0x34	; 52
     4d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	// - Enable receiver and transmitter
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);
     4dc:	e1 ec       	ldi	r30, 0xC1	; 193
     4de:	f0 e0       	ldi	r31, 0x00	; 0
     4e0:	80 81       	ld	r24, Z
     4e2:	88 61       	ori	r24, 0x18	; 24
     4e4:	80 83       	st	Z, r24
	// - Set frame format: 8 data bits, no parity, 1 stop bit.
	UCSR0C |= (1 << UCSZ01) | (1 << UCSZ00);
     4e6:	e2 ec       	ldi	r30, 0xC2	; 194
     4e8:	f0 e0       	ldi	r31, 0x00	; 0
     4ea:	80 81       	ld	r24, Z
     4ec:	86 60       	ori	r24, 0x06	; 6
     4ee:	80 83       	st	Z, r24
     4f0:	08 95       	ret

000004f2 <USART_Receive>:
}


// - handles input data from simulation.
unsigned char USART_Receive(Bridge *b) {
     4f2:	cf 92       	push	r12
     4f4:	df 92       	push	r13
     4f6:	ef 92       	push	r14
     4f8:	ff 92       	push	r15
     4fa:	0f 93       	push	r16
     4fc:	1f 93       	push	r17
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
     502:	00 d0       	rcall	.+0      	; 0x504 <__stack+0x5>
     504:	1f 92       	push	r1
     506:	cd b7       	in	r28, 0x3d	; 61
     508:	de b7       	in	r29, 0x3e	; 62
     50a:	9b 83       	std	Y+3, r25	; 0x03
     50c:	8a 83       	std	Y+2, r24	; 0x02

	// - Wait for data to be received in buffer.
	while(!(UCSR0A & (1<<RXC0)));
     50e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     512:	88 23       	and	r24, r24
     514:	e4 f7       	brge	.-8      	; 0x50e <__stack+0xf>

	// - Make received input data from buffer 8 bit length for comparing.
	volatile uint8_t input = UDR0;
     516:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fc0c6>
     51a:	89 83       	std	Y+1, r24	; 0x01

	if (input == 0b0011) // - car enters bridge northbound.
     51c:	89 81       	ldd	r24, Y+1	; 0x01
     51e:	83 30       	cpi	r24, 0x03	; 3
     520:	a1 f4       	brne	.+40     	; 0x54a <__stack+0x4b>
	{
		
		ASYNC(&b, enterNorth, NULL); // - Add queueing car to bridge.
     522:	c1 2c       	mov	r12, r1
     524:	d1 2c       	mov	r13, r1
     526:	0f 2e       	mov	r0, r31
     528:	fe e8       	ldi	r31, 0x8E	; 142
     52a:	ef 2e       	mov	r14, r31
     52c:	ff e0       	ldi	r31, 0x0F	; 15
     52e:	ff 2e       	mov	r15, r31
     530:	f0 2d       	mov	r31, r0
     532:	8e 01       	movw	r16, r28
     534:	0e 5f       	subi	r16, 0xFE	; 254
     536:	1f 4f       	sbci	r17, 0xFF	; 255
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	a9 01       	movw	r20, r18
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	70 e0       	ldi	r23, 0x00	; 0
     542:	cb 01       	movw	r24, r22
     544:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
     548:	43 c0       	rjmp	.+134    	; 0x5d0 <__stack+0xd1>

	}
	else if (input == 0b1100) // - car enters bridge southbound.
     54a:	89 81       	ldd	r24, Y+1	; 0x01
     54c:	8c 30       	cpi	r24, 0x0C	; 12
     54e:	99 f4       	brne	.+38     	; 0x576 <__stack+0x77>
	{
		ASYNC(b, enterSouth, NULL); // - Add queueing car to bridge.
     550:	0a 81       	ldd	r16, Y+2	; 0x02
     552:	1b 81       	ldd	r17, Y+3	; 0x03
     554:	c1 2c       	mov	r12, r1
     556:	d1 2c       	mov	r13, r1
     558:	0f 2e       	mov	r0, r31
     55a:	f2 e5       	ldi	r31, 0x52	; 82
     55c:	ef 2e       	mov	r14, r31
     55e:	ff e0       	ldi	r31, 0x0F	; 15
     560:	ff 2e       	mov	r15, r31
     562:	f0 2d       	mov	r31, r0
     564:	20 e0       	ldi	r18, 0x00	; 0
     566:	30 e0       	ldi	r19, 0x00	; 0
     568:	a9 01       	movw	r20, r18
     56a:	60 e0       	ldi	r22, 0x00	; 0
     56c:	70 e0       	ldi	r23, 0x00	; 0
     56e:	cb 01       	movw	r24, r22
     570:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
     574:	2d c0       	rjmp	.+90     	; 0x5d0 <__stack+0xd1>

	}
	else if (input == 0b0001) // - car enters queue northbound.
     576:	89 81       	ldd	r24, Y+1	; 0x01
     578:	81 30       	cpi	r24, 0x01	; 1
     57a:	a1 f4       	brne	.+40     	; 0x5a4 <__stack+0xa5>
	{
		ASYNC(&b, NorthboundArrival, NULL); // - Add arriving car to queue.
     57c:	c1 2c       	mov	r12, r1
     57e:	d1 2c       	mov	r13, r1
     580:	0f 2e       	mov	r0, r31
     582:	f7 e0       	ldi	r31, 0x07	; 7
     584:	ef 2e       	mov	r14, r31
     586:	f0 e1       	ldi	r31, 0x10	; 16
     588:	ff 2e       	mov	r15, r31
     58a:	f0 2d       	mov	r31, r0
     58c:	8e 01       	movw	r16, r28
     58e:	0e 5f       	subi	r16, 0xFE	; 254
     590:	1f 4f       	sbci	r17, 0xFF	; 255
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	a9 01       	movw	r20, r18
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	cb 01       	movw	r24, r22
     59e:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
     5a2:	16 c0       	rjmp	.+44     	; 0x5d0 <__stack+0xd1>
	}
	else if (input == 0b0100) // - car enters queue southbound.
     5a4:	89 81       	ldd	r24, Y+1	; 0x01
     5a6:	84 30       	cpi	r24, 0x04	; 4
     5a8:	99 f4       	brne	.+38     	; 0x5d0 <__stack+0xd1>
	{
		ASYNC(&b, SouthboundArrival, NULL); // - Add arriving car to queue.
     5aa:	c1 2c       	mov	r12, r1
     5ac:	d1 2c       	mov	r13, r1
     5ae:	0f 2e       	mov	r0, r31
     5b0:	f5 e3       	ldi	r31, 0x35	; 53
     5b2:	ef 2e       	mov	r14, r31
     5b4:	f0 e1       	ldi	r31, 0x10	; 16
     5b6:	ff 2e       	mov	r15, r31
     5b8:	f0 2d       	mov	r31, r0
     5ba:	8e 01       	movw	r16, r28
     5bc:	0e 5f       	subi	r16, 0xFE	; 254
     5be:	1f 4f       	sbci	r17, 0xFF	; 255
     5c0:	20 e0       	ldi	r18, 0x00	; 0
     5c2:	30 e0       	ldi	r19, 0x00	; 0
     5c4:	a9 01       	movw	r20, r18
     5c6:	60 e0       	ldi	r22, 0x00	; 0
     5c8:	70 e0       	ldi	r23, 0x00	; 0
     5ca:	cb 01       	movw	r24, r22
     5cc:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
	}

}
     5d0:	0f 90       	pop	r0
     5d2:	0f 90       	pop	r0
     5d4:	0f 90       	pop	r0
     5d6:	df 91       	pop	r29
     5d8:	cf 91       	pop	r28
     5da:	1f 91       	pop	r17
     5dc:	0f 91       	pop	r16
     5de:	ff 90       	pop	r15
     5e0:	ef 90       	pop	r14
     5e2:	df 90       	pop	r13
     5e4:	cf 90       	pop	r12
     5e6:	08 95       	ret

000005e8 <main>:


int main() {
	USART_init(); // - initiate USART settings.
     5e8:	0e 94 69 02 	call	0x4d2	; 0x4d2 <USART_init>
	LCD_init(&GUI); // - initiate LCD.
     5ec:	80 e3       	ldi	r24, 0x30	; 48
     5ee:	91 e0       	ldi	r25, 0x01	; 1
     5f0:	0e 94 56 00 	call	0xac	; 0xac <LCD_init>
	TINYTIMBER(&B, init, NULL);
     5f4:	40 e0       	ldi	r20, 0x00	; 0
     5f6:	50 e0       	ldi	r21, 0x00	; 0
     5f8:	6a e5       	ldi	r22, 0x5A	; 90
     5fa:	70 e1       	ldi	r23, 0x10	; 16
     5fc:	80 e0       	ldi	r24, 0x00	; 0
     5fe:	91 e0       	ldi	r25, 0x01	; 1
     600:	0e 94 3b 0f 	call	0x1e76	; 0x1e76 <tinytimber>
	
	while(1) {
		USART_Receive(&B);
     604:	80 e0       	ldi	r24, 0x00	; 0
     606:	91 e0       	ldi	r25, 0x01	; 1
     608:	0e 94 79 02 	call	0x4f2	; 0x4f2 <USART_Receive>
     60c:	fb cf       	rjmp	.-10     	; 0x604 <main+0x1c>

0000060e <initialize>:
        char status;
        DISABLE(status);
        otable[i] = obj;
        mtable[i] = m;
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
        ENABLE(status);
     60e:	cf 93       	push	r28
     610:	df 93       	push	r29
     612:	00 d0       	rcall	.+0      	; 0x614 <initialize+0x6>
     614:	00 d0       	rcall	.+0      	; 0x616 <initialize+0x8>
     616:	cd b7       	in	r28, 0x3d	; 61
     618:	de b7       	in	r29, 0x3e	; 62
     61a:	80 e0       	ldi	r24, 0x00	; 0
     61c:	90 e0       	ldi	r25, 0x00	; 0
     61e:	18 c0       	rjmp	.+48     	; 0x650 <initialize+0x42>
     620:	ac 01       	movw	r20, r24
     622:	4f 5f       	subi	r20, 0xFF	; 255
     624:	5f 4f       	sbci	r21, 0xFF	; 255
     626:	9a 01       	movw	r18, r20
     628:	22 95       	swap	r18
     62a:	32 95       	swap	r19
     62c:	30 7f       	andi	r19, 0xF0	; 240
     62e:	32 27       	eor	r19, r18
     630:	20 7f       	andi	r18, 0xF0	; 240
     632:	32 27       	eor	r19, r18
     634:	28 5e       	subi	r18, 0xE8	; 232
     636:	3d 4f       	sbci	r19, 0xFD	; 253
     638:	82 95       	swap	r24
     63a:	92 95       	swap	r25
     63c:	90 7f       	andi	r25, 0xF0	; 240
     63e:	98 27       	eor	r25, r24
     640:	80 7f       	andi	r24, 0xF0	; 240
     642:	98 27       	eor	r25, r24
     644:	fc 01       	movw	r30, r24
     646:	e8 5e       	subi	r30, 0xE8	; 232
     648:	fd 4f       	sbci	r31, 0xFD	; 253
     64a:	31 83       	std	Z+1, r19	; 0x01
     64c:	20 83       	st	Z, r18
     64e:	ca 01       	movw	r24, r20
     650:	8e 30       	cpi	r24, 0x0E	; 14
     652:	91 05       	cpc	r25, r1
     654:	2c f3       	brlt	.-54     	; 0x620 <initialize+0x12>
     656:	10 92 f9 02 	sts	0x02F9, r1	; 0x8002f9 <messages+0xe1>
     65a:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <messages+0xe0>
     65e:	80 e0       	ldi	r24, 0x00	; 0
     660:	90 e0       	ldi	r25, 0x00	; 0
     662:	15 c0       	rjmp	.+42     	; 0x68e <initialize+0x80>
     664:	ac 01       	movw	r20, r24
     666:	4f 5f       	subi	r20, 0xFF	; 255
     668:	5f 4f       	sbci	r21, 0xFF	; 255
     66a:	6d e1       	ldi	r22, 0x1D	; 29
     66c:	64 9f       	mul	r22, r20
     66e:	90 01       	movw	r18, r0
     670:	65 9f       	mul	r22, r21
     672:	30 0d       	add	r19, r0
     674:	11 24       	eor	r1, r1
     676:	2d 59       	subi	r18, 0x9D	; 157
     678:	3e 4f       	sbci	r19, 0xFE	; 254
     67a:	68 9f       	mul	r22, r24
     67c:	f0 01       	movw	r30, r0
     67e:	69 9f       	mul	r22, r25
     680:	f0 0d       	add	r31, r0
     682:	11 24       	eor	r1, r1
     684:	ed 59       	subi	r30, 0x9D	; 157
     686:	fe 4f       	sbci	r31, 0xFE	; 254
     688:	31 83       	std	Z+1, r19	; 0x01
     68a:	20 83       	st	Z, r18
     68c:	ca 01       	movw	r24, r20
     68e:	83 30       	cpi	r24, 0x03	; 3
     690:	91 05       	cpc	r25, r1
     692:	44 f3       	brlt	.-48     	; 0x664 <initialize+0x56>
     694:	10 92 bb 01 	sts	0x01BB, r1	; 0x8001bb <threads+0x58>
     698:	10 92 ba 01 	sts	0x01BA, r1	; 0x8001ba <threads+0x57>
     69c:	1a 82       	std	Y+2, r1	; 0x02
     69e:	19 82       	std	Y+1, r1	; 0x01
     6a0:	32 c0       	rjmp	.+100    	; 0x706 <initialize+0xf8>
     6a2:	2d e1       	ldi	r18, 0x1D	; 29
     6a4:	49 81       	ldd	r20, Y+1	; 0x01
     6a6:	5a 81       	ldd	r21, Y+2	; 0x02
     6a8:	24 9f       	mul	r18, r20
     6aa:	c0 01       	movw	r24, r0
     6ac:	25 9f       	mul	r18, r21
     6ae:	90 0d       	add	r25, r0
     6b0:	11 24       	eor	r1, r1
     6b2:	fc 01       	movw	r30, r24
     6b4:	e7 59       	subi	r30, 0x97	; 151
     6b6:	fe 4f       	sbci	r31, 0xFE	; 254
     6b8:	fc 83       	std	Y+4, r31	; 0x04
     6ba:	eb 83       	std	Y+3, r30	; 0x03
     6bc:	cf 01       	movw	r24, r30
     6be:	0e 94 75 10 	call	0x20ea	; 0x20ea <setjmp>
     6c2:	20 e6       	ldi	r18, 0x60	; 96
     6c4:	49 81       	ldd	r20, Y+1	; 0x01
     6c6:	5a 81       	ldd	r21, Y+2	; 0x02
     6c8:	24 9f       	mul	r18, r20
     6ca:	c0 01       	movw	r24, r0
     6cc:	25 9f       	mul	r18, r21
     6ce:	90 0d       	add	r25, r0
     6d0:	11 24       	eor	r1, r1
     6d2:	8c 59       	subi	r24, 0x9C	; 156
     6d4:	9c 4f       	sbci	r25, 0xFC	; 252
     6d6:	eb 81       	ldd	r30, Y+3	; 0x03
     6d8:	fc 81       	ldd	r31, Y+4	; 0x04
     6da:	91 8b       	std	Z+17, r25	; 0x11
     6dc:	80 8b       	std	Z+16, r24	; 0x10
     6de:	93 8b       	std	Z+19, r25	; 0x13
     6e0:	82 8b       	std	Z+18, r24	; 0x12
     6e2:	83 ee       	ldi	r24, 0xE3	; 227
     6e4:	9e e0       	ldi	r25, 0x0E	; 14
     6e6:	96 8b       	std	Z+22, r25	; 0x16
     6e8:	85 8b       	std	Z+21, r24	; 0x15
     6ea:	8d e1       	ldi	r24, 0x1D	; 29
     6ec:	84 9f       	mul	r24, r20
     6ee:	f0 01       	movw	r30, r0
     6f0:	85 9f       	mul	r24, r21
     6f2:	f0 0d       	add	r31, r0
     6f4:	11 24       	eor	r1, r1
     6f6:	ed 59       	subi	r30, 0x9D	; 157
     6f8:	fe 4f       	sbci	r31, 0xFE	; 254
     6fa:	15 82       	std	Z+5, r1	; 0x05
     6fc:	14 82       	std	Z+4, r1	; 0x04
     6fe:	4f 5f       	subi	r20, 0xFF	; 255
     700:	5f 4f       	sbci	r21, 0xFF	; 255
     702:	5a 83       	std	Y+2, r21	; 0x02
     704:	49 83       	std	Y+1, r20	; 0x01
     706:	29 81       	ldd	r18, Y+1	; 0x01
     708:	3a 81       	ldd	r19, Y+2	; 0x02
     70a:	24 30       	cpi	r18, 0x04	; 4
     70c:	31 05       	cpc	r19, r1
     70e:	4c f2       	brlt	.-110    	; 0x6a2 <initialize+0x94>
     710:	eb ef       	ldi	r30, 0xFB	; 251
     712:	f1 e0       	ldi	r31, 0x01	; 1
     714:	11 82       	std	Z+1, r1	; 0x01
     716:	10 82       	st	Z, r1
     718:	15 82       	std	Z+5, r1	; 0x05
     71a:	14 82       	std	Z+4, r1	; 0x04
     71c:	13 82       	std	Z+3, r1	; 0x03
     71e:	12 82       	std	Z+2, r1	; 0x02
     720:	e1 e6       	ldi	r30, 0x61	; 97
     722:	f0 e0       	ldi	r31, 0x00	; 0
     724:	80 e8       	ldi	r24, 0x80	; 128
     726:	80 83       	st	Z, r24
     728:	10 82       	st	Z, r1
     72a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     72e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     732:	84 e0       	ldi	r24, 0x04	; 4
     734:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     73e:	0f 90       	pop	r0
     740:	0f 90       	pop	r0
     742:	0f 90       	pop	r0
     744:	0f 90       	pop	r0
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	08 95       	ret

0000074c <dispatch>:
     74c:	cf 93       	push	r28
     74e:	df 93       	push	r29
     750:	00 d0       	rcall	.+0      	; 0x752 <dispatch+0x6>
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	9a 83       	std	Y+2, r25	; 0x02
     758:	89 83       	std	Y+1, r24	; 0x01
     75a:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <current>
     75e:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <current+0x1>
     762:	06 96       	adiw	r24, 0x06	; 6
     764:	0e 94 75 10 	call	0x20ea	; 0x20ea <setjmp>
     768:	89 2b       	or	r24, r25
     76a:	59 f4       	brne	.+22     	; 0x782 <dispatch+0x36>
     76c:	89 81       	ldd	r24, Y+1	; 0x01
     76e:	9a 81       	ldd	r25, Y+2	; 0x02
     770:	90 93 14 01 	sts	0x0114, r25	; 0x800114 <current+0x1>
     774:	80 93 13 01 	sts	0x0113, r24	; 0x800113 <current>
     778:	61 e0       	ldi	r22, 0x01	; 1
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	06 96       	adiw	r24, 0x06	; 6
     77e:	0e 94 95 10 	call	0x212a	; 0x212a <longjmp>
     782:	0f 90       	pop	r0
     784:	0f 90       	pop	r0
     786:	df 91       	pop	r29
     788:	cf 91       	pop	r28
     78a:	08 95       	ret

0000078c <enqueueByDeadline>:
     78c:	0f 93       	push	r16
     78e:	1f 93       	push	r17
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	dc 01       	movw	r26, r24
     796:	cb 01       	movw	r24, r22
     798:	eb 01       	movw	r28, r22
     79a:	e8 81       	ld	r30, Y
     79c:	f9 81       	ldd	r31, Y+1	; 0x01
     79e:	c0 e0       	ldi	r28, 0x00	; 0
     7a0:	d0 e0       	ldi	r29, 0x00	; 0
     7a2:	04 c0       	rjmp	.+8      	; 0x7ac <enqueueByDeadline+0x20>
     7a4:	ef 01       	movw	r28, r30
     7a6:	01 90       	ld	r0, Z+
     7a8:	f0 81       	ld	r31, Z
     7aa:	e0 2d       	mov	r30, r0
     7ac:	30 97       	sbiw	r30, 0x00	; 0
     7ae:	79 f0       	breq	.+30     	; 0x7ce <enqueueByDeadline+0x42>
     7b0:	06 81       	ldd	r16, Z+6	; 0x06
     7b2:	17 81       	ldd	r17, Z+7	; 0x07
     7b4:	20 85       	ldd	r18, Z+8	; 0x08
     7b6:	31 85       	ldd	r19, Z+9	; 0x09
     7b8:	16 96       	adiw	r26, 0x06	; 6
     7ba:	4d 91       	ld	r20, X+
     7bc:	5d 91       	ld	r21, X+
     7be:	6d 91       	ld	r22, X+
     7c0:	7c 91       	ld	r23, X
     7c2:	19 97       	sbiw	r26, 0x09	; 9
     7c4:	40 17       	cp	r20, r16
     7c6:	51 07       	cpc	r21, r17
     7c8:	62 07       	cpc	r22, r18
     7ca:	73 07       	cpc	r23, r19
     7cc:	5c f7       	brge	.-42     	; 0x7a4 <enqueueByDeadline+0x18>
     7ce:	11 96       	adiw	r26, 0x01	; 1
     7d0:	fc 93       	st	X, r31
     7d2:	ee 93       	st	-X, r30
     7d4:	20 97       	sbiw	r28, 0x00	; 0
     7d6:	21 f4       	brne	.+8      	; 0x7e0 <enqueueByDeadline+0x54>
     7d8:	fc 01       	movw	r30, r24
     7da:	b1 83       	std	Z+1, r27	; 0x01
     7dc:	a0 83       	st	Z, r26
     7de:	02 c0       	rjmp	.+4      	; 0x7e4 <enqueueByDeadline+0x58>
     7e0:	b9 83       	std	Y+1, r27	; 0x01
     7e2:	a8 83       	st	Y, r26
     7e4:	df 91       	pop	r29
     7e6:	cf 91       	pop	r28
     7e8:	1f 91       	pop	r17
     7ea:	0f 91       	pop	r16
     7ec:	08 95       	ret

000007ee <enqueueByBaseline>:
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	dc 01       	movw	r26, r24
     7f8:	cb 01       	movw	r24, r22
     7fa:	eb 01       	movw	r28, r22
     7fc:	e8 81       	ld	r30, Y
     7fe:	f9 81       	ldd	r31, Y+1	; 0x01
     800:	c0 e0       	ldi	r28, 0x00	; 0
     802:	d0 e0       	ldi	r29, 0x00	; 0
     804:	04 c0       	rjmp	.+8      	; 0x80e <enqueueByBaseline+0x20>
     806:	ef 01       	movw	r28, r30
     808:	01 90       	ld	r0, Z+
     80a:	f0 81       	ld	r31, Z
     80c:	e0 2d       	mov	r30, r0
     80e:	30 97       	sbiw	r30, 0x00	; 0
     810:	79 f0       	breq	.+30     	; 0x830 <enqueueByBaseline+0x42>
     812:	02 81       	ldd	r16, Z+2	; 0x02
     814:	13 81       	ldd	r17, Z+3	; 0x03
     816:	24 81       	ldd	r18, Z+4	; 0x04
     818:	35 81       	ldd	r19, Z+5	; 0x05
     81a:	12 96       	adiw	r26, 0x02	; 2
     81c:	4d 91       	ld	r20, X+
     81e:	5d 91       	ld	r21, X+
     820:	6d 91       	ld	r22, X+
     822:	7c 91       	ld	r23, X
     824:	15 97       	sbiw	r26, 0x05	; 5
     826:	40 17       	cp	r20, r16
     828:	51 07       	cpc	r21, r17
     82a:	62 07       	cpc	r22, r18
     82c:	73 07       	cpc	r23, r19
     82e:	5c f7       	brge	.-42     	; 0x806 <enqueueByBaseline+0x18>
     830:	11 96       	adiw	r26, 0x01	; 1
     832:	fc 93       	st	X, r31
     834:	ee 93       	st	-X, r30
     836:	20 97       	sbiw	r28, 0x00	; 0
     838:	21 f4       	brne	.+8      	; 0x842 <enqueueByBaseline+0x54>
     83a:	fc 01       	movw	r30, r24
     83c:	b1 83       	std	Z+1, r27	; 0x01
     83e:	a0 83       	st	Z, r26
     840:	02 c0       	rjmp	.+4      	; 0x846 <enqueueByBaseline+0x58>
     842:	b9 83       	std	Y+1, r27	; 0x01
     844:	a8 83       	st	Y, r26
     846:	df 91       	pop	r29
     848:	cf 91       	pop	r28
     84a:	1f 91       	pop	r17
     84c:	0f 91       	pop	r16
     84e:	08 95       	ret

00000850 <dequeue>:
     850:	dc 01       	movw	r26, r24
     852:	ed 91       	ld	r30, X+
     854:	fc 91       	ld	r31, X
     856:	11 97       	sbiw	r26, 0x01	; 1
     858:	30 97       	sbiw	r30, 0x00	; 0
     85a:	59 f4       	brne	.+22     	; 0x872 <dequeue+0x22>
     85c:	8f ef       	ldi	r24, 0xFF	; 255
     85e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     862:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     866:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     86a:	81 e0       	ldi	r24, 0x01	; 1
     86c:	83 bf       	out	0x33, r24	; 51
     86e:	88 95       	sleep
     870:	fc cf       	rjmp	.-8      	; 0x86a <dequeue+0x1a>
     872:	20 81       	ld	r18, Z
     874:	31 81       	ldd	r19, Z+1	; 0x01
     876:	2d 93       	st	X+, r18
     878:	3c 93       	st	X, r19
     87a:	cf 01       	movw	r24, r30
     87c:	08 95       	ret

0000087e <insert>:
     87e:	fb 01       	movw	r30, r22
     880:	20 81       	ld	r18, Z
     882:	31 81       	ldd	r19, Z+1	; 0x01
     884:	fc 01       	movw	r30, r24
     886:	31 83       	std	Z+1, r19	; 0x01
     888:	20 83       	st	Z, r18
     88a:	fb 01       	movw	r30, r22
     88c:	91 83       	std	Z+1, r25	; 0x01
     88e:	80 83       	st	Z, r24
     890:	08 95       	ret

00000892 <push>:
     892:	fb 01       	movw	r30, r22
     894:	20 81       	ld	r18, Z
     896:	31 81       	ldd	r19, Z+1	; 0x01
     898:	fc 01       	movw	r30, r24
     89a:	31 83       	std	Z+1, r19	; 0x01
     89c:	20 83       	st	Z, r18
     89e:	fb 01       	movw	r30, r22
     8a0:	91 83       	std	Z+1, r25	; 0x01
     8a2:	80 83       	st	Z, r24
     8a4:	08 95       	ret

000008a6 <pop>:
     8a6:	dc 01       	movw	r26, r24
     8a8:	ed 91       	ld	r30, X+
     8aa:	fc 91       	ld	r31, X
     8ac:	11 97       	sbiw	r26, 0x01	; 1
     8ae:	20 81       	ld	r18, Z
     8b0:	31 81       	ldd	r19, Z+1	; 0x01
     8b2:	2d 93       	st	X+, r18
     8b4:	3c 93       	st	X, r19
     8b6:	cf 01       	movw	r24, r30
     8b8:	08 95       	ret

000008ba <schedule>:
     8ba:	cf 93       	push	r28
     8bc:	df 93       	push	r29
     8be:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <activeStack>
     8c2:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <activeStack+0x1>
     8c6:	c2 81       	ldd	r28, Z+2	; 0x02
     8c8:	d3 81       	ldd	r29, Z+3	; 0x03
     8ca:	e0 91 3d 01 	lds	r30, 0x013D	; 0x80013d <msgQ>
     8ce:	f0 91 3e 01 	lds	r31, 0x013E	; 0x80013e <msgQ+0x1>
     8d2:	30 97       	sbiw	r30, 0x00	; 0
     8d4:	19 f1       	breq	.+70     	; 0x91c <schedule+0x62>
     8d6:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <threadPool>
     8da:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <threadPool+0x1>
     8de:	89 2b       	or	r24, r25
     8e0:	e9 f0       	breq	.+58     	; 0x91c <schedule+0x62>
     8e2:	20 97       	sbiw	r28, 0x00	; 0
     8e4:	69 f0       	breq	.+26     	; 0x900 <schedule+0x46>
     8e6:	86 81       	ldd	r24, Z+6	; 0x06
     8e8:	97 81       	ldd	r25, Z+7	; 0x07
     8ea:	a0 85       	ldd	r26, Z+8	; 0x08
     8ec:	b1 85       	ldd	r27, Z+9	; 0x09
     8ee:	4e 81       	ldd	r20, Y+6	; 0x06
     8f0:	5f 81       	ldd	r21, Y+7	; 0x07
     8f2:	68 85       	ldd	r22, Y+8	; 0x08
     8f4:	79 85       	ldd	r23, Y+9	; 0x09
     8f6:	84 1b       	sub	r24, r20
     8f8:	95 0b       	sbc	r25, r21
     8fa:	a6 0b       	sbc	r26, r22
     8fc:	b7 0b       	sbc	r27, r23
     8fe:	72 f4       	brpl	.+28     	; 0x91c <schedule+0x62>
     900:	87 e1       	ldi	r24, 0x17	; 23
     902:	91 e0       	ldi	r25, 0x01	; 1
     904:	0e 94 53 04 	call	0x8a6	; 0x8a6 <pop>
     908:	65 e1       	ldi	r22, 0x15	; 21
     90a:	71 e0       	ldi	r23, 0x01	; 1
     90c:	0e 94 49 04 	call	0x892	; 0x892 <push>
     910:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <activeStack>
     914:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <activeStack+0x1>
     918:	0e 94 a6 03 	call	0x74c	; 0x74c <dispatch>
     91c:	df 91       	pop	r29
     91e:	cf 91       	pop	r28
     920:	08 95       	ret

00000922 <__vector_1>:
     922:	1f 92       	push	r1
     924:	0f 92       	push	r0
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	0f 92       	push	r0
     92a:	11 24       	eor	r1, r1
     92c:	0f 93       	push	r16
     92e:	1f 93       	push	r17
     930:	2f 93       	push	r18
     932:	3f 93       	push	r19
     934:	4f 93       	push	r20
     936:	5f 93       	push	r21
     938:	6f 93       	push	r22
     93a:	7f 93       	push	r23
     93c:	8f 93       	push	r24
     93e:	9f 93       	push	r25
     940:	af 93       	push	r26
     942:	bf 93       	push	r27
     944:	ef 93       	push	r30
     946:	ff 93       	push	r31
     948:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     94c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     950:	ac 01       	movw	r20, r24
     952:	09 2e       	mov	r0, r25
     954:	00 0c       	add	r0, r0
     956:	66 0b       	sbc	r22, r22
     958:	77 0b       	sbc	r23, r23
     95a:	9a 01       	movw	r18, r20
     95c:	11 27       	eor	r17, r17
     95e:	00 27       	eor	r16, r16
     960:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     964:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     968:	60 e0       	ldi	r22, 0x00	; 0
     96a:	70 e0       	ldi	r23, 0x00	; 0
     96c:	40 2b       	or	r20, r16
     96e:	51 2b       	or	r21, r17
     970:	62 2b       	or	r22, r18
     972:	73 2b       	or	r23, r19
     974:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     978:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     97c:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     980:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     984:	b0 9b       	sbis	0x16, 0	; 22
     986:	1a c0       	rjmp	.+52     	; 0x9bc <__vector_1+0x9a>
     988:	01 96       	adiw	r24, 0x01	; 1
     98a:	09 2e       	mov	r0, r25
     98c:	00 0c       	add	r0, r0
     98e:	aa 0b       	sbc	r26, r26
     990:	bb 0b       	sbc	r27, r27
     992:	bc 01       	movw	r22, r24
     994:	55 27       	eor	r21, r21
     996:	44 27       	eor	r20, r20
     998:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     99c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9a0:	a0 e0       	ldi	r26, 0x00	; 0
     9a2:	b0 e0       	ldi	r27, 0x00	; 0
     9a4:	84 2b       	or	r24, r20
     9a6:	95 2b       	or	r25, r21
     9a8:	a6 2b       	or	r26, r22
     9aa:	b7 2b       	or	r27, r23
     9ac:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     9b0:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     9b4:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     9b8:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     9bc:	e0 91 d7 01 	lds	r30, 0x01D7	; 0x8001d7 <mtable>
     9c0:	f0 91 d8 01 	lds	r31, 0x01D8	; 0x8001d8 <mtable+0x1>
     9c4:	30 97       	sbiw	r30, 0x00	; 0
     9c6:	39 f0       	breq	.+14     	; 0x9d6 <__vector_1+0xb4>
     9c8:	60 e0       	ldi	r22, 0x00	; 0
     9ca:	70 e0       	ldi	r23, 0x00	; 0
     9cc:	80 91 3f 01 	lds	r24, 0x013F	; 0x80013f <otable>
     9d0:	90 91 40 01 	lds	r25, 0x0140	; 0x800140 <otable+0x1>
     9d4:	09 95       	icall
     9d6:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     9da:	ff 91       	pop	r31
     9dc:	ef 91       	pop	r30
     9de:	bf 91       	pop	r27
     9e0:	af 91       	pop	r26
     9e2:	9f 91       	pop	r25
     9e4:	8f 91       	pop	r24
     9e6:	7f 91       	pop	r23
     9e8:	6f 91       	pop	r22
     9ea:	5f 91       	pop	r21
     9ec:	4f 91       	pop	r20
     9ee:	3f 91       	pop	r19
     9f0:	2f 91       	pop	r18
     9f2:	1f 91       	pop	r17
     9f4:	0f 91       	pop	r16
     9f6:	0f 90       	pop	r0
     9f8:	0f be       	out	0x3f, r0	; 63
     9fa:	0f 90       	pop	r0
     9fc:	1f 90       	pop	r1
     9fe:	18 95       	reti

00000a00 <__vector_2>:
     a00:	1f 92       	push	r1
     a02:	0f 92       	push	r0
     a04:	0f b6       	in	r0, 0x3f	; 63
     a06:	0f 92       	push	r0
     a08:	11 24       	eor	r1, r1
     a0a:	0f 93       	push	r16
     a0c:	1f 93       	push	r17
     a0e:	2f 93       	push	r18
     a10:	3f 93       	push	r19
     a12:	4f 93       	push	r20
     a14:	5f 93       	push	r21
     a16:	6f 93       	push	r22
     a18:	7f 93       	push	r23
     a1a:	8f 93       	push	r24
     a1c:	9f 93       	push	r25
     a1e:	af 93       	push	r26
     a20:	bf 93       	push	r27
     a22:	ef 93       	push	r30
     a24:	ff 93       	push	r31
     a26:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     a2a:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     a2e:	ac 01       	movw	r20, r24
     a30:	09 2e       	mov	r0, r25
     a32:	00 0c       	add	r0, r0
     a34:	66 0b       	sbc	r22, r22
     a36:	77 0b       	sbc	r23, r23
     a38:	9a 01       	movw	r18, r20
     a3a:	11 27       	eor	r17, r17
     a3c:	00 27       	eor	r16, r16
     a3e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a42:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a46:	60 e0       	ldi	r22, 0x00	; 0
     a48:	70 e0       	ldi	r23, 0x00	; 0
     a4a:	40 2b       	or	r20, r16
     a4c:	51 2b       	or	r21, r17
     a4e:	62 2b       	or	r22, r18
     a50:	73 2b       	or	r23, r19
     a52:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     a56:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     a5a:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     a5e:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     a62:	b0 9b       	sbis	0x16, 0	; 22
     a64:	1a c0       	rjmp	.+52     	; 0xa9a <__vector_2+0x9a>
     a66:	01 96       	adiw	r24, 0x01	; 1
     a68:	09 2e       	mov	r0, r25
     a6a:	00 0c       	add	r0, r0
     a6c:	aa 0b       	sbc	r26, r26
     a6e:	bb 0b       	sbc	r27, r27
     a70:	bc 01       	movw	r22, r24
     a72:	55 27       	eor	r21, r21
     a74:	44 27       	eor	r20, r20
     a76:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a7a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a7e:	a0 e0       	ldi	r26, 0x00	; 0
     a80:	b0 e0       	ldi	r27, 0x00	; 0
     a82:	84 2b       	or	r24, r20
     a84:	95 2b       	or	r25, r21
     a86:	a6 2b       	or	r26, r22
     a88:	b7 2b       	or	r27, r23
     a8a:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     a8e:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     a92:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     a96:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     a9a:	e0 91 d9 01 	lds	r30, 0x01D9	; 0x8001d9 <mtable+0x2>
     a9e:	f0 91 da 01 	lds	r31, 0x01DA	; 0x8001da <mtable+0x3>
     aa2:	30 97       	sbiw	r30, 0x00	; 0
     aa4:	39 f0       	breq	.+14     	; 0xab4 <__vector_2+0xb4>
     aa6:	61 e0       	ldi	r22, 0x01	; 1
     aa8:	70 e0       	ldi	r23, 0x00	; 0
     aaa:	80 91 41 01 	lds	r24, 0x0141	; 0x800141 <otable+0x2>
     aae:	90 91 42 01 	lds	r25, 0x0142	; 0x800142 <otable+0x3>
     ab2:	09 95       	icall
     ab4:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     ab8:	ff 91       	pop	r31
     aba:	ef 91       	pop	r30
     abc:	bf 91       	pop	r27
     abe:	af 91       	pop	r26
     ac0:	9f 91       	pop	r25
     ac2:	8f 91       	pop	r24
     ac4:	7f 91       	pop	r23
     ac6:	6f 91       	pop	r22
     ac8:	5f 91       	pop	r21
     aca:	4f 91       	pop	r20
     acc:	3f 91       	pop	r19
     ace:	2f 91       	pop	r18
     ad0:	1f 91       	pop	r17
     ad2:	0f 91       	pop	r16
     ad4:	0f 90       	pop	r0
     ad6:	0f be       	out	0x3f, r0	; 63
     ad8:	0f 90       	pop	r0
     ada:	1f 90       	pop	r1
     adc:	18 95       	reti

00000ade <__vector_3>:
     ade:	1f 92       	push	r1
     ae0:	0f 92       	push	r0
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	0f 92       	push	r0
     ae6:	11 24       	eor	r1, r1
     ae8:	0f 93       	push	r16
     aea:	1f 93       	push	r17
     aec:	2f 93       	push	r18
     aee:	3f 93       	push	r19
     af0:	4f 93       	push	r20
     af2:	5f 93       	push	r21
     af4:	6f 93       	push	r22
     af6:	7f 93       	push	r23
     af8:	8f 93       	push	r24
     afa:	9f 93       	push	r25
     afc:	af 93       	push	r26
     afe:	bf 93       	push	r27
     b00:	ef 93       	push	r30
     b02:	ff 93       	push	r31
     b04:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     b08:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     b0c:	ac 01       	movw	r20, r24
     b0e:	09 2e       	mov	r0, r25
     b10:	00 0c       	add	r0, r0
     b12:	66 0b       	sbc	r22, r22
     b14:	77 0b       	sbc	r23, r23
     b16:	9a 01       	movw	r18, r20
     b18:	11 27       	eor	r17, r17
     b1a:	00 27       	eor	r16, r16
     b1c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b20:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b24:	60 e0       	ldi	r22, 0x00	; 0
     b26:	70 e0       	ldi	r23, 0x00	; 0
     b28:	40 2b       	or	r20, r16
     b2a:	51 2b       	or	r21, r17
     b2c:	62 2b       	or	r22, r18
     b2e:	73 2b       	or	r23, r19
     b30:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     b34:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     b38:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     b3c:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     b40:	b0 9b       	sbis	0x16, 0	; 22
     b42:	1a c0       	rjmp	.+52     	; 0xb78 <__vector_3+0x9a>
     b44:	01 96       	adiw	r24, 0x01	; 1
     b46:	09 2e       	mov	r0, r25
     b48:	00 0c       	add	r0, r0
     b4a:	aa 0b       	sbc	r26, r26
     b4c:	bb 0b       	sbc	r27, r27
     b4e:	bc 01       	movw	r22, r24
     b50:	55 27       	eor	r21, r21
     b52:	44 27       	eor	r20, r20
     b54:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b58:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b5c:	a0 e0       	ldi	r26, 0x00	; 0
     b5e:	b0 e0       	ldi	r27, 0x00	; 0
     b60:	84 2b       	or	r24, r20
     b62:	95 2b       	or	r25, r21
     b64:	a6 2b       	or	r26, r22
     b66:	b7 2b       	or	r27, r23
     b68:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     b6c:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     b70:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     b74:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     b78:	e0 91 db 01 	lds	r30, 0x01DB	; 0x8001db <mtable+0x4>
     b7c:	f0 91 dc 01 	lds	r31, 0x01DC	; 0x8001dc <mtable+0x5>
     b80:	30 97       	sbiw	r30, 0x00	; 0
     b82:	39 f0       	breq	.+14     	; 0xb92 <__vector_3+0xb4>
     b84:	62 e0       	ldi	r22, 0x02	; 2
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	80 91 43 01 	lds	r24, 0x0143	; 0x800143 <otable+0x4>
     b8c:	90 91 44 01 	lds	r25, 0x0144	; 0x800144 <otable+0x5>
     b90:	09 95       	icall
     b92:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     b96:	ff 91       	pop	r31
     b98:	ef 91       	pop	r30
     b9a:	bf 91       	pop	r27
     b9c:	af 91       	pop	r26
     b9e:	9f 91       	pop	r25
     ba0:	8f 91       	pop	r24
     ba2:	7f 91       	pop	r23
     ba4:	6f 91       	pop	r22
     ba6:	5f 91       	pop	r21
     ba8:	4f 91       	pop	r20
     baa:	3f 91       	pop	r19
     bac:	2f 91       	pop	r18
     bae:	1f 91       	pop	r17
     bb0:	0f 91       	pop	r16
     bb2:	0f 90       	pop	r0
     bb4:	0f be       	out	0x3f, r0	; 63
     bb6:	0f 90       	pop	r0
     bb8:	1f 90       	pop	r1
     bba:	18 95       	reti

00000bbc <__vector_4>:
     bbc:	1f 92       	push	r1
     bbe:	0f 92       	push	r0
     bc0:	0f b6       	in	r0, 0x3f	; 63
     bc2:	0f 92       	push	r0
     bc4:	11 24       	eor	r1, r1
     bc6:	0f 93       	push	r16
     bc8:	1f 93       	push	r17
     bca:	2f 93       	push	r18
     bcc:	3f 93       	push	r19
     bce:	4f 93       	push	r20
     bd0:	5f 93       	push	r21
     bd2:	6f 93       	push	r22
     bd4:	7f 93       	push	r23
     bd6:	8f 93       	push	r24
     bd8:	9f 93       	push	r25
     bda:	af 93       	push	r26
     bdc:	bf 93       	push	r27
     bde:	ef 93       	push	r30
     be0:	ff 93       	push	r31
     be2:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     be6:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     bea:	ac 01       	movw	r20, r24
     bec:	09 2e       	mov	r0, r25
     bee:	00 0c       	add	r0, r0
     bf0:	66 0b       	sbc	r22, r22
     bf2:	77 0b       	sbc	r23, r23
     bf4:	9a 01       	movw	r18, r20
     bf6:	11 27       	eor	r17, r17
     bf8:	00 27       	eor	r16, r16
     bfa:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bfe:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c02:	60 e0       	ldi	r22, 0x00	; 0
     c04:	70 e0       	ldi	r23, 0x00	; 0
     c06:	40 2b       	or	r20, r16
     c08:	51 2b       	or	r21, r17
     c0a:	62 2b       	or	r22, r18
     c0c:	73 2b       	or	r23, r19
     c0e:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     c12:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     c16:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     c1a:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     c1e:	b0 9b       	sbis	0x16, 0	; 22
     c20:	1a c0       	rjmp	.+52     	; 0xc56 <__vector_4+0x9a>
     c22:	01 96       	adiw	r24, 0x01	; 1
     c24:	09 2e       	mov	r0, r25
     c26:	00 0c       	add	r0, r0
     c28:	aa 0b       	sbc	r26, r26
     c2a:	bb 0b       	sbc	r27, r27
     c2c:	bc 01       	movw	r22, r24
     c2e:	55 27       	eor	r21, r21
     c30:	44 27       	eor	r20, r20
     c32:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c36:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c3a:	a0 e0       	ldi	r26, 0x00	; 0
     c3c:	b0 e0       	ldi	r27, 0x00	; 0
     c3e:	84 2b       	or	r24, r20
     c40:	95 2b       	or	r25, r21
     c42:	a6 2b       	or	r26, r22
     c44:	b7 2b       	or	r27, r23
     c46:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     c4a:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     c4e:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     c52:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     c56:	e0 91 dd 01 	lds	r30, 0x01DD	; 0x8001dd <mtable+0x6>
     c5a:	f0 91 de 01 	lds	r31, 0x01DE	; 0x8001de <mtable+0x7>
     c5e:	30 97       	sbiw	r30, 0x00	; 0
     c60:	39 f0       	breq	.+14     	; 0xc70 <__vector_4+0xb4>
     c62:	63 e0       	ldi	r22, 0x03	; 3
     c64:	70 e0       	ldi	r23, 0x00	; 0
     c66:	80 91 45 01 	lds	r24, 0x0145	; 0x800145 <otable+0x6>
     c6a:	90 91 46 01 	lds	r25, 0x0146	; 0x800146 <otable+0x7>
     c6e:	09 95       	icall
     c70:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     c74:	ff 91       	pop	r31
     c76:	ef 91       	pop	r30
     c78:	bf 91       	pop	r27
     c7a:	af 91       	pop	r26
     c7c:	9f 91       	pop	r25
     c7e:	8f 91       	pop	r24
     c80:	7f 91       	pop	r23
     c82:	6f 91       	pop	r22
     c84:	5f 91       	pop	r21
     c86:	4f 91       	pop	r20
     c88:	3f 91       	pop	r19
     c8a:	2f 91       	pop	r18
     c8c:	1f 91       	pop	r17
     c8e:	0f 91       	pop	r16
     c90:	0f 90       	pop	r0
     c92:	0f be       	out	0x3f, r0	; 63
     c94:	0f 90       	pop	r0
     c96:	1f 90       	pop	r1
     c98:	18 95       	reti

00000c9a <__vector_5>:
     c9a:	1f 92       	push	r1
     c9c:	0f 92       	push	r0
     c9e:	0f b6       	in	r0, 0x3f	; 63
     ca0:	0f 92       	push	r0
     ca2:	11 24       	eor	r1, r1
     ca4:	0f 93       	push	r16
     ca6:	1f 93       	push	r17
     ca8:	2f 93       	push	r18
     caa:	3f 93       	push	r19
     cac:	4f 93       	push	r20
     cae:	5f 93       	push	r21
     cb0:	6f 93       	push	r22
     cb2:	7f 93       	push	r23
     cb4:	8f 93       	push	r24
     cb6:	9f 93       	push	r25
     cb8:	af 93       	push	r26
     cba:	bf 93       	push	r27
     cbc:	ef 93       	push	r30
     cbe:	ff 93       	push	r31
     cc0:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     cc4:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     cc8:	ac 01       	movw	r20, r24
     cca:	09 2e       	mov	r0, r25
     ccc:	00 0c       	add	r0, r0
     cce:	66 0b       	sbc	r22, r22
     cd0:	77 0b       	sbc	r23, r23
     cd2:	9a 01       	movw	r18, r20
     cd4:	11 27       	eor	r17, r17
     cd6:	00 27       	eor	r16, r16
     cd8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cdc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ce0:	60 e0       	ldi	r22, 0x00	; 0
     ce2:	70 e0       	ldi	r23, 0x00	; 0
     ce4:	40 2b       	or	r20, r16
     ce6:	51 2b       	or	r21, r17
     ce8:	62 2b       	or	r22, r18
     cea:	73 2b       	or	r23, r19
     cec:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     cf0:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     cf4:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     cf8:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     cfc:	b0 9b       	sbis	0x16, 0	; 22
     cfe:	1a c0       	rjmp	.+52     	; 0xd34 <__vector_5+0x9a>
     d00:	01 96       	adiw	r24, 0x01	; 1
     d02:	09 2e       	mov	r0, r25
     d04:	00 0c       	add	r0, r0
     d06:	aa 0b       	sbc	r26, r26
     d08:	bb 0b       	sbc	r27, r27
     d0a:	bc 01       	movw	r22, r24
     d0c:	55 27       	eor	r21, r21
     d0e:	44 27       	eor	r20, r20
     d10:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d14:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d18:	a0 e0       	ldi	r26, 0x00	; 0
     d1a:	b0 e0       	ldi	r27, 0x00	; 0
     d1c:	84 2b       	or	r24, r20
     d1e:	95 2b       	or	r25, r21
     d20:	a6 2b       	or	r26, r22
     d22:	b7 2b       	or	r27, r23
     d24:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     d28:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     d2c:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     d30:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     d34:	e0 91 df 01 	lds	r30, 0x01DF	; 0x8001df <mtable+0x8>
     d38:	f0 91 e0 01 	lds	r31, 0x01E0	; 0x8001e0 <mtable+0x9>
     d3c:	30 97       	sbiw	r30, 0x00	; 0
     d3e:	39 f0       	breq	.+14     	; 0xd4e <__vector_5+0xb4>
     d40:	64 e0       	ldi	r22, 0x04	; 4
     d42:	70 e0       	ldi	r23, 0x00	; 0
     d44:	80 91 47 01 	lds	r24, 0x0147	; 0x800147 <otable+0x8>
     d48:	90 91 48 01 	lds	r25, 0x0148	; 0x800148 <otable+0x9>
     d4c:	09 95       	icall
     d4e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     d52:	ff 91       	pop	r31
     d54:	ef 91       	pop	r30
     d56:	bf 91       	pop	r27
     d58:	af 91       	pop	r26
     d5a:	9f 91       	pop	r25
     d5c:	8f 91       	pop	r24
     d5e:	7f 91       	pop	r23
     d60:	6f 91       	pop	r22
     d62:	5f 91       	pop	r21
     d64:	4f 91       	pop	r20
     d66:	3f 91       	pop	r19
     d68:	2f 91       	pop	r18
     d6a:	1f 91       	pop	r17
     d6c:	0f 91       	pop	r16
     d6e:	0f 90       	pop	r0
     d70:	0f be       	out	0x3f, r0	; 63
     d72:	0f 90       	pop	r0
     d74:	1f 90       	pop	r1
     d76:	18 95       	reti

00000d78 <__vector_10>:
     d78:	1f 92       	push	r1
     d7a:	0f 92       	push	r0
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	0f 92       	push	r0
     d80:	11 24       	eor	r1, r1
     d82:	0f 93       	push	r16
     d84:	1f 93       	push	r17
     d86:	2f 93       	push	r18
     d88:	3f 93       	push	r19
     d8a:	4f 93       	push	r20
     d8c:	5f 93       	push	r21
     d8e:	6f 93       	push	r22
     d90:	7f 93       	push	r23
     d92:	8f 93       	push	r24
     d94:	9f 93       	push	r25
     d96:	af 93       	push	r26
     d98:	bf 93       	push	r27
     d9a:	ef 93       	push	r30
     d9c:	ff 93       	push	r31
     d9e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     da2:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     da6:	ac 01       	movw	r20, r24
     da8:	09 2e       	mov	r0, r25
     daa:	00 0c       	add	r0, r0
     dac:	66 0b       	sbc	r22, r22
     dae:	77 0b       	sbc	r23, r23
     db0:	9a 01       	movw	r18, r20
     db2:	11 27       	eor	r17, r17
     db4:	00 27       	eor	r16, r16
     db6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     dba:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     dbe:	60 e0       	ldi	r22, 0x00	; 0
     dc0:	70 e0       	ldi	r23, 0x00	; 0
     dc2:	40 2b       	or	r20, r16
     dc4:	51 2b       	or	r21, r17
     dc6:	62 2b       	or	r22, r18
     dc8:	73 2b       	or	r23, r19
     dca:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     dce:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     dd2:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     dd6:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     dda:	b0 9b       	sbis	0x16, 0	; 22
     ddc:	1a c0       	rjmp	.+52     	; 0xe12 <__vector_10+0x9a>
     dde:	01 96       	adiw	r24, 0x01	; 1
     de0:	09 2e       	mov	r0, r25
     de2:	00 0c       	add	r0, r0
     de4:	aa 0b       	sbc	r26, r26
     de6:	bb 0b       	sbc	r27, r27
     de8:	bc 01       	movw	r22, r24
     dea:	55 27       	eor	r21, r21
     dec:	44 27       	eor	r20, r20
     dee:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     df2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     df6:	a0 e0       	ldi	r26, 0x00	; 0
     df8:	b0 e0       	ldi	r27, 0x00	; 0
     dfa:	84 2b       	or	r24, r20
     dfc:	95 2b       	or	r25, r21
     dfe:	a6 2b       	or	r26, r22
     e00:	b7 2b       	or	r27, r23
     e02:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     e06:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     e0a:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     e0e:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     e12:	e0 91 e1 01 	lds	r30, 0x01E1	; 0x8001e1 <mtable+0xa>
     e16:	f0 91 e2 01 	lds	r31, 0x01E2	; 0x8001e2 <mtable+0xb>
     e1a:	30 97       	sbiw	r30, 0x00	; 0
     e1c:	39 f0       	breq	.+14     	; 0xe2c <__vector_10+0xb4>
     e1e:	65 e0       	ldi	r22, 0x05	; 5
     e20:	70 e0       	ldi	r23, 0x00	; 0
     e22:	80 91 49 01 	lds	r24, 0x0149	; 0x800149 <otable+0xa>
     e26:	90 91 4a 01 	lds	r25, 0x014A	; 0x80014a <otable+0xb>
     e2a:	09 95       	icall
     e2c:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     e30:	ff 91       	pop	r31
     e32:	ef 91       	pop	r30
     e34:	bf 91       	pop	r27
     e36:	af 91       	pop	r26
     e38:	9f 91       	pop	r25
     e3a:	8f 91       	pop	r24
     e3c:	7f 91       	pop	r23
     e3e:	6f 91       	pop	r22
     e40:	5f 91       	pop	r21
     e42:	4f 91       	pop	r20
     e44:	3f 91       	pop	r19
     e46:	2f 91       	pop	r18
     e48:	1f 91       	pop	r17
     e4a:	0f 91       	pop	r16
     e4c:	0f 90       	pop	r0
     e4e:	0f be       	out	0x3f, r0	; 63
     e50:	0f 90       	pop	r0
     e52:	1f 90       	pop	r1
     e54:	18 95       	reti

00000e56 <__vector_11>:
     e56:	1f 92       	push	r1
     e58:	0f 92       	push	r0
     e5a:	0f b6       	in	r0, 0x3f	; 63
     e5c:	0f 92       	push	r0
     e5e:	11 24       	eor	r1, r1
     e60:	0f 93       	push	r16
     e62:	1f 93       	push	r17
     e64:	2f 93       	push	r18
     e66:	3f 93       	push	r19
     e68:	4f 93       	push	r20
     e6a:	5f 93       	push	r21
     e6c:	6f 93       	push	r22
     e6e:	7f 93       	push	r23
     e70:	8f 93       	push	r24
     e72:	9f 93       	push	r25
     e74:	af 93       	push	r26
     e76:	bf 93       	push	r27
     e78:	ef 93       	push	r30
     e7a:	ff 93       	push	r31
     e7c:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     e80:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     e84:	ac 01       	movw	r20, r24
     e86:	09 2e       	mov	r0, r25
     e88:	00 0c       	add	r0, r0
     e8a:	66 0b       	sbc	r22, r22
     e8c:	77 0b       	sbc	r23, r23
     e8e:	9a 01       	movw	r18, r20
     e90:	11 27       	eor	r17, r17
     e92:	00 27       	eor	r16, r16
     e94:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e98:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e9c:	60 e0       	ldi	r22, 0x00	; 0
     e9e:	70 e0       	ldi	r23, 0x00	; 0
     ea0:	40 2b       	or	r20, r16
     ea2:	51 2b       	or	r21, r17
     ea4:	62 2b       	or	r22, r18
     ea6:	73 2b       	or	r23, r19
     ea8:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     eac:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     eb0:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     eb4:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     eb8:	b0 9b       	sbis	0x16, 0	; 22
     eba:	1a c0       	rjmp	.+52     	; 0xef0 <__vector_11+0x9a>
     ebc:	01 96       	adiw	r24, 0x01	; 1
     ebe:	09 2e       	mov	r0, r25
     ec0:	00 0c       	add	r0, r0
     ec2:	aa 0b       	sbc	r26, r26
     ec4:	bb 0b       	sbc	r27, r27
     ec6:	bc 01       	movw	r22, r24
     ec8:	55 27       	eor	r21, r21
     eca:	44 27       	eor	r20, r20
     ecc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ed0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ed4:	a0 e0       	ldi	r26, 0x00	; 0
     ed6:	b0 e0       	ldi	r27, 0x00	; 0
     ed8:	84 2b       	or	r24, r20
     eda:	95 2b       	or	r25, r21
     edc:	a6 2b       	or	r26, r22
     ede:	b7 2b       	or	r27, r23
     ee0:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     ee4:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     ee8:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     eec:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     ef0:	e0 91 e3 01 	lds	r30, 0x01E3	; 0x8001e3 <mtable+0xc>
     ef4:	f0 91 e4 01 	lds	r31, 0x01E4	; 0x8001e4 <mtable+0xd>
     ef8:	30 97       	sbiw	r30, 0x00	; 0
     efa:	39 f0       	breq	.+14     	; 0xf0a <__vector_11+0xb4>
     efc:	66 e0       	ldi	r22, 0x06	; 6
     efe:	70 e0       	ldi	r23, 0x00	; 0
     f00:	80 91 4b 01 	lds	r24, 0x014B	; 0x80014b <otable+0xc>
     f04:	90 91 4c 01 	lds	r25, 0x014C	; 0x80014c <otable+0xd>
     f08:	09 95       	icall
     f0a:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     f0e:	ff 91       	pop	r31
     f10:	ef 91       	pop	r30
     f12:	bf 91       	pop	r27
     f14:	af 91       	pop	r26
     f16:	9f 91       	pop	r25
     f18:	8f 91       	pop	r24
     f1a:	7f 91       	pop	r23
     f1c:	6f 91       	pop	r22
     f1e:	5f 91       	pop	r21
     f20:	4f 91       	pop	r20
     f22:	3f 91       	pop	r19
     f24:	2f 91       	pop	r18
     f26:	1f 91       	pop	r17
     f28:	0f 91       	pop	r16
     f2a:	0f 90       	pop	r0
     f2c:	0f be       	out	0x3f, r0	; 63
     f2e:	0f 90       	pop	r0
     f30:	1f 90       	pop	r1
     f32:	18 95       	reti

00000f34 <__vector_12>:
     f34:	1f 92       	push	r1
     f36:	0f 92       	push	r0
     f38:	0f b6       	in	r0, 0x3f	; 63
     f3a:	0f 92       	push	r0
     f3c:	11 24       	eor	r1, r1
     f3e:	0f 93       	push	r16
     f40:	1f 93       	push	r17
     f42:	2f 93       	push	r18
     f44:	3f 93       	push	r19
     f46:	4f 93       	push	r20
     f48:	5f 93       	push	r21
     f4a:	6f 93       	push	r22
     f4c:	7f 93       	push	r23
     f4e:	8f 93       	push	r24
     f50:	9f 93       	push	r25
     f52:	af 93       	push	r26
     f54:	bf 93       	push	r27
     f56:	ef 93       	push	r30
     f58:	ff 93       	push	r31
     f5a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
     f5e:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
     f62:	ac 01       	movw	r20, r24
     f64:	09 2e       	mov	r0, r25
     f66:	00 0c       	add	r0, r0
     f68:	66 0b       	sbc	r22, r22
     f6a:	77 0b       	sbc	r23, r23
     f6c:	9a 01       	movw	r18, r20
     f6e:	11 27       	eor	r17, r17
     f70:	00 27       	eor	r16, r16
     f72:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f76:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f7a:	60 e0       	ldi	r22, 0x00	; 0
     f7c:	70 e0       	ldi	r23, 0x00	; 0
     f7e:	40 2b       	or	r20, r16
     f80:	51 2b       	or	r21, r17
     f82:	62 2b       	or	r22, r18
     f84:	73 2b       	or	r23, r19
     f86:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
     f8a:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
     f8e:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
     f92:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
     f96:	b0 9b       	sbis	0x16, 0	; 22
     f98:	1a c0       	rjmp	.+52     	; 0xfce <__vector_12+0x9a>
     f9a:	01 96       	adiw	r24, 0x01	; 1
     f9c:	09 2e       	mov	r0, r25
     f9e:	00 0c       	add	r0, r0
     fa0:	aa 0b       	sbc	r26, r26
     fa2:	bb 0b       	sbc	r27, r27
     fa4:	bc 01       	movw	r22, r24
     fa6:	55 27       	eor	r21, r21
     fa8:	44 27       	eor	r20, r20
     faa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fae:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fb2:	a0 e0       	ldi	r26, 0x00	; 0
     fb4:	b0 e0       	ldi	r27, 0x00	; 0
     fb6:	84 2b       	or	r24, r20
     fb8:	95 2b       	or	r25, r21
     fba:	a6 2b       	or	r26, r22
     fbc:	b7 2b       	or	r27, r23
     fbe:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
     fc2:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
     fc6:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
     fca:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
     fce:	e0 91 e5 01 	lds	r30, 0x01E5	; 0x8001e5 <mtable+0xe>
     fd2:	f0 91 e6 01 	lds	r31, 0x01E6	; 0x8001e6 <mtable+0xf>
     fd6:	30 97       	sbiw	r30, 0x00	; 0
     fd8:	39 f0       	breq	.+14     	; 0xfe8 <__vector_12+0xb4>
     fda:	67 e0       	ldi	r22, 0x07	; 7
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	80 91 4d 01 	lds	r24, 0x014D	; 0x80014d <otable+0xe>
     fe2:	90 91 4e 01 	lds	r25, 0x014E	; 0x80014e <otable+0xf>
     fe6:	09 95       	icall
     fe8:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
     fec:	ff 91       	pop	r31
     fee:	ef 91       	pop	r30
     ff0:	bf 91       	pop	r27
     ff2:	af 91       	pop	r26
     ff4:	9f 91       	pop	r25
     ff6:	8f 91       	pop	r24
     ff8:	7f 91       	pop	r23
     ffa:	6f 91       	pop	r22
     ffc:	5f 91       	pop	r21
     ffe:	4f 91       	pop	r20
    1000:	3f 91       	pop	r19
    1002:	2f 91       	pop	r18
    1004:	1f 91       	pop	r17
    1006:	0f 91       	pop	r16
    1008:	0f 90       	pop	r0
    100a:	0f be       	out	0x3f, r0	; 63
    100c:	0f 90       	pop	r0
    100e:	1f 90       	pop	r1
    1010:	18 95       	reti

00001012 <__vector_13>:
    1012:	1f 92       	push	r1
    1014:	0f 92       	push	r0
    1016:	0f b6       	in	r0, 0x3f	; 63
    1018:	0f 92       	push	r0
    101a:	11 24       	eor	r1, r1
    101c:	0f 93       	push	r16
    101e:	1f 93       	push	r17
    1020:	2f 93       	push	r18
    1022:	3f 93       	push	r19
    1024:	4f 93       	push	r20
    1026:	5f 93       	push	r21
    1028:	6f 93       	push	r22
    102a:	7f 93       	push	r23
    102c:	8f 93       	push	r24
    102e:	9f 93       	push	r25
    1030:	af 93       	push	r26
    1032:	bf 93       	push	r27
    1034:	ef 93       	push	r30
    1036:	ff 93       	push	r31
    1038:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    103c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    1040:	ac 01       	movw	r20, r24
    1042:	09 2e       	mov	r0, r25
    1044:	00 0c       	add	r0, r0
    1046:	66 0b       	sbc	r22, r22
    1048:	77 0b       	sbc	r23, r23
    104a:	9a 01       	movw	r18, r20
    104c:	11 27       	eor	r17, r17
    104e:	00 27       	eor	r16, r16
    1050:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1054:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1058:	60 e0       	ldi	r22, 0x00	; 0
    105a:	70 e0       	ldi	r23, 0x00	; 0
    105c:	40 2b       	or	r20, r16
    105e:	51 2b       	or	r21, r17
    1060:	62 2b       	or	r22, r18
    1062:	73 2b       	or	r23, r19
    1064:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1068:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    106c:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    1070:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1074:	b0 9b       	sbis	0x16, 0	; 22
    1076:	1a c0       	rjmp	.+52     	; 0x10ac <__vector_13+0x9a>
    1078:	01 96       	adiw	r24, 0x01	; 1
    107a:	09 2e       	mov	r0, r25
    107c:	00 0c       	add	r0, r0
    107e:	aa 0b       	sbc	r26, r26
    1080:	bb 0b       	sbc	r27, r27
    1082:	bc 01       	movw	r22, r24
    1084:	55 27       	eor	r21, r21
    1086:	44 27       	eor	r20, r20
    1088:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    108c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1090:	a0 e0       	ldi	r26, 0x00	; 0
    1092:	b0 e0       	ldi	r27, 0x00	; 0
    1094:	84 2b       	or	r24, r20
    1096:	95 2b       	or	r25, r21
    1098:	a6 2b       	or	r26, r22
    109a:	b7 2b       	or	r27, r23
    109c:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    10a0:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    10a4:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    10a8:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    10ac:	e0 91 e7 01 	lds	r30, 0x01E7	; 0x8001e7 <mtable+0x10>
    10b0:	f0 91 e8 01 	lds	r31, 0x01E8	; 0x8001e8 <mtable+0x11>
    10b4:	30 97       	sbiw	r30, 0x00	; 0
    10b6:	39 f0       	breq	.+14     	; 0x10c6 <__vector_13+0xb4>
    10b8:	68 e0       	ldi	r22, 0x08	; 8
    10ba:	70 e0       	ldi	r23, 0x00	; 0
    10bc:	80 91 4f 01 	lds	r24, 0x014F	; 0x80014f <otable+0x10>
    10c0:	90 91 50 01 	lds	r25, 0x0150	; 0x800150 <otable+0x11>
    10c4:	09 95       	icall
    10c6:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    10ca:	ff 91       	pop	r31
    10cc:	ef 91       	pop	r30
    10ce:	bf 91       	pop	r27
    10d0:	af 91       	pop	r26
    10d2:	9f 91       	pop	r25
    10d4:	8f 91       	pop	r24
    10d6:	7f 91       	pop	r23
    10d8:	6f 91       	pop	r22
    10da:	5f 91       	pop	r21
    10dc:	4f 91       	pop	r20
    10de:	3f 91       	pop	r19
    10e0:	2f 91       	pop	r18
    10e2:	1f 91       	pop	r17
    10e4:	0f 91       	pop	r16
    10e6:	0f 90       	pop	r0
    10e8:	0f be       	out	0x3f, r0	; 63
    10ea:	0f 90       	pop	r0
    10ec:	1f 90       	pop	r1
    10ee:	18 95       	reti

000010f0 <__vector_14>:
    10f0:	1f 92       	push	r1
    10f2:	0f 92       	push	r0
    10f4:	0f b6       	in	r0, 0x3f	; 63
    10f6:	0f 92       	push	r0
    10f8:	11 24       	eor	r1, r1
    10fa:	0f 93       	push	r16
    10fc:	1f 93       	push	r17
    10fe:	2f 93       	push	r18
    1100:	3f 93       	push	r19
    1102:	4f 93       	push	r20
    1104:	5f 93       	push	r21
    1106:	6f 93       	push	r22
    1108:	7f 93       	push	r23
    110a:	8f 93       	push	r24
    110c:	9f 93       	push	r25
    110e:	af 93       	push	r26
    1110:	bf 93       	push	r27
    1112:	ef 93       	push	r30
    1114:	ff 93       	push	r31
    1116:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    111a:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    111e:	ac 01       	movw	r20, r24
    1120:	09 2e       	mov	r0, r25
    1122:	00 0c       	add	r0, r0
    1124:	66 0b       	sbc	r22, r22
    1126:	77 0b       	sbc	r23, r23
    1128:	9a 01       	movw	r18, r20
    112a:	11 27       	eor	r17, r17
    112c:	00 27       	eor	r16, r16
    112e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1132:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1136:	60 e0       	ldi	r22, 0x00	; 0
    1138:	70 e0       	ldi	r23, 0x00	; 0
    113a:	40 2b       	or	r20, r16
    113c:	51 2b       	or	r21, r17
    113e:	62 2b       	or	r22, r18
    1140:	73 2b       	or	r23, r19
    1142:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1146:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    114a:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    114e:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1152:	b0 9b       	sbis	0x16, 0	; 22
    1154:	1a c0       	rjmp	.+52     	; 0x118a <__vector_14+0x9a>
    1156:	01 96       	adiw	r24, 0x01	; 1
    1158:	09 2e       	mov	r0, r25
    115a:	00 0c       	add	r0, r0
    115c:	aa 0b       	sbc	r26, r26
    115e:	bb 0b       	sbc	r27, r27
    1160:	bc 01       	movw	r22, r24
    1162:	55 27       	eor	r21, r21
    1164:	44 27       	eor	r20, r20
    1166:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    116a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    116e:	a0 e0       	ldi	r26, 0x00	; 0
    1170:	b0 e0       	ldi	r27, 0x00	; 0
    1172:	84 2b       	or	r24, r20
    1174:	95 2b       	or	r25, r21
    1176:	a6 2b       	or	r26, r22
    1178:	b7 2b       	or	r27, r23
    117a:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    117e:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    1182:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1186:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    118a:	e0 91 e9 01 	lds	r30, 0x01E9	; 0x8001e9 <mtable+0x12>
    118e:	f0 91 ea 01 	lds	r31, 0x01EA	; 0x8001ea <mtable+0x13>
    1192:	30 97       	sbiw	r30, 0x00	; 0
    1194:	39 f0       	breq	.+14     	; 0x11a4 <__vector_14+0xb4>
    1196:	69 e0       	ldi	r22, 0x09	; 9
    1198:	70 e0       	ldi	r23, 0x00	; 0
    119a:	80 91 51 01 	lds	r24, 0x0151	; 0x800151 <otable+0x12>
    119e:	90 91 52 01 	lds	r25, 0x0152	; 0x800152 <otable+0x13>
    11a2:	09 95       	icall
    11a4:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    11a8:	ff 91       	pop	r31
    11aa:	ef 91       	pop	r30
    11ac:	bf 91       	pop	r27
    11ae:	af 91       	pop	r26
    11b0:	9f 91       	pop	r25
    11b2:	8f 91       	pop	r24
    11b4:	7f 91       	pop	r23
    11b6:	6f 91       	pop	r22
    11b8:	5f 91       	pop	r21
    11ba:	4f 91       	pop	r20
    11bc:	3f 91       	pop	r19
    11be:	2f 91       	pop	r18
    11c0:	1f 91       	pop	r17
    11c2:	0f 91       	pop	r16
    11c4:	0f 90       	pop	r0
    11c6:	0f be       	out	0x3f, r0	; 63
    11c8:	0f 90       	pop	r0
    11ca:	1f 90       	pop	r1
    11cc:	18 95       	reti

000011ce <__vector_15>:
    11ce:	1f 92       	push	r1
    11d0:	0f 92       	push	r0
    11d2:	0f b6       	in	r0, 0x3f	; 63
    11d4:	0f 92       	push	r0
    11d6:	11 24       	eor	r1, r1
    11d8:	0f 93       	push	r16
    11da:	1f 93       	push	r17
    11dc:	2f 93       	push	r18
    11de:	3f 93       	push	r19
    11e0:	4f 93       	push	r20
    11e2:	5f 93       	push	r21
    11e4:	6f 93       	push	r22
    11e6:	7f 93       	push	r23
    11e8:	8f 93       	push	r24
    11ea:	9f 93       	push	r25
    11ec:	af 93       	push	r26
    11ee:	bf 93       	push	r27
    11f0:	ef 93       	push	r30
    11f2:	ff 93       	push	r31
    11f4:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    11f8:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    11fc:	ac 01       	movw	r20, r24
    11fe:	09 2e       	mov	r0, r25
    1200:	00 0c       	add	r0, r0
    1202:	66 0b       	sbc	r22, r22
    1204:	77 0b       	sbc	r23, r23
    1206:	9a 01       	movw	r18, r20
    1208:	11 27       	eor	r17, r17
    120a:	00 27       	eor	r16, r16
    120c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1210:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1214:	60 e0       	ldi	r22, 0x00	; 0
    1216:	70 e0       	ldi	r23, 0x00	; 0
    1218:	40 2b       	or	r20, r16
    121a:	51 2b       	or	r21, r17
    121c:	62 2b       	or	r22, r18
    121e:	73 2b       	or	r23, r19
    1220:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1224:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    1228:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    122c:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1230:	b0 9b       	sbis	0x16, 0	; 22
    1232:	1a c0       	rjmp	.+52     	; 0x1268 <__vector_15+0x9a>
    1234:	01 96       	adiw	r24, 0x01	; 1
    1236:	09 2e       	mov	r0, r25
    1238:	00 0c       	add	r0, r0
    123a:	aa 0b       	sbc	r26, r26
    123c:	bb 0b       	sbc	r27, r27
    123e:	bc 01       	movw	r22, r24
    1240:	55 27       	eor	r21, r21
    1242:	44 27       	eor	r20, r20
    1244:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1248:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    124c:	a0 e0       	ldi	r26, 0x00	; 0
    124e:	b0 e0       	ldi	r27, 0x00	; 0
    1250:	84 2b       	or	r24, r20
    1252:	95 2b       	or	r25, r21
    1254:	a6 2b       	or	r26, r22
    1256:	b7 2b       	or	r27, r23
    1258:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    125c:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    1260:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1264:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    1268:	e0 91 eb 01 	lds	r30, 0x01EB	; 0x8001eb <mtable+0x14>
    126c:	f0 91 ec 01 	lds	r31, 0x01EC	; 0x8001ec <mtable+0x15>
    1270:	30 97       	sbiw	r30, 0x00	; 0
    1272:	39 f0       	breq	.+14     	; 0x1282 <__vector_15+0xb4>
    1274:	6a e0       	ldi	r22, 0x0A	; 10
    1276:	70 e0       	ldi	r23, 0x00	; 0
    1278:	80 91 53 01 	lds	r24, 0x0153	; 0x800153 <otable+0x14>
    127c:	90 91 54 01 	lds	r25, 0x0154	; 0x800154 <otable+0x15>
    1280:	09 95       	icall
    1282:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1286:	ff 91       	pop	r31
    1288:	ef 91       	pop	r30
    128a:	bf 91       	pop	r27
    128c:	af 91       	pop	r26
    128e:	9f 91       	pop	r25
    1290:	8f 91       	pop	r24
    1292:	7f 91       	pop	r23
    1294:	6f 91       	pop	r22
    1296:	5f 91       	pop	r21
    1298:	4f 91       	pop	r20
    129a:	3f 91       	pop	r19
    129c:	2f 91       	pop	r18
    129e:	1f 91       	pop	r17
    12a0:	0f 91       	pop	r16
    12a2:	0f 90       	pop	r0
    12a4:	0f be       	out	0x3f, r0	; 63
    12a6:	0f 90       	pop	r0
    12a8:	1f 90       	pop	r1
    12aa:	18 95       	reti

000012ac <__vector_16>:
    12ac:	1f 92       	push	r1
    12ae:	0f 92       	push	r0
    12b0:	0f b6       	in	r0, 0x3f	; 63
    12b2:	0f 92       	push	r0
    12b4:	11 24       	eor	r1, r1
    12b6:	0f 93       	push	r16
    12b8:	1f 93       	push	r17
    12ba:	2f 93       	push	r18
    12bc:	3f 93       	push	r19
    12be:	4f 93       	push	r20
    12c0:	5f 93       	push	r21
    12c2:	6f 93       	push	r22
    12c4:	7f 93       	push	r23
    12c6:	8f 93       	push	r24
    12c8:	9f 93       	push	r25
    12ca:	af 93       	push	r26
    12cc:	bf 93       	push	r27
    12ce:	ef 93       	push	r30
    12d0:	ff 93       	push	r31
    12d2:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    12d6:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    12da:	ac 01       	movw	r20, r24
    12dc:	09 2e       	mov	r0, r25
    12de:	00 0c       	add	r0, r0
    12e0:	66 0b       	sbc	r22, r22
    12e2:	77 0b       	sbc	r23, r23
    12e4:	9a 01       	movw	r18, r20
    12e6:	11 27       	eor	r17, r17
    12e8:	00 27       	eor	r16, r16
    12ea:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12ee:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12f2:	60 e0       	ldi	r22, 0x00	; 0
    12f4:	70 e0       	ldi	r23, 0x00	; 0
    12f6:	40 2b       	or	r20, r16
    12f8:	51 2b       	or	r21, r17
    12fa:	62 2b       	or	r22, r18
    12fc:	73 2b       	or	r23, r19
    12fe:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1302:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    1306:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    130a:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    130e:	b0 9b       	sbis	0x16, 0	; 22
    1310:	1a c0       	rjmp	.+52     	; 0x1346 <__vector_16+0x9a>
    1312:	01 96       	adiw	r24, 0x01	; 1
    1314:	09 2e       	mov	r0, r25
    1316:	00 0c       	add	r0, r0
    1318:	aa 0b       	sbc	r26, r26
    131a:	bb 0b       	sbc	r27, r27
    131c:	bc 01       	movw	r22, r24
    131e:	55 27       	eor	r21, r21
    1320:	44 27       	eor	r20, r20
    1322:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1326:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    132a:	a0 e0       	ldi	r26, 0x00	; 0
    132c:	b0 e0       	ldi	r27, 0x00	; 0
    132e:	84 2b       	or	r24, r20
    1330:	95 2b       	or	r25, r21
    1332:	a6 2b       	or	r26, r22
    1334:	b7 2b       	or	r27, r23
    1336:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    133a:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    133e:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1342:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    1346:	e0 91 ed 01 	lds	r30, 0x01ED	; 0x8001ed <mtable+0x16>
    134a:	f0 91 ee 01 	lds	r31, 0x01EE	; 0x8001ee <mtable+0x17>
    134e:	30 97       	sbiw	r30, 0x00	; 0
    1350:	39 f0       	breq	.+14     	; 0x1360 <__vector_16+0xb4>
    1352:	6b e0       	ldi	r22, 0x0B	; 11
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <otable+0x16>
    135a:	90 91 56 01 	lds	r25, 0x0156	; 0x800156 <otable+0x17>
    135e:	09 95       	icall
    1360:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1364:	ff 91       	pop	r31
    1366:	ef 91       	pop	r30
    1368:	bf 91       	pop	r27
    136a:	af 91       	pop	r26
    136c:	9f 91       	pop	r25
    136e:	8f 91       	pop	r24
    1370:	7f 91       	pop	r23
    1372:	6f 91       	pop	r22
    1374:	5f 91       	pop	r21
    1376:	4f 91       	pop	r20
    1378:	3f 91       	pop	r19
    137a:	2f 91       	pop	r18
    137c:	1f 91       	pop	r17
    137e:	0f 91       	pop	r16
    1380:	0f 90       	pop	r0
    1382:	0f be       	out	0x3f, r0	; 63
    1384:	0f 90       	pop	r0
    1386:	1f 90       	pop	r1
    1388:	18 95       	reti

0000138a <__vector_17>:
    138a:	1f 92       	push	r1
    138c:	0f 92       	push	r0
    138e:	0f b6       	in	r0, 0x3f	; 63
    1390:	0f 92       	push	r0
    1392:	11 24       	eor	r1, r1
    1394:	0f 93       	push	r16
    1396:	1f 93       	push	r17
    1398:	2f 93       	push	r18
    139a:	3f 93       	push	r19
    139c:	4f 93       	push	r20
    139e:	5f 93       	push	r21
    13a0:	6f 93       	push	r22
    13a2:	7f 93       	push	r23
    13a4:	8f 93       	push	r24
    13a6:	9f 93       	push	r25
    13a8:	af 93       	push	r26
    13aa:	bf 93       	push	r27
    13ac:	ef 93       	push	r30
    13ae:	ff 93       	push	r31
    13b0:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    13b4:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    13b8:	ac 01       	movw	r20, r24
    13ba:	09 2e       	mov	r0, r25
    13bc:	00 0c       	add	r0, r0
    13be:	66 0b       	sbc	r22, r22
    13c0:	77 0b       	sbc	r23, r23
    13c2:	9a 01       	movw	r18, r20
    13c4:	11 27       	eor	r17, r17
    13c6:	00 27       	eor	r16, r16
    13c8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13cc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13d0:	60 e0       	ldi	r22, 0x00	; 0
    13d2:	70 e0       	ldi	r23, 0x00	; 0
    13d4:	40 2b       	or	r20, r16
    13d6:	51 2b       	or	r21, r17
    13d8:	62 2b       	or	r22, r18
    13da:	73 2b       	or	r23, r19
    13dc:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    13e0:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    13e4:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    13e8:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    13ec:	b0 9b       	sbis	0x16, 0	; 22
    13ee:	1a c0       	rjmp	.+52     	; 0x1424 <__vector_17+0x9a>
    13f0:	01 96       	adiw	r24, 0x01	; 1
    13f2:	09 2e       	mov	r0, r25
    13f4:	00 0c       	add	r0, r0
    13f6:	aa 0b       	sbc	r26, r26
    13f8:	bb 0b       	sbc	r27, r27
    13fa:	bc 01       	movw	r22, r24
    13fc:	55 27       	eor	r21, r21
    13fe:	44 27       	eor	r20, r20
    1400:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1404:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1408:	a0 e0       	ldi	r26, 0x00	; 0
    140a:	b0 e0       	ldi	r27, 0x00	; 0
    140c:	84 2b       	or	r24, r20
    140e:	95 2b       	or	r25, r21
    1410:	a6 2b       	or	r26, r22
    1412:	b7 2b       	or	r27, r23
    1414:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    1418:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    141c:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1420:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    1424:	e0 91 ef 01 	lds	r30, 0x01EF	; 0x8001ef <mtable+0x18>
    1428:	f0 91 f0 01 	lds	r31, 0x01F0	; 0x8001f0 <mtable+0x19>
    142c:	30 97       	sbiw	r30, 0x00	; 0
    142e:	39 f0       	breq	.+14     	; 0x143e <__vector_17+0xb4>
    1430:	6c e0       	ldi	r22, 0x0C	; 12
    1432:	70 e0       	ldi	r23, 0x00	; 0
    1434:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <otable+0x18>
    1438:	90 91 58 01 	lds	r25, 0x0158	; 0x800158 <otable+0x19>
    143c:	09 95       	icall
    143e:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1442:	ff 91       	pop	r31
    1444:	ef 91       	pop	r30
    1446:	bf 91       	pop	r27
    1448:	af 91       	pop	r26
    144a:	9f 91       	pop	r25
    144c:	8f 91       	pop	r24
    144e:	7f 91       	pop	r23
    1450:	6f 91       	pop	r22
    1452:	5f 91       	pop	r21
    1454:	4f 91       	pop	r20
    1456:	3f 91       	pop	r19
    1458:	2f 91       	pop	r18
    145a:	1f 91       	pop	r17
    145c:	0f 91       	pop	r16
    145e:	0f 90       	pop	r0
    1460:	0f be       	out	0x3f, r0	; 63
    1462:	0f 90       	pop	r0
    1464:	1f 90       	pop	r1
    1466:	18 95       	reti

00001468 <__vector_18>:
    1468:	1f 92       	push	r1
    146a:	0f 92       	push	r0
    146c:	0f b6       	in	r0, 0x3f	; 63
    146e:	0f 92       	push	r0
    1470:	11 24       	eor	r1, r1
    1472:	0f 93       	push	r16
    1474:	1f 93       	push	r17
    1476:	2f 93       	push	r18
    1478:	3f 93       	push	r19
    147a:	4f 93       	push	r20
    147c:	5f 93       	push	r21
    147e:	6f 93       	push	r22
    1480:	7f 93       	push	r23
    1482:	8f 93       	push	r24
    1484:	9f 93       	push	r25
    1486:	af 93       	push	r26
    1488:	bf 93       	push	r27
    148a:	ef 93       	push	r30
    148c:	ff 93       	push	r31
    148e:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    1492:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    1496:	ac 01       	movw	r20, r24
    1498:	09 2e       	mov	r0, r25
    149a:	00 0c       	add	r0, r0
    149c:	66 0b       	sbc	r22, r22
    149e:	77 0b       	sbc	r23, r23
    14a0:	9a 01       	movw	r18, r20
    14a2:	11 27       	eor	r17, r17
    14a4:	00 27       	eor	r16, r16
    14a6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14aa:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14ae:	60 e0       	ldi	r22, 0x00	; 0
    14b0:	70 e0       	ldi	r23, 0x00	; 0
    14b2:	40 2b       	or	r20, r16
    14b4:	51 2b       	or	r21, r17
    14b6:	62 2b       	or	r22, r18
    14b8:	73 2b       	or	r23, r19
    14ba:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    14be:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    14c2:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    14c6:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    14ca:	b0 9b       	sbis	0x16, 0	; 22
    14cc:	1a c0       	rjmp	.+52     	; 0x1502 <__vector_18+0x9a>
    14ce:	01 96       	adiw	r24, 0x01	; 1
    14d0:	09 2e       	mov	r0, r25
    14d2:	00 0c       	add	r0, r0
    14d4:	aa 0b       	sbc	r26, r26
    14d6:	bb 0b       	sbc	r27, r27
    14d8:	bc 01       	movw	r22, r24
    14da:	55 27       	eor	r21, r21
    14dc:	44 27       	eor	r20, r20
    14de:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14e2:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14e6:	a0 e0       	ldi	r26, 0x00	; 0
    14e8:	b0 e0       	ldi	r27, 0x00	; 0
    14ea:	84 2b       	or	r24, r20
    14ec:	95 2b       	or	r25, r21
    14ee:	a6 2b       	or	r26, r22
    14f0:	b7 2b       	or	r27, r23
    14f2:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    14f6:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    14fa:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    14fe:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    1502:	e0 91 f1 01 	lds	r30, 0x01F1	; 0x8001f1 <mtable+0x1a>
    1506:	f0 91 f2 01 	lds	r31, 0x01F2	; 0x8001f2 <mtable+0x1b>
    150a:	30 97       	sbiw	r30, 0x00	; 0
    150c:	39 f0       	breq	.+14     	; 0x151c <__vector_18+0xb4>
    150e:	6d e0       	ldi	r22, 0x0D	; 13
    1510:	70 e0       	ldi	r23, 0x00	; 0
    1512:	80 91 59 01 	lds	r24, 0x0159	; 0x800159 <otable+0x1a>
    1516:	90 91 5a 01 	lds	r25, 0x015A	; 0x80015a <otable+0x1b>
    151a:	09 95       	icall
    151c:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1520:	ff 91       	pop	r31
    1522:	ef 91       	pop	r30
    1524:	bf 91       	pop	r27
    1526:	af 91       	pop	r26
    1528:	9f 91       	pop	r25
    152a:	8f 91       	pop	r24
    152c:	7f 91       	pop	r23
    152e:	6f 91       	pop	r22
    1530:	5f 91       	pop	r21
    1532:	4f 91       	pop	r20
    1534:	3f 91       	pop	r19
    1536:	2f 91       	pop	r18
    1538:	1f 91       	pop	r17
    153a:	0f 91       	pop	r16
    153c:	0f 90       	pop	r0
    153e:	0f be       	out	0x3f, r0	; 63
    1540:	0f 90       	pop	r0
    1542:	1f 90       	pop	r1
    1544:	18 95       	reti

00001546 <__vector_19>:
    1546:	1f 92       	push	r1
    1548:	0f 92       	push	r0
    154a:	0f b6       	in	r0, 0x3f	; 63
    154c:	0f 92       	push	r0
    154e:	11 24       	eor	r1, r1
    1550:	0f 93       	push	r16
    1552:	1f 93       	push	r17
    1554:	2f 93       	push	r18
    1556:	3f 93       	push	r19
    1558:	4f 93       	push	r20
    155a:	5f 93       	push	r21
    155c:	6f 93       	push	r22
    155e:	7f 93       	push	r23
    1560:	8f 93       	push	r24
    1562:	9f 93       	push	r25
    1564:	af 93       	push	r26
    1566:	bf 93       	push	r27
    1568:	ef 93       	push	r30
    156a:	ff 93       	push	r31
    156c:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    1570:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    1574:	ac 01       	movw	r20, r24
    1576:	09 2e       	mov	r0, r25
    1578:	00 0c       	add	r0, r0
    157a:	66 0b       	sbc	r22, r22
    157c:	77 0b       	sbc	r23, r23
    157e:	9a 01       	movw	r18, r20
    1580:	11 27       	eor	r17, r17
    1582:	00 27       	eor	r16, r16
    1584:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1588:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    158c:	60 e0       	ldi	r22, 0x00	; 0
    158e:	70 e0       	ldi	r23, 0x00	; 0
    1590:	40 2b       	or	r20, r16
    1592:	51 2b       	or	r21, r17
    1594:	62 2b       	or	r22, r18
    1596:	73 2b       	or	r23, r19
    1598:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    159c:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    15a0:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    15a4:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    15a8:	b0 9b       	sbis	0x16, 0	; 22
    15aa:	1a c0       	rjmp	.+52     	; 0x15e0 <__vector_19+0x9a>
    15ac:	01 96       	adiw	r24, 0x01	; 1
    15ae:	09 2e       	mov	r0, r25
    15b0:	00 0c       	add	r0, r0
    15b2:	aa 0b       	sbc	r26, r26
    15b4:	bb 0b       	sbc	r27, r27
    15b6:	bc 01       	movw	r22, r24
    15b8:	55 27       	eor	r21, r21
    15ba:	44 27       	eor	r20, r20
    15bc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15c0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15c4:	a0 e0       	ldi	r26, 0x00	; 0
    15c6:	b0 e0       	ldi	r27, 0x00	; 0
    15c8:	84 2b       	or	r24, r20
    15ca:	95 2b       	or	r25, r21
    15cc:	a6 2b       	or	r26, r22
    15ce:	b7 2b       	or	r27, r23
    15d0:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    15d4:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    15d8:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    15dc:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    15e0:	e0 91 f3 01 	lds	r30, 0x01F3	; 0x8001f3 <mtable+0x1c>
    15e4:	f0 91 f4 01 	lds	r31, 0x01F4	; 0x8001f4 <mtable+0x1d>
    15e8:	30 97       	sbiw	r30, 0x00	; 0
    15ea:	39 f0       	breq	.+14     	; 0x15fa <__vector_19+0xb4>
    15ec:	6e e0       	ldi	r22, 0x0E	; 14
    15ee:	70 e0       	ldi	r23, 0x00	; 0
    15f0:	80 91 5b 01 	lds	r24, 0x015B	; 0x80015b <otable+0x1c>
    15f4:	90 91 5c 01 	lds	r25, 0x015C	; 0x80015c <otable+0x1d>
    15f8:	09 95       	icall
    15fa:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    15fe:	ff 91       	pop	r31
    1600:	ef 91       	pop	r30
    1602:	bf 91       	pop	r27
    1604:	af 91       	pop	r26
    1606:	9f 91       	pop	r25
    1608:	8f 91       	pop	r24
    160a:	7f 91       	pop	r23
    160c:	6f 91       	pop	r22
    160e:	5f 91       	pop	r21
    1610:	4f 91       	pop	r20
    1612:	3f 91       	pop	r19
    1614:	2f 91       	pop	r18
    1616:	1f 91       	pop	r17
    1618:	0f 91       	pop	r16
    161a:	0f 90       	pop	r0
    161c:	0f be       	out	0x3f, r0	; 63
    161e:	0f 90       	pop	r0
    1620:	1f 90       	pop	r1
    1622:	18 95       	reti

00001624 <__vector_20>:
    1624:	1f 92       	push	r1
    1626:	0f 92       	push	r0
    1628:	0f b6       	in	r0, 0x3f	; 63
    162a:	0f 92       	push	r0
    162c:	11 24       	eor	r1, r1
    162e:	0f 93       	push	r16
    1630:	1f 93       	push	r17
    1632:	2f 93       	push	r18
    1634:	3f 93       	push	r19
    1636:	4f 93       	push	r20
    1638:	5f 93       	push	r21
    163a:	6f 93       	push	r22
    163c:	7f 93       	push	r23
    163e:	8f 93       	push	r24
    1640:	9f 93       	push	r25
    1642:	af 93       	push	r26
    1644:	bf 93       	push	r27
    1646:	ef 93       	push	r30
    1648:	ff 93       	push	r31
    164a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    164e:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    1652:	ac 01       	movw	r20, r24
    1654:	09 2e       	mov	r0, r25
    1656:	00 0c       	add	r0, r0
    1658:	66 0b       	sbc	r22, r22
    165a:	77 0b       	sbc	r23, r23
    165c:	9a 01       	movw	r18, r20
    165e:	11 27       	eor	r17, r17
    1660:	00 27       	eor	r16, r16
    1662:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1666:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    166a:	60 e0       	ldi	r22, 0x00	; 0
    166c:	70 e0       	ldi	r23, 0x00	; 0
    166e:	40 2b       	or	r20, r16
    1670:	51 2b       	or	r21, r17
    1672:	62 2b       	or	r22, r18
    1674:	73 2b       	or	r23, r19
    1676:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    167a:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    167e:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    1682:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1686:	b0 9b       	sbis	0x16, 0	; 22
    1688:	1a c0       	rjmp	.+52     	; 0x16be <__vector_20+0x9a>
    168a:	01 96       	adiw	r24, 0x01	; 1
    168c:	09 2e       	mov	r0, r25
    168e:	00 0c       	add	r0, r0
    1690:	aa 0b       	sbc	r26, r26
    1692:	bb 0b       	sbc	r27, r27
    1694:	bc 01       	movw	r22, r24
    1696:	55 27       	eor	r21, r21
    1698:	44 27       	eor	r20, r20
    169a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    169e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16a2:	a0 e0       	ldi	r26, 0x00	; 0
    16a4:	b0 e0       	ldi	r27, 0x00	; 0
    16a6:	84 2b       	or	r24, r20
    16a8:	95 2b       	or	r25, r21
    16aa:	a6 2b       	or	r26, r22
    16ac:	b7 2b       	or	r27, r23
    16ae:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    16b2:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    16b6:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    16ba:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    16be:	e0 91 f5 01 	lds	r30, 0x01F5	; 0x8001f5 <mtable+0x1e>
    16c2:	f0 91 f6 01 	lds	r31, 0x01F6	; 0x8001f6 <mtable+0x1f>
    16c6:	30 97       	sbiw	r30, 0x00	; 0
    16c8:	39 f0       	breq	.+14     	; 0x16d8 <__vector_20+0xb4>
    16ca:	6f e0       	ldi	r22, 0x0F	; 15
    16cc:	70 e0       	ldi	r23, 0x00	; 0
    16ce:	80 91 5d 01 	lds	r24, 0x015D	; 0x80015d <otable+0x1e>
    16d2:	90 91 5e 01 	lds	r25, 0x015E	; 0x80015e <otable+0x1f>
    16d6:	09 95       	icall
    16d8:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    16dc:	ff 91       	pop	r31
    16de:	ef 91       	pop	r30
    16e0:	bf 91       	pop	r27
    16e2:	af 91       	pop	r26
    16e4:	9f 91       	pop	r25
    16e6:	8f 91       	pop	r24
    16e8:	7f 91       	pop	r23
    16ea:	6f 91       	pop	r22
    16ec:	5f 91       	pop	r21
    16ee:	4f 91       	pop	r20
    16f0:	3f 91       	pop	r19
    16f2:	2f 91       	pop	r18
    16f4:	1f 91       	pop	r17
    16f6:	0f 91       	pop	r16
    16f8:	0f 90       	pop	r0
    16fa:	0f be       	out	0x3f, r0	; 63
    16fc:	0f 90       	pop	r0
    16fe:	1f 90       	pop	r1
    1700:	18 95       	reti

00001702 <__vector_21>:
    1702:	1f 92       	push	r1
    1704:	0f 92       	push	r0
    1706:	0f b6       	in	r0, 0x3f	; 63
    1708:	0f 92       	push	r0
    170a:	11 24       	eor	r1, r1
    170c:	0f 93       	push	r16
    170e:	1f 93       	push	r17
    1710:	2f 93       	push	r18
    1712:	3f 93       	push	r19
    1714:	4f 93       	push	r20
    1716:	5f 93       	push	r21
    1718:	6f 93       	push	r22
    171a:	7f 93       	push	r23
    171c:	8f 93       	push	r24
    171e:	9f 93       	push	r25
    1720:	af 93       	push	r26
    1722:	bf 93       	push	r27
    1724:	ef 93       	push	r30
    1726:	ff 93       	push	r31
    1728:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    172c:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    1730:	ac 01       	movw	r20, r24
    1732:	09 2e       	mov	r0, r25
    1734:	00 0c       	add	r0, r0
    1736:	66 0b       	sbc	r22, r22
    1738:	77 0b       	sbc	r23, r23
    173a:	9a 01       	movw	r18, r20
    173c:	11 27       	eor	r17, r17
    173e:	00 27       	eor	r16, r16
    1740:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1744:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1748:	60 e0       	ldi	r22, 0x00	; 0
    174a:	70 e0       	ldi	r23, 0x00	; 0
    174c:	40 2b       	or	r20, r16
    174e:	51 2b       	or	r21, r17
    1750:	62 2b       	or	r22, r18
    1752:	73 2b       	or	r23, r19
    1754:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1758:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    175c:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    1760:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1764:	b0 9b       	sbis	0x16, 0	; 22
    1766:	1a c0       	rjmp	.+52     	; 0x179c <__vector_21+0x9a>
    1768:	01 96       	adiw	r24, 0x01	; 1
    176a:	09 2e       	mov	r0, r25
    176c:	00 0c       	add	r0, r0
    176e:	aa 0b       	sbc	r26, r26
    1770:	bb 0b       	sbc	r27, r27
    1772:	bc 01       	movw	r22, r24
    1774:	55 27       	eor	r21, r21
    1776:	44 27       	eor	r20, r20
    1778:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    177c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1780:	a0 e0       	ldi	r26, 0x00	; 0
    1782:	b0 e0       	ldi	r27, 0x00	; 0
    1784:	84 2b       	or	r24, r20
    1786:	95 2b       	or	r25, r21
    1788:	a6 2b       	or	r26, r22
    178a:	b7 2b       	or	r27, r23
    178c:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    1790:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    1794:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1798:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    179c:	e0 91 f7 01 	lds	r30, 0x01F7	; 0x8001f7 <mtable+0x20>
    17a0:	f0 91 f8 01 	lds	r31, 0x01F8	; 0x8001f8 <mtable+0x21>
    17a4:	30 97       	sbiw	r30, 0x00	; 0
    17a6:	39 f0       	breq	.+14     	; 0x17b6 <__vector_21+0xb4>
    17a8:	60 e1       	ldi	r22, 0x10	; 16
    17aa:	70 e0       	ldi	r23, 0x00	; 0
    17ac:	80 91 5f 01 	lds	r24, 0x015F	; 0x80015f <otable+0x20>
    17b0:	90 91 60 01 	lds	r25, 0x0160	; 0x800160 <otable+0x21>
    17b4:	09 95       	icall
    17b6:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    17ba:	ff 91       	pop	r31
    17bc:	ef 91       	pop	r30
    17be:	bf 91       	pop	r27
    17c0:	af 91       	pop	r26
    17c2:	9f 91       	pop	r25
    17c4:	8f 91       	pop	r24
    17c6:	7f 91       	pop	r23
    17c8:	6f 91       	pop	r22
    17ca:	5f 91       	pop	r21
    17cc:	4f 91       	pop	r20
    17ce:	3f 91       	pop	r19
    17d0:	2f 91       	pop	r18
    17d2:	1f 91       	pop	r17
    17d4:	0f 91       	pop	r16
    17d6:	0f 90       	pop	r0
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	0f 90       	pop	r0
    17dc:	1f 90       	pop	r1
    17de:	18 95       	reti

000017e0 <__vector_22>:
    17e0:	1f 92       	push	r1
    17e2:	0f 92       	push	r0
    17e4:	0f b6       	in	r0, 0x3f	; 63
    17e6:	0f 92       	push	r0
    17e8:	11 24       	eor	r1, r1
    17ea:	0f 93       	push	r16
    17ec:	1f 93       	push	r17
    17ee:	2f 93       	push	r18
    17f0:	3f 93       	push	r19
    17f2:	4f 93       	push	r20
    17f4:	5f 93       	push	r21
    17f6:	6f 93       	push	r22
    17f8:	7f 93       	push	r23
    17fa:	8f 93       	push	r24
    17fc:	9f 93       	push	r25
    17fe:	af 93       	push	r26
    1800:	bf 93       	push	r27
    1802:	ef 93       	push	r30
    1804:	ff 93       	push	r31
    1806:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    180a:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    180e:	ac 01       	movw	r20, r24
    1810:	09 2e       	mov	r0, r25
    1812:	00 0c       	add	r0, r0
    1814:	66 0b       	sbc	r22, r22
    1816:	77 0b       	sbc	r23, r23
    1818:	9a 01       	movw	r18, r20
    181a:	11 27       	eor	r17, r17
    181c:	00 27       	eor	r16, r16
    181e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1822:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1826:	60 e0       	ldi	r22, 0x00	; 0
    1828:	70 e0       	ldi	r23, 0x00	; 0
    182a:	40 2b       	or	r20, r16
    182c:	51 2b       	or	r21, r17
    182e:	62 2b       	or	r22, r18
    1830:	73 2b       	or	r23, r19
    1832:	40 93 37 01 	sts	0x0137, r20	; 0x800137 <timestamp>
    1836:	50 93 38 01 	sts	0x0138, r21	; 0x800138 <timestamp+0x1>
    183a:	60 93 39 01 	sts	0x0139, r22	; 0x800139 <timestamp+0x2>
    183e:	70 93 3a 01 	sts	0x013A, r23	; 0x80013a <timestamp+0x3>
    1842:	b0 9b       	sbis	0x16, 0	; 22
    1844:	1a c0       	rjmp	.+52     	; 0x187a <__vector_22+0x9a>
    1846:	01 96       	adiw	r24, 0x01	; 1
    1848:	09 2e       	mov	r0, r25
    184a:	00 0c       	add	r0, r0
    184c:	aa 0b       	sbc	r26, r26
    184e:	bb 0b       	sbc	r27, r27
    1850:	bc 01       	movw	r22, r24
    1852:	55 27       	eor	r21, r21
    1854:	44 27       	eor	r20, r20
    1856:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    185a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    185e:	a0 e0       	ldi	r26, 0x00	; 0
    1860:	b0 e0       	ldi	r27, 0x00	; 0
    1862:	84 2b       	or	r24, r20
    1864:	95 2b       	or	r25, r21
    1866:	a6 2b       	or	r26, r22
    1868:	b7 2b       	or	r27, r23
    186a:	80 93 37 01 	sts	0x0137, r24	; 0x800137 <timestamp>
    186e:	90 93 38 01 	sts	0x0138, r25	; 0x800138 <timestamp+0x1>
    1872:	a0 93 39 01 	sts	0x0139, r26	; 0x800139 <timestamp+0x2>
    1876:	b0 93 3a 01 	sts	0x013A, r27	; 0x80013a <timestamp+0x3>
    187a:	e0 91 f9 01 	lds	r30, 0x01F9	; 0x8001f9 <mtable+0x22>
    187e:	f0 91 fa 01 	lds	r31, 0x01FA	; 0x8001fa <mtable+0x23>
    1882:	30 97       	sbiw	r30, 0x00	; 0
    1884:	39 f0       	breq	.+14     	; 0x1894 <__vector_22+0xb4>
    1886:	61 e1       	ldi	r22, 0x11	; 17
    1888:	70 e0       	ldi	r23, 0x00	; 0
    188a:	80 91 61 01 	lds	r24, 0x0161	; 0x800161 <otable+0x22>
    188e:	90 91 62 01 	lds	r25, 0x0162	; 0x800162 <otable+0x23>
    1892:	09 95       	icall
    1894:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1898:	ff 91       	pop	r31
    189a:	ef 91       	pop	r30
    189c:	bf 91       	pop	r27
    189e:	af 91       	pop	r26
    18a0:	9f 91       	pop	r25
    18a2:	8f 91       	pop	r24
    18a4:	7f 91       	pop	r23
    18a6:	6f 91       	pop	r22
    18a8:	5f 91       	pop	r21
    18aa:	4f 91       	pop	r20
    18ac:	3f 91       	pop	r19
    18ae:	2f 91       	pop	r18
    18b0:	1f 91       	pop	r17
    18b2:	0f 91       	pop	r16
    18b4:	0f 90       	pop	r0
    18b6:	0f be       	out	0x3f, r0	; 63
    18b8:	0f 90       	pop	r0
    18ba:	1f 90       	pop	r1
    18bc:	18 95       	reti

000018be <idle>:
    18be:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    18c2:	78 94       	sei
    18c4:	81 e0       	ldi	r24, 0x01	; 1
    18c6:	83 bf       	out	0x33, r24	; 51
    18c8:	88 95       	sleep
    18ca:	fc cf       	rjmp	.-8      	; 0x18c4 <idle+0x6>

000018cc <__vector_9>:
    18cc:	1f 92       	push	r1
    18ce:	0f 92       	push	r0
    18d0:	0f b6       	in	r0, 0x3f	; 63
    18d2:	0f 92       	push	r0
    18d4:	11 24       	eor	r1, r1
    18d6:	2f 93       	push	r18
    18d8:	3f 93       	push	r19
    18da:	4f 93       	push	r20
    18dc:	5f 93       	push	r21
    18de:	6f 93       	push	r22
    18e0:	7f 93       	push	r23
    18e2:	8f 93       	push	r24
    18e4:	9f 93       	push	r25
    18e6:	ef 93       	push	r30
    18e8:	ff 93       	push	r31
    18ea:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    18ee:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    18f2:	01 96       	adiw	r24, 0x01	; 1
    18f4:	90 93 36 01 	sts	0x0136, r25	; 0x800136 <overflows+0x1>
    18f8:	80 93 35 01 	sts	0x0135, r24	; 0x800135 <overflows>
    18fc:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <timerQ>
    1900:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <timerQ+0x1>
    1904:	30 97       	sbiw	r30, 0x00	; 0
    1906:	01 f1       	breq	.+64     	; 0x1948 <__vector_9+0x7c>
    1908:	42 81       	ldd	r20, Z+2	; 0x02
    190a:	53 81       	ldd	r21, Z+3	; 0x03
    190c:	64 81       	ldd	r22, Z+4	; 0x04
    190e:	75 81       	ldd	r23, Z+5	; 0x05
    1910:	86 17       	cp	r24, r22
    1912:	97 07       	cpc	r25, r23
    1914:	c9 f4       	brne	.+50     	; 0x1948 <__vector_9+0x7c>
    1916:	ca 01       	movw	r24, r20
    1918:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    191c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1920:	42 1b       	sub	r20, r18
    1922:	53 0b       	sbc	r21, r19
    1924:	41 30       	cpi	r20, 0x01	; 1
    1926:	51 05       	cpc	r21, r1
    1928:	29 f4       	brne	.+10     	; 0x1934 <__vector_9+0x68>
    192a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    192e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1932:	01 96       	adiw	r24, 0x01	; 1
    1934:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1938:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    193c:	ef e6       	ldi	r30, 0x6F	; 111
    193e:	f0 e0       	ldi	r31, 0x00	; 0
    1940:	80 81       	ld	r24, Z
    1942:	82 60       	ori	r24, 0x02	; 2
    1944:	80 83       	st	Z, r24
    1946:	05 c0       	rjmp	.+10     	; 0x1952 <__vector_9+0x86>
    1948:	ef e6       	ldi	r30, 0x6F	; 111
    194a:	f0 e0       	ldi	r31, 0x00	; 0
    194c:	80 81       	ld	r24, Z
    194e:	8d 7f       	andi	r24, 0xFD	; 253
    1950:	80 83       	st	Z, r24
    1952:	ff 91       	pop	r31
    1954:	ef 91       	pop	r30
    1956:	9f 91       	pop	r25
    1958:	8f 91       	pop	r24
    195a:	7f 91       	pop	r23
    195c:	6f 91       	pop	r22
    195e:	5f 91       	pop	r21
    1960:	4f 91       	pop	r20
    1962:	3f 91       	pop	r19
    1964:	2f 91       	pop	r18
    1966:	0f 90       	pop	r0
    1968:	0f be       	out	0x3f, r0	; 63
    196a:	0f 90       	pop	r0
    196c:	1f 90       	pop	r1
    196e:	18 95       	reti

00001970 <__vector_7>:
    1970:	1f 92       	push	r1
    1972:	0f 92       	push	r0
    1974:	0f b6       	in	r0, 0x3f	; 63
    1976:	0f 92       	push	r0
    1978:	11 24       	eor	r1, r1
    197a:	cf 92       	push	r12
    197c:	df 92       	push	r13
    197e:	ef 92       	push	r14
    1980:	ff 92       	push	r15
    1982:	2f 93       	push	r18
    1984:	3f 93       	push	r19
    1986:	4f 93       	push	r20
    1988:	5f 93       	push	r21
    198a:	6f 93       	push	r22
    198c:	7f 93       	push	r23
    198e:	8f 93       	push	r24
    1990:	9f 93       	push	r25
    1992:	af 93       	push	r26
    1994:	bf 93       	push	r27
    1996:	ef 93       	push	r30
    1998:	ff 93       	push	r31
    199a:	80 91 35 01 	lds	r24, 0x0135	; 0x800135 <overflows>
    199e:	90 91 36 01 	lds	r25, 0x0136	; 0x800136 <overflows+0x1>
    19a2:	6c 01       	movw	r12, r24
    19a4:	09 2e       	mov	r0, r25
    19a6:	00 0c       	add	r0, r0
    19a8:	ee 08       	sbc	r14, r14
    19aa:	ff 08       	sbc	r15, r15
    19ac:	76 01       	movw	r14, r12
    19ae:	dd 24       	eor	r13, r13
    19b0:	cc 24       	eor	r12, r12
    19b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ba:	60 e0       	ldi	r22, 0x00	; 0
    19bc:	70 e0       	ldi	r23, 0x00	; 0
    19be:	c4 2a       	or	r12, r20
    19c0:	d5 2a       	or	r13, r21
    19c2:	e6 2a       	or	r14, r22
    19c4:	f7 2a       	or	r15, r23
    19c6:	b0 9b       	sbis	0x16, 0	; 22
    19c8:	1e c0       	rjmp	.+60     	; 0x1a06 <__vector_7+0x96>
    19ca:	6c 01       	movw	r12, r24
    19cc:	2f ef       	ldi	r18, 0xFF	; 255
    19ce:	c2 1a       	sub	r12, r18
    19d0:	d2 0a       	sbc	r13, r18
    19d2:	0d 2c       	mov	r0, r13
    19d4:	00 0c       	add	r0, r0
    19d6:	ee 08       	sbc	r14, r14
    19d8:	ff 08       	sbc	r15, r15
    19da:	d6 01       	movw	r26, r12
    19dc:	99 27       	eor	r25, r25
    19de:	88 27       	eor	r24, r24
    19e0:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19e4:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19e8:	e1 2c       	mov	r14, r1
    19ea:	f1 2c       	mov	r15, r1
    19ec:	c8 2a       	or	r12, r24
    19ee:	d9 2a       	or	r13, r25
    19f0:	ea 2a       	or	r14, r26
    19f2:	fb 2a       	or	r15, r27
    19f4:	08 c0       	rjmp	.+16     	; 0x1a06 <__vector_7+0x96>
    19f6:	8b e3       	ldi	r24, 0x3B	; 59
    19f8:	91 e0       	ldi	r25, 0x01	; 1
    19fa:	0e 94 28 04 	call	0x850	; 0x850 <dequeue>
    19fe:	6d e3       	ldi	r22, 0x3D	; 61
    1a00:	71 e0       	ldi	r23, 0x01	; 1
    1a02:	0e 94 c6 03 	call	0x78c	; 0x78c <enqueueByDeadline>
    1a06:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <timerQ>
    1a0a:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <timerQ+0x1>
    1a0e:	30 97       	sbiw	r30, 0x00	; 0
    1a10:	69 f0       	breq	.+26     	; 0x1a2c <__vector_7+0xbc>
    1a12:	82 81       	ldd	r24, Z+2	; 0x02
    1a14:	93 81       	ldd	r25, Z+3	; 0x03
    1a16:	a4 81       	ldd	r26, Z+4	; 0x04
    1a18:	b5 81       	ldd	r27, Z+5	; 0x05
    1a1a:	8c 19       	sub	r24, r12
    1a1c:	9d 09       	sbc	r25, r13
    1a1e:	ae 09       	sbc	r26, r14
    1a20:	bf 09       	sbc	r27, r15
    1a22:	18 16       	cp	r1, r24
    1a24:	19 06       	cpc	r1, r25
    1a26:	1a 06       	cpc	r1, r26
    1a28:	1b 06       	cpc	r1, r27
    1a2a:	2c f7       	brge	.-54     	; 0x19f6 <__vector_7+0x86>
    1a2c:	30 97       	sbiw	r30, 0x00	; 0
    1a2e:	21 f1       	breq	.+72     	; 0x1a78 <__vector_7+0x108>
    1a30:	82 81       	ldd	r24, Z+2	; 0x02
    1a32:	93 81       	ldd	r25, Z+3	; 0x03
    1a34:	a4 81       	ldd	r26, Z+4	; 0x04
    1a36:	b5 81       	ldd	r27, Z+5	; 0x05
    1a38:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <overflows>
    1a3c:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <overflows+0x1>
    1a40:	2a 17       	cp	r18, r26
    1a42:	3b 07       	cpc	r19, r27
    1a44:	c9 f4       	brne	.+50     	; 0x1a78 <__vector_7+0x108>
    1a46:	9c 01       	movw	r18, r24
    1a48:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a4c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a50:	84 1b       	sub	r24, r20
    1a52:	95 0b       	sbc	r25, r21
    1a54:	01 97       	sbiw	r24, 0x01	; 1
    1a56:	31 f4       	brne	.+12     	; 0x1a64 <__vector_7+0xf4>
    1a58:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a5c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a60:	2f 5f       	subi	r18, 0xFF	; 255
    1a62:	3f 4f       	sbci	r19, 0xFF	; 255
    1a64:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1a68:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1a6c:	ef e6       	ldi	r30, 0x6F	; 111
    1a6e:	f0 e0       	ldi	r31, 0x00	; 0
    1a70:	80 81       	ld	r24, Z
    1a72:	82 60       	ori	r24, 0x02	; 2
    1a74:	80 83       	st	Z, r24
    1a76:	05 c0       	rjmp	.+10     	; 0x1a82 <__vector_7+0x112>
    1a78:	ef e6       	ldi	r30, 0x6F	; 111
    1a7a:	f0 e0       	ldi	r31, 0x00	; 0
    1a7c:	80 81       	ld	r24, Z
    1a7e:	8d 7f       	andi	r24, 0xFD	; 253
    1a80:	80 83       	st	Z, r24
    1a82:	0e 94 5d 04 	call	0x8ba	; 0x8ba <schedule>
    1a86:	ff 91       	pop	r31
    1a88:	ef 91       	pop	r30
    1a8a:	bf 91       	pop	r27
    1a8c:	af 91       	pop	r26
    1a8e:	9f 91       	pop	r25
    1a90:	8f 91       	pop	r24
    1a92:	7f 91       	pop	r23
    1a94:	6f 91       	pop	r22
    1a96:	5f 91       	pop	r21
    1a98:	4f 91       	pop	r20
    1a9a:	3f 91       	pop	r19
    1a9c:	2f 91       	pop	r18
    1a9e:	ff 90       	pop	r15
    1aa0:	ef 90       	pop	r14
    1aa2:	df 90       	pop	r13
    1aa4:	cf 90       	pop	r12
    1aa6:	0f 90       	pop	r0
    1aa8:	0f be       	out	0x3f, r0	; 63
    1aaa:	0f 90       	pop	r0
    1aac:	1f 90       	pop	r1
    1aae:	18 95       	reti

00001ab0 <async>:
    1ab0:	3f 92       	push	r3
    1ab2:	4f 92       	push	r4
    1ab4:	5f 92       	push	r5
    1ab6:	6f 92       	push	r6
    1ab8:	7f 92       	push	r7
    1aba:	8f 92       	push	r8
    1abc:	9f 92       	push	r9
    1abe:	af 92       	push	r10
    1ac0:	bf 92       	push	r11
    1ac2:	cf 92       	push	r12
    1ac4:	df 92       	push	r13
    1ac6:	ef 92       	push	r14
    1ac8:	ff 92       	push	r15
    1aca:	0f 93       	push	r16
    1acc:	1f 93       	push	r17
    1ace:	cf 93       	push	r28
    1ad0:	df 93       	push	r29
    1ad2:	2b 01       	movw	r4, r22
    1ad4:	3c 01       	movw	r6, r24
    1ad6:	49 01       	movw	r8, r18
    1ad8:	5a 01       	movw	r10, r20
    1ada:	8f b7       	in	r24, 0x3f	; 63
    1adc:	80 78       	andi	r24, 0x80	; 128
    1ade:	38 2e       	mov	r3, r24
    1ae0:	f8 94       	cli
    1ae2:	89 e1       	ldi	r24, 0x19	; 25
    1ae4:	91 e0       	ldi	r25, 0x01	; 1
    1ae6:	0e 94 28 04 	call	0x850	; 0x850 <dequeue>
    1aea:	ec 01       	movw	r28, r24
    1aec:	1b 87       	std	Y+11, r17	; 0x0b
    1aee:	0a 87       	std	Y+10, r16	; 0x0a
    1af0:	fd 86       	std	Y+13, r15	; 0x0d
    1af2:	ec 86       	std	Y+12, r14	; 0x0c
    1af4:	df 86       	std	Y+15, r13	; 0x0f
    1af6:	ce 86       	std	Y+14, r12	; 0x0e
    1af8:	33 20       	and	r3, r3
    1afa:	61 f0       	breq	.+24     	; 0x1b14 <async+0x64>
    1afc:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <current>
    1b00:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <current+0x1>
    1b04:	02 80       	ldd	r0, Z+2	; 0x02
    1b06:	f3 81       	ldd	r31, Z+3	; 0x03
    1b08:	e0 2d       	mov	r30, r0
    1b0a:	82 81       	ldd	r24, Z+2	; 0x02
    1b0c:	93 81       	ldd	r25, Z+3	; 0x03
    1b0e:	a4 81       	ldd	r26, Z+4	; 0x04
    1b10:	b5 81       	ldd	r27, Z+5	; 0x05
    1b12:	08 c0       	rjmp	.+16     	; 0x1b24 <async+0x74>
    1b14:	80 91 37 01 	lds	r24, 0x0137	; 0x800137 <timestamp>
    1b18:	90 91 38 01 	lds	r25, 0x0138	; 0x800138 <timestamp+0x1>
    1b1c:	a0 91 39 01 	lds	r26, 0x0139	; 0x800139 <timestamp+0x2>
    1b20:	b0 91 3a 01 	lds	r27, 0x013A	; 0x80013a <timestamp+0x3>
    1b24:	48 0e       	add	r4, r24
    1b26:	59 1e       	adc	r5, r25
    1b28:	6a 1e       	adc	r6, r26
    1b2a:	7b 1e       	adc	r7, r27
    1b2c:	4a 82       	std	Y+2, r4	; 0x02
    1b2e:	5b 82       	std	Y+3, r5	; 0x03
    1b30:	6c 82       	std	Y+4, r6	; 0x04
    1b32:	7d 82       	std	Y+5, r7	; 0x05
    1b34:	18 14       	cp	r1, r8
    1b36:	19 04       	cpc	r1, r9
    1b38:	1a 04       	cpc	r1, r10
    1b3a:	1b 04       	cpc	r1, r11
    1b3c:	44 f0       	brlt	.+16     	; 0x1b4e <async+0x9e>
    1b3e:	0f 2e       	mov	r0, r31
    1b40:	88 24       	eor	r8, r8
    1b42:	8a 94       	dec	r8
    1b44:	98 2c       	mov	r9, r8
    1b46:	a8 2c       	mov	r10, r8
    1b48:	ff e7       	ldi	r31, 0x7F	; 127
    1b4a:	bf 2e       	mov	r11, r31
    1b4c:	f0 2d       	mov	r31, r0
    1b4e:	84 0c       	add	r8, r4
    1b50:	95 1c       	adc	r9, r5
    1b52:	a6 1c       	adc	r10, r6
    1b54:	b7 1c       	adc	r11, r7
    1b56:	8e 82       	std	Y+6, r8	; 0x06
    1b58:	9f 82       	std	Y+7, r9	; 0x07
    1b5a:	a8 86       	std	Y+8, r10	; 0x08
    1b5c:	b9 86       	std	Y+9, r11	; 0x09
    1b5e:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <overflows>
    1b62:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <overflows+0x1>
    1b66:	c9 01       	movw	r24, r18
    1b68:	03 2e       	mov	r0, r19
    1b6a:	00 0c       	add	r0, r0
    1b6c:	aa 0b       	sbc	r26, r26
    1b6e:	bb 0b       	sbc	r27, r27
    1b70:	dc 01       	movw	r26, r24
    1b72:	99 27       	eor	r25, r25
    1b74:	88 27       	eor	r24, r24
    1b76:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1b7a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b7e:	60 e0       	ldi	r22, 0x00	; 0
    1b80:	70 e0       	ldi	r23, 0x00	; 0
    1b82:	84 2b       	or	r24, r20
    1b84:	95 2b       	or	r25, r21
    1b86:	a6 2b       	or	r26, r22
    1b88:	b7 2b       	or	r27, r23
    1b8a:	b0 9b       	sbis	0x16, 0	; 22
    1b8c:	13 c0       	rjmp	.+38     	; 0x1bb4 <async+0x104>
    1b8e:	c9 01       	movw	r24, r18
    1b90:	01 96       	adiw	r24, 0x01	; 1
    1b92:	09 2e       	mov	r0, r25
    1b94:	00 0c       	add	r0, r0
    1b96:	aa 0b       	sbc	r26, r26
    1b98:	bb 0b       	sbc	r27, r27
    1b9a:	dc 01       	movw	r26, r24
    1b9c:	99 27       	eor	r25, r25
    1b9e:	88 27       	eor	r24, r24
    1ba0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ba4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ba8:	60 e0       	ldi	r22, 0x00	; 0
    1baa:	70 e0       	ldi	r23, 0x00	; 0
    1bac:	84 2b       	or	r24, r20
    1bae:	95 2b       	or	r25, r21
    1bb0:	a6 2b       	or	r26, r22
    1bb2:	b7 2b       	or	r27, r23
    1bb4:	48 1a       	sub	r4, r24
    1bb6:	59 0a       	sbc	r5, r25
    1bb8:	6a 0a       	sbc	r6, r26
    1bba:	7b 0a       	sbc	r7, r27
    1bbc:	14 14       	cp	r1, r4
    1bbe:	15 04       	cpc	r1, r5
    1bc0:	16 04       	cpc	r1, r6
    1bc2:	17 04       	cpc	r1, r7
    1bc4:	ac f5       	brge	.+106    	; 0x1c30 <async+0x180>
    1bc6:	6b e3       	ldi	r22, 0x3B	; 59
    1bc8:	71 e0       	ldi	r23, 0x01	; 1
    1bca:	ce 01       	movw	r24, r28
    1bcc:	0e 94 f7 03 	call	0x7ee	; 0x7ee <enqueueByBaseline>
    1bd0:	e0 91 3b 01 	lds	r30, 0x013B	; 0x80013b <timerQ>
    1bd4:	f0 91 3c 01 	lds	r31, 0x013C	; 0x80013c <timerQ+0x1>
    1bd8:	30 97       	sbiw	r30, 0x00	; 0
    1bda:	21 f1       	breq	.+72     	; 0x1c24 <async+0x174>
    1bdc:	82 81       	ldd	r24, Z+2	; 0x02
    1bde:	93 81       	ldd	r25, Z+3	; 0x03
    1be0:	a4 81       	ldd	r26, Z+4	; 0x04
    1be2:	b5 81       	ldd	r27, Z+5	; 0x05
    1be4:	20 91 35 01 	lds	r18, 0x0135	; 0x800135 <overflows>
    1be8:	30 91 36 01 	lds	r19, 0x0136	; 0x800136 <overflows+0x1>
    1bec:	2a 17       	cp	r18, r26
    1bee:	3b 07       	cpc	r19, r27
    1bf0:	c9 f4       	brne	.+50     	; 0x1c24 <async+0x174>
    1bf2:	9c 01       	movw	r18, r24
    1bf4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bf8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1bfc:	84 1b       	sub	r24, r20
    1bfe:	95 0b       	sbc	r25, r21
    1c00:	01 97       	sbiw	r24, 0x01	; 1
    1c02:	31 f4       	brne	.+12     	; 0x1c10 <async+0x160>
    1c04:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c08:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c0c:	2f 5f       	subi	r18, 0xFF	; 255
    1c0e:	3f 4f       	sbci	r19, 0xFF	; 255
    1c10:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1c14:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1c18:	ef e6       	ldi	r30, 0x6F	; 111
    1c1a:	f0 e0       	ldi	r31, 0x00	; 0
    1c1c:	80 81       	ld	r24, Z
    1c1e:	82 60       	ori	r24, 0x02	; 2
    1c20:	80 83       	st	Z, r24
    1c22:	39 c0       	rjmp	.+114    	; 0x1c96 <async+0x1e6>
    1c24:	ef e6       	ldi	r30, 0x6F	; 111
    1c26:	f0 e0       	ldi	r31, 0x00	; 0
    1c28:	80 81       	ld	r24, Z
    1c2a:	8d 7f       	andi	r24, 0xFD	; 253
    1c2c:	80 83       	st	Z, r24
    1c2e:	33 c0       	rjmp	.+102    	; 0x1c96 <async+0x1e6>
    1c30:	6d e3       	ldi	r22, 0x3D	; 61
    1c32:	71 e0       	ldi	r23, 0x01	; 1
    1c34:	ce 01       	movw	r24, r28
    1c36:	0e 94 c6 03 	call	0x78c	; 0x78c <enqueueByDeadline>
    1c3a:	33 20       	and	r3, r3
    1c3c:	61 f1       	breq	.+88     	; 0x1c96 <async+0x1e6>
    1c3e:	80 91 17 01 	lds	r24, 0x0117	; 0x800117 <threadPool>
    1c42:	90 91 18 01 	lds	r25, 0x0118	; 0x800118 <threadPool+0x1>
    1c46:	89 2b       	or	r24, r25
    1c48:	31 f1       	breq	.+76     	; 0x1c96 <async+0x1e6>
    1c4a:	e0 91 3d 01 	lds	r30, 0x013D	; 0x80013d <msgQ>
    1c4e:	f0 91 3e 01 	lds	r31, 0x013E	; 0x80013e <msgQ+0x1>
    1c52:	86 81       	ldd	r24, Z+6	; 0x06
    1c54:	97 81       	ldd	r25, Z+7	; 0x07
    1c56:	a0 85       	ldd	r26, Z+8	; 0x08
    1c58:	b1 85       	ldd	r27, Z+9	; 0x09
    1c5a:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <activeStack>
    1c5e:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <activeStack+0x1>
    1c62:	02 80       	ldd	r0, Z+2	; 0x02
    1c64:	f3 81       	ldd	r31, Z+3	; 0x03
    1c66:	e0 2d       	mov	r30, r0
    1c68:	46 81       	ldd	r20, Z+6	; 0x06
    1c6a:	57 81       	ldd	r21, Z+7	; 0x07
    1c6c:	60 85       	ldd	r22, Z+8	; 0x08
    1c6e:	71 85       	ldd	r23, Z+9	; 0x09
    1c70:	84 1b       	sub	r24, r20
    1c72:	95 0b       	sbc	r25, r21
    1c74:	a6 0b       	sbc	r26, r22
    1c76:	b7 0b       	sbc	r27, r23
    1c78:	72 f4       	brpl	.+28     	; 0x1c96 <async+0x1e6>
    1c7a:	87 e1       	ldi	r24, 0x17	; 23
    1c7c:	91 e0       	ldi	r25, 0x01	; 1
    1c7e:	0e 94 53 04 	call	0x8a6	; 0x8a6 <pop>
    1c82:	65 e1       	ldi	r22, 0x15	; 21
    1c84:	71 e0       	ldi	r23, 0x01	; 1
    1c86:	0e 94 49 04 	call	0x892	; 0x892 <push>
    1c8a:	80 91 15 01 	lds	r24, 0x0115	; 0x800115 <activeStack>
    1c8e:	90 91 16 01 	lds	r25, 0x0116	; 0x800116 <activeStack+0x1>
    1c92:	0e 94 a6 03 	call	0x74c	; 0x74c <dispatch>
    1c96:	33 20       	and	r3, r3
    1c98:	09 f0       	breq	.+2      	; 0x1c9c <async+0x1ec>
    1c9a:	78 94       	sei
    1c9c:	ce 01       	movw	r24, r28
    1c9e:	df 91       	pop	r29
    1ca0:	cf 91       	pop	r28
    1ca2:	1f 91       	pop	r17
    1ca4:	0f 91       	pop	r16
    1ca6:	ff 90       	pop	r15
    1ca8:	ef 90       	pop	r14
    1caa:	df 90       	pop	r13
    1cac:	cf 90       	pop	r12
    1cae:	bf 90       	pop	r11
    1cb0:	af 90       	pop	r10
    1cb2:	9f 90       	pop	r9
    1cb4:	8f 90       	pop	r8
    1cb6:	7f 90       	pop	r7
    1cb8:	6f 90       	pop	r6
    1cba:	5f 90       	pop	r5
    1cbc:	4f 90       	pop	r4
    1cbe:	3f 90       	pop	r3
    1cc0:	08 95       	ret

00001cc2 <sync>:
    1cc2:	cf 92       	push	r12
    1cc4:	df 92       	push	r13
    1cc6:	ef 92       	push	r14
    1cc8:	ff 92       	push	r15
    1cca:	0f 93       	push	r16
    1ccc:	1f 93       	push	r17
    1cce:	cf 93       	push	r28
    1cd0:	df 93       	push	r29
    1cd2:	ec 01       	movw	r28, r24
    1cd4:	7b 01       	movw	r14, r22
    1cd6:	6a 01       	movw	r12, r20
    1cd8:	1f b7       	in	r17, 0x3f	; 63
    1cda:	10 78       	andi	r17, 0x80	; 128
    1cdc:	f8 94       	cli
    1cde:	a8 81       	ld	r26, Y
    1ce0:	b9 81       	ldd	r27, Y+1	; 0x01
    1ce2:	10 97       	sbiw	r26, 0x00	; 0
    1ce4:	19 f4       	brne	.+6      	; 0x1cec <sync+0x2a>
    1ce6:	35 c0       	rjmp	.+106    	; 0x1d52 <sync+0x90>
    1ce8:	a0 81       	ld	r26, Z
    1cea:	b1 81       	ldd	r27, Z+1	; 0x01
    1cec:	14 96       	adiw	r26, 0x04	; 4
    1cee:	ed 91       	ld	r30, X+
    1cf0:	fc 91       	ld	r31, X
    1cf2:	15 97       	sbiw	r26, 0x05	; 5
    1cf4:	30 97       	sbiw	r30, 0x00	; 0
    1cf6:	c1 f7       	brne	.-16     	; 0x1ce8 <sync+0x26>
    1cf8:	20 91 13 01 	lds	r18, 0x0113	; 0x800113 <current>
    1cfc:	30 91 14 01 	lds	r19, 0x0114	; 0x800114 <current+0x1>
    1d00:	a2 17       	cp	r26, r18
    1d02:	b3 07       	cpc	r27, r19
    1d04:	11 f0       	breq	.+4      	; 0x1d0a <sync+0x48>
    1d06:	11 11       	cpse	r17, r1
    1d08:	07 c0       	rjmp	.+14     	; 0x1d18 <sync+0x56>
    1d0a:	11 23       	and	r17, r17
    1d0c:	09 f4       	brne	.+2      	; 0x1d10 <sync+0x4e>
    1d0e:	4a c0       	rjmp	.+148    	; 0x1da4 <sync+0xe2>
    1d10:	78 94       	sei
    1d12:	8f ef       	ldi	r24, 0xFF	; 255
    1d14:	9f ef       	ldi	r25, 0xFF	; 255
    1d16:	4e c0       	rjmp	.+156    	; 0x1db4 <sync+0xf2>
    1d18:	8a 81       	ldd	r24, Y+2	; 0x02
    1d1a:	9b 81       	ldd	r25, Y+3	; 0x03
    1d1c:	00 97       	sbiw	r24, 0x00	; 0
    1d1e:	19 f0       	breq	.+6      	; 0x1d26 <sync+0x64>
    1d20:	fc 01       	movw	r30, r24
    1d22:	15 82       	std	Z+5, r1	; 0x05
    1d24:	14 82       	std	Z+4, r1	; 0x04
    1d26:	3b 83       	std	Y+3, r19	; 0x03
    1d28:	2a 83       	std	Y+2, r18	; 0x02
    1d2a:	f9 01       	movw	r30, r18
    1d2c:	d5 83       	std	Z+5, r29	; 0x05
    1d2e:	c4 83       	std	Z+4, r28	; 0x04
    1d30:	cd 01       	movw	r24, r26
    1d32:	0e 94 a6 03 	call	0x74c	; 0x74c <dispatch>
    1d36:	e0 91 13 01 	lds	r30, 0x0113	; 0x800113 <current>
    1d3a:	f0 91 14 01 	lds	r31, 0x0114	; 0x800114 <current+0x1>
    1d3e:	82 81       	ldd	r24, Z+2	; 0x02
    1d40:	93 81       	ldd	r25, Z+3	; 0x03
    1d42:	89 2b       	or	r24, r25
    1d44:	31 f4       	brne	.+12     	; 0x1d52 <sync+0x90>
    1d46:	11 23       	and	r17, r17
    1d48:	81 f1       	breq	.+96     	; 0x1daa <sync+0xe8>
    1d4a:	78 94       	sei
    1d4c:	80 e0       	ldi	r24, 0x00	; 0
    1d4e:	90 e0       	ldi	r25, 0x00	; 0
    1d50:	31 c0       	rjmp	.+98     	; 0x1db4 <sync+0xf2>
    1d52:	80 91 13 01 	lds	r24, 0x0113	; 0x800113 <current>
    1d56:	90 91 14 01 	lds	r25, 0x0114	; 0x800114 <current+0x1>
    1d5a:	99 83       	std	Y+1, r25	; 0x01
    1d5c:	88 83       	st	Y, r24
    1d5e:	11 23       	and	r17, r17
    1d60:	29 f0       	breq	.+10     	; 0x1d6c <sync+0xaa>
    1d62:	8a 81       	ldd	r24, Y+2	; 0x02
    1d64:	9b 81       	ldd	r25, Y+3	; 0x03
    1d66:	01 97       	sbiw	r24, 0x01	; 1
    1d68:	09 f0       	breq	.+2      	; 0x1d6c <sync+0xaa>
    1d6a:	78 94       	sei
    1d6c:	b6 01       	movw	r22, r12
    1d6e:	ce 01       	movw	r24, r28
    1d70:	f7 01       	movw	r30, r14
    1d72:	09 95       	icall
    1d74:	f8 2e       	mov	r15, r24
    1d76:	09 2f       	mov	r16, r25
    1d78:	8f b7       	in	r24, 0x3f	; 63
    1d7a:	f8 94       	cli
    1d7c:	19 82       	std	Y+1, r1	; 0x01
    1d7e:	18 82       	st	Y, r1
    1d80:	8a 81       	ldd	r24, Y+2	; 0x02
    1d82:	9b 81       	ldd	r25, Y+3	; 0x03
    1d84:	82 30       	cpi	r24, 0x02	; 2
    1d86:	91 05       	cpc	r25, r1
    1d88:	38 f0       	brcs	.+14     	; 0x1d98 <sync+0xd6>
    1d8a:	1b 82       	std	Y+3, r1	; 0x03
    1d8c:	1a 82       	std	Y+2, r1	; 0x02
    1d8e:	fc 01       	movw	r30, r24
    1d90:	15 82       	std	Z+5, r1	; 0x05
    1d92:	14 82       	std	Z+4, r1	; 0x04
    1d94:	0e 94 a6 03 	call	0x74c	; 0x74c <dispatch>
    1d98:	11 23       	and	r17, r17
    1d9a:	51 f0       	breq	.+20     	; 0x1db0 <sync+0xee>
    1d9c:	78 94       	sei
    1d9e:	8f 2d       	mov	r24, r15
    1da0:	90 2f       	mov	r25, r16
    1da2:	08 c0       	rjmp	.+16     	; 0x1db4 <sync+0xf2>
    1da4:	8f ef       	ldi	r24, 0xFF	; 255
    1da6:	9f ef       	ldi	r25, 0xFF	; 255
    1da8:	05 c0       	rjmp	.+10     	; 0x1db4 <sync+0xf2>
    1daa:	80 e0       	ldi	r24, 0x00	; 0
    1dac:	90 e0       	ldi	r25, 0x00	; 0
    1dae:	02 c0       	rjmp	.+4      	; 0x1db4 <sync+0xf2>
    1db0:	8f 2d       	mov	r24, r15
    1db2:	90 2f       	mov	r25, r16
    1db4:	df 91       	pop	r29
    1db6:	cf 91       	pop	r28
    1db8:	1f 91       	pop	r17
    1dba:	0f 91       	pop	r16
    1dbc:	ff 90       	pop	r15
    1dbe:	ef 90       	pop	r14
    1dc0:	df 90       	pop	r13
    1dc2:	cf 90       	pop	r12
    1dc4:	08 95       	ret

00001dc6 <run>:
    1dc6:	00 91 13 01 	lds	r16, 0x0113	; 0x800113 <current>
    1dca:	10 91 14 01 	lds	r17, 0x0114	; 0x800114 <current+0x1>
    1dce:	8d e3       	ldi	r24, 0x3D	; 61
    1dd0:	91 e0       	ldi	r25, 0x01	; 1
    1dd2:	0e 94 28 04 	call	0x850	; 0x850 <dequeue>
    1dd6:	ec 01       	movw	r28, r24
    1dd8:	f8 01       	movw	r30, r16
    1dda:	93 83       	std	Z+3, r25	; 0x03
    1ddc:	82 83       	std	Z+2, r24	; 0x02
    1dde:	78 94       	sei
    1de0:	6c 85       	ldd	r22, Y+12	; 0x0c
    1de2:	7d 85       	ldd	r23, Y+13	; 0x0d
    1de4:	4e 85       	ldd	r20, Y+14	; 0x0e
    1de6:	5f 85       	ldd	r21, Y+15	; 0x0f
    1de8:	8a 85       	ldd	r24, Y+10	; 0x0a
    1dea:	9b 85       	ldd	r25, Y+11	; 0x0b
    1dec:	0e 94 61 0e 	call	0x1cc2	; 0x1cc2 <sync>
    1df0:	8f b7       	in	r24, 0x3f	; 63
    1df2:	f8 94       	cli
    1df4:	69 e1       	ldi	r22, 0x19	; 25
    1df6:	71 e0       	ldi	r23, 0x01	; 1
    1df8:	ce 01       	movw	r24, r28
    1dfa:	0e 94 3f 04 	call	0x87e	; 0x87e <insert>
    1dfe:	e0 91 15 01 	lds	r30, 0x0115	; 0x800115 <activeStack>
    1e02:	f0 91 16 01 	lds	r31, 0x0116	; 0x800116 <activeStack+0x1>
    1e06:	01 90       	ld	r0, Z+
    1e08:	f0 81       	ld	r31, Z
    1e0a:	e0 2d       	mov	r30, r0
    1e0c:	c2 81       	ldd	r28, Z+2	; 0x02
    1e0e:	d3 81       	ldd	r29, Z+3	; 0x03
    1e10:	e0 91 3d 01 	lds	r30, 0x013D	; 0x80013d <msgQ>
    1e14:	f0 91 3e 01 	lds	r31, 0x013E	; 0x80013e <msgQ+0x1>
    1e18:	30 97       	sbiw	r30, 0x00	; 0
    1e1a:	a1 f0       	breq	.+40     	; 0x1e44 <run+0x7e>
    1e1c:	20 97       	sbiw	r28, 0x00	; 0
    1e1e:	99 f2       	breq	.-90     	; 0x1dc6 <run>
    1e20:	86 81       	ldd	r24, Z+6	; 0x06
    1e22:	97 81       	ldd	r25, Z+7	; 0x07
    1e24:	a0 85       	ldd	r26, Z+8	; 0x08
    1e26:	b1 85       	ldd	r27, Z+9	; 0x09
    1e28:	4e 81       	ldd	r20, Y+6	; 0x06
    1e2a:	5f 81       	ldd	r21, Y+7	; 0x07
    1e2c:	68 85       	ldd	r22, Y+8	; 0x08
    1e2e:	79 85       	ldd	r23, Y+9	; 0x09
    1e30:	84 1b       	sub	r24, r20
    1e32:	95 0b       	sbc	r25, r21
    1e34:	a6 0b       	sbc	r26, r22
    1e36:	b7 0b       	sbc	r27, r23
    1e38:	18 16       	cp	r1, r24
    1e3a:	19 06       	cpc	r1, r25
    1e3c:	1a 06       	cpc	r1, r26
    1e3e:	1b 06       	cpc	r1, r27
    1e40:	0c f0       	brlt	.+2      	; 0x1e44 <run+0x7e>
    1e42:	c1 cf       	rjmp	.-126    	; 0x1dc6 <run>
    1e44:	85 e1       	ldi	r24, 0x15	; 21
    1e46:	91 e0       	ldi	r25, 0x01	; 1
    1e48:	0e 94 53 04 	call	0x8a6	; 0x8a6 <pop>
    1e4c:	67 e1       	ldi	r22, 0x17	; 23
    1e4e:	71 e0       	ldi	r23, 0x01	; 1
    1e50:	0e 94 49 04 	call	0x892	; 0x892 <push>
    1e54:	a0 91 15 01 	lds	r26, 0x0115	; 0x800115 <activeStack>
    1e58:	b0 91 16 01 	lds	r27, 0x0116	; 0x800116 <activeStack+0x1>
    1e5c:	02 c0       	rjmp	.+4      	; 0x1e62 <run+0x9c>
    1e5e:	a0 81       	ld	r26, Z
    1e60:	b1 81       	ldd	r27, Z+1	; 0x01
    1e62:	14 96       	adiw	r26, 0x04	; 4
    1e64:	ed 91       	ld	r30, X+
    1e66:	fc 91       	ld	r31, X
    1e68:	15 97       	sbiw	r26, 0x05	; 5
    1e6a:	30 97       	sbiw	r30, 0x00	; 0
    1e6c:	c1 f7       	brne	.-16     	; 0x1e5e <run+0x98>
    1e6e:	cd 01       	movw	r24, r26
    1e70:	0e 94 a6 03 	call	0x74c	; 0x74c <dispatch>
    1e74:	a8 cf       	rjmp	.-176    	; 0x1dc6 <run>

00001e76 <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    1e76:	8c 01       	movw	r16, r24
    1e78:	7b 01       	movw	r14, r22
    1e7a:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    1e7c:	8f b7       	in	r24, 0x3f	; 63
    1e7e:	f8 94       	cli
    initialize();
    1e80:	0e 94 07 03 	call	0x60e	; 0x60e <initialize>
    ENABLE(1);
    1e84:	78 94       	sei
    if (m != NULL)
    1e86:	e1 14       	cp	r14, r1
    1e88:	f1 04       	cpc	r15, r1
    1e8a:	41 f0       	breq	.+16     	; 0x1e9c <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    1e8c:	20 e0       	ldi	r18, 0x00	; 0
    1e8e:	30 e0       	ldi	r19, 0x00	; 0
    1e90:	a9 01       	movw	r20, r18
    1e92:	60 e0       	ldi	r22, 0x00	; 0
    1e94:	70 e0       	ldi	r23, 0x00	; 0
    1e96:	cb 01       	movw	r24, r22
    1e98:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    DISABLE(status);
    1e9c:	8f b7       	in	r24, 0x3f	; 63
    1e9e:	f8 94       	cli
    idle();
    1ea0:	0e 94 5f 0c 	call	0x18be	; 0x18be <idle>

00001ea4 <enterSouth>:
				AFTER(SEC(1), self, enterNorth, NULL);
			}
		}

        ASYNC(self, transmit_lights, NULL);
	}
    1ea4:	cf 92       	push	r12
    1ea6:	df 92       	push	r13
    1ea8:	ef 92       	push	r14
    1eaa:	ff 92       	push	r15
    1eac:	0f 93       	push	r16
    1eae:	1f 93       	push	r17
    1eb0:	cf 93       	push	r28
    1eb2:	df 93       	push	r29
    1eb4:	ec 01       	movw	r28, r24
    1eb6:	8d 85       	ldd	r24, Y+13	; 0x0d
    1eb8:	9e 85       	ldd	r25, Y+14	; 0x0e
    1eba:	01 97       	sbiw	r24, 0x01	; 1
    1ebc:	9e 87       	std	Y+14, r25	; 0x0e
    1ebe:	8d 87       	std	Y+13, r24	; 0x0d
    1ec0:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ec2:	98 89       	ldd	r25, Y+16	; 0x10
    1ec4:	01 96       	adiw	r24, 0x01	; 1
    1ec6:	98 8b       	std	Y+16, r25	; 0x10
    1ec8:	8f 87       	std	Y+15, r24	; 0x0f
    1eca:	c1 2c       	mov	r12, r1
    1ecc:	d1 2c       	mov	r13, r1
    1ece:	0f 2e       	mov	r0, r31
    1ed0:	fa ec       	ldi	r31, 0xCA	; 202
    1ed2:	ef 2e       	mov	r14, r31
    1ed4:	ff e0       	ldi	r31, 0x0F	; 15
    1ed6:	ff 2e       	mov	r15, r31
    1ed8:	f0 2d       	mov	r31, r0
    1eda:	8e 01       	movw	r16, r28
    1edc:	20 e0       	ldi	r18, 0x00	; 0
    1ede:	30 e0       	ldi	r19, 0x00	; 0
    1ee0:	a9 01       	movw	r20, r18
    1ee2:	6a e5       	ldi	r22, 0x5A	; 90
    1ee4:	72 e6       	ldi	r23, 0x62	; 98
    1ee6:	82 e0       	ldi	r24, 0x02	; 2
    1ee8:	90 e0       	ldi	r25, 0x00	; 0
    1eea:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    1eee:	0f 2e       	mov	r0, r31
    1ef0:	f2 ef       	ldi	r31, 0xF2	; 242
    1ef2:	ef 2e       	mov	r14, r31
    1ef4:	ff e0       	ldi	r31, 0x0F	; 15
    1ef6:	ff 2e       	mov	r15, r31
    1ef8:	f0 2d       	mov	r31, r0
    1efa:	20 e0       	ldi	r18, 0x00	; 0
    1efc:	30 e0       	ldi	r19, 0x00	; 0
    1efe:	a9 01       	movw	r20, r18
    1f00:	60 e0       	ldi	r22, 0x00	; 0
    1f02:	70 e0       	ldi	r23, 0x00	; 0
    1f04:	cb 01       	movw	r24, r22
    1f06:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    1f0a:	df 91       	pop	r29
    1f0c:	cf 91       	pop	r28
    1f0e:	1f 91       	pop	r17
    1f10:	0f 91       	pop	r16
    1f12:	ff 90       	pop	r15
    1f14:	ef 90       	pop	r14
    1f16:	df 90       	pop	r13
    1f18:	cf 90       	pop	r12
    1f1a:	08 95       	ret

00001f1c <enterNorth>:
    1f1c:	cf 92       	push	r12
    1f1e:	df 92       	push	r13
    1f20:	ef 92       	push	r14
    1f22:	ff 92       	push	r15
    1f24:	0f 93       	push	r16
    1f26:	1f 93       	push	r17
    1f28:	cf 93       	push	r28
    1f2a:	df 93       	push	r29
    1f2c:	ec 01       	movw	r28, r24
    1f2e:	8b 85       	ldd	r24, Y+11	; 0x0b
    1f30:	9c 85       	ldd	r25, Y+12	; 0x0c
    1f32:	01 97       	sbiw	r24, 0x01	; 1
    1f34:	9c 87       	std	Y+12, r25	; 0x0c
    1f36:	8b 87       	std	Y+11, r24	; 0x0b
    1f38:	8f 85       	ldd	r24, Y+15	; 0x0f
    1f3a:	98 89       	ldd	r25, Y+16	; 0x10
    1f3c:	01 96       	adiw	r24, 0x01	; 1
    1f3e:	98 8b       	std	Y+16, r25	; 0x10
    1f40:	8f 87       	std	Y+15, r24	; 0x0f
    1f42:	c1 2c       	mov	r12, r1
    1f44:	d1 2c       	mov	r13, r1
    1f46:	0f 2e       	mov	r0, r31
    1f48:	fa ec       	ldi	r31, 0xCA	; 202
    1f4a:	ef 2e       	mov	r14, r31
    1f4c:	ff e0       	ldi	r31, 0x0F	; 15
    1f4e:	ff 2e       	mov	r15, r31
    1f50:	f0 2d       	mov	r31, r0
    1f52:	8e 01       	movw	r16, r28
    1f54:	20 e0       	ldi	r18, 0x00	; 0
    1f56:	30 e0       	ldi	r19, 0x00	; 0
    1f58:	a9 01       	movw	r20, r18
    1f5a:	6a e5       	ldi	r22, 0x5A	; 90
    1f5c:	72 e6       	ldi	r23, 0x62	; 98
    1f5e:	82 e0       	ldi	r24, 0x02	; 2
    1f60:	90 e0       	ldi	r25, 0x00	; 0
    1f62:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    1f66:	0f 2e       	mov	r0, r31
    1f68:	f2 ef       	ldi	r31, 0xF2	; 242
    1f6a:	ef 2e       	mov	r14, r31
    1f6c:	ff e0       	ldi	r31, 0x0F	; 15
    1f6e:	ff 2e       	mov	r15, r31
    1f70:	f0 2d       	mov	r31, r0
    1f72:	20 e0       	ldi	r18, 0x00	; 0
    1f74:	30 e0       	ldi	r19, 0x00	; 0
    1f76:	a9 01       	movw	r20, r18
    1f78:	60 e0       	ldi	r22, 0x00	; 0
    1f7a:	70 e0       	ldi	r23, 0x00	; 0
    1f7c:	cb 01       	movw	r24, r22
    1f7e:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    1f82:	df 91       	pop	r29
    1f84:	cf 91       	pop	r28
    1f86:	1f 91       	pop	r17
    1f88:	0f 91       	pop	r16
    1f8a:	ff 90       	pop	r15
    1f8c:	ef 90       	pop	r14
    1f8e:	df 90       	pop	r13
    1f90:	cf 90       	pop	r12
    1f92:	08 95       	ret

00001f94 <carDestroy>:
    1f94:	cf 92       	push	r12
    1f96:	df 92       	push	r13
    1f98:	ef 92       	push	r14
    1f9a:	ff 92       	push	r15
    1f9c:	0f 93       	push	r16
    1f9e:	1f 93       	push	r17
    1fa0:	fc 01       	movw	r30, r24
    1fa2:	27 85       	ldd	r18, Z+15	; 0x0f
    1fa4:	30 89       	ldd	r19, Z+16	; 0x10
    1fa6:	12 16       	cp	r1, r18
    1fa8:	13 06       	cpc	r1, r19
    1faa:	ac f4       	brge	.+42     	; 0x1fd6 <carDestroy+0x42>
    1fac:	8c 01       	movw	r16, r24
    1fae:	21 50       	subi	r18, 0x01	; 1
    1fb0:	31 09       	sbc	r19, r1
    1fb2:	30 8b       	std	Z+16, r19	; 0x10
    1fb4:	27 87       	std	Z+15, r18	; 0x0f
    1fb6:	c1 2c       	mov	r12, r1
    1fb8:	d1 2c       	mov	r13, r1
    1fba:	0f 2e       	mov	r0, r31
    1fbc:	f2 ef       	ldi	r31, 0xF2	; 242
    1fbe:	ef 2e       	mov	r14, r31
    1fc0:	ff e0       	ldi	r31, 0x0F	; 15
    1fc2:	ff 2e       	mov	r15, r31
    1fc4:	f0 2d       	mov	r31, r0
    1fc6:	20 e0       	ldi	r18, 0x00	; 0
    1fc8:	30 e0       	ldi	r19, 0x00	; 0
    1fca:	a9 01       	movw	r20, r18
    1fcc:	60 e0       	ldi	r22, 0x00	; 0
    1fce:	70 e0       	ldi	r23, 0x00	; 0
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    1fd6:	1f 91       	pop	r17
    1fd8:	0f 91       	pop	r16
    1fda:	ff 90       	pop	r15
    1fdc:	ef 90       	pop	r14
    1fde:	df 90       	pop	r13
    1fe0:	cf 90       	pop	r12
    1fe2:	08 95       	ret

00001fe4 <printCars>:
    1fe4:	cf 93       	push	r28
    1fe6:	df 93       	push	r29
    1fe8:	ec 01       	movw	r28, r24
    1fea:	60 e0       	ldi	r22, 0x00	; 0
    1fec:	70 e0       	ldi	r23, 0x00	; 0
    1fee:	8d 85       	ldd	r24, Y+13	; 0x0d
    1ff0:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
    1ff4:	62 e0       	ldi	r22, 0x02	; 2
    1ff6:	70 e0       	ldi	r23, 0x00	; 0
    1ff8:	8f 85       	ldd	r24, Y+15	; 0x0f
    1ffa:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
    1ffe:	64 e0       	ldi	r22, 0x04	; 4
    2000:	70 e0       	ldi	r23, 0x00	; 0
    2002:	8b 85       	ldd	r24, Y+11	; 0x0b
    2004:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
    2008:	df 91       	pop	r29
    200a:	cf 91       	pop	r28
    200c:	08 95       	ret

0000200e <NorthboundArrival>:
    200e:	cf 92       	push	r12
    2010:	df 92       	push	r13
    2012:	ef 92       	push	r14
    2014:	ff 92       	push	r15
    2016:	0f 93       	push	r16
    2018:	1f 93       	push	r17
    201a:	cf 93       	push	r28
    201c:	df 93       	push	r29
    201e:	ec 01       	movw	r28, r24
    2020:	61 e0       	ldi	r22, 0x01	; 1
    2022:	70 e0       	ldi	r23, 0x00	; 0
    2024:	81 e3       	ldi	r24, 0x31	; 49
    2026:	90 e0       	ldi	r25, 0x00	; 0
    2028:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
    202c:	8b 85       	ldd	r24, Y+11	; 0x0b
    202e:	9c 85       	ldd	r25, Y+12	; 0x0c
    2030:	01 96       	adiw	r24, 0x01	; 1
    2032:	9c 87       	std	Y+12, r25	; 0x0c
    2034:	8b 87       	std	Y+11, r24	; 0x0b
    2036:	c1 2c       	mov	r12, r1
    2038:	d1 2c       	mov	r13, r1
    203a:	0f 2e       	mov	r0, r31
    203c:	f2 ef       	ldi	r31, 0xF2	; 242
    203e:	ef 2e       	mov	r14, r31
    2040:	ff e0       	ldi	r31, 0x0F	; 15
    2042:	ff 2e       	mov	r15, r31
    2044:	f0 2d       	mov	r31, r0
    2046:	8e 01       	movw	r16, r28
    2048:	20 e0       	ldi	r18, 0x00	; 0
    204a:	30 e0       	ldi	r19, 0x00	; 0
    204c:	a9 01       	movw	r20, r18
    204e:	60 e0       	ldi	r22, 0x00	; 0
    2050:	70 e0       	ldi	r23, 0x00	; 0
    2052:	cb 01       	movw	r24, r22
    2054:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    2058:	df 91       	pop	r29
    205a:	cf 91       	pop	r28
    205c:	1f 91       	pop	r17
    205e:	0f 91       	pop	r16
    2060:	ff 90       	pop	r15
    2062:	ef 90       	pop	r14
    2064:	df 90       	pop	r13
    2066:	cf 90       	pop	r12
    2068:	08 95       	ret

0000206a <SouthboundArrival>:
    206a:	cf 92       	push	r12
    206c:	df 92       	push	r13
    206e:	ef 92       	push	r14
    2070:	ff 92       	push	r15
    2072:	0f 93       	push	r16
    2074:	1f 93       	push	r17
    2076:	fc 01       	movw	r30, r24
    2078:	25 85       	ldd	r18, Z+13	; 0x0d
    207a:	36 85       	ldd	r19, Z+14	; 0x0e
    207c:	2f 5f       	subi	r18, 0xFF	; 255
    207e:	3f 4f       	sbci	r19, 0xFF	; 255
    2080:	36 87       	std	Z+14, r19	; 0x0e
    2082:	25 87       	std	Z+13, r18	; 0x0d
    2084:	c1 2c       	mov	r12, r1
    2086:	d1 2c       	mov	r13, r1
    2088:	0f 2e       	mov	r0, r31
    208a:	f2 ef       	ldi	r31, 0xF2	; 242
    208c:	ef 2e       	mov	r14, r31
    208e:	ff e0       	ldi	r31, 0x0F	; 15
    2090:	ff 2e       	mov	r15, r31
    2092:	f0 2d       	mov	r31, r0
    2094:	8c 01       	movw	r16, r24
    2096:	20 e0       	ldi	r18, 0x00	; 0
    2098:	30 e0       	ldi	r19, 0x00	; 0
    209a:	a9 01       	movw	r20, r18
    209c:	60 e0       	ldi	r22, 0x00	; 0
    209e:	70 e0       	ldi	r23, 0x00	; 0
    20a0:	cb 01       	movw	r24, r22
    20a2:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <async>
    20a6:	1f 91       	pop	r17
    20a8:	0f 91       	pop	r16
    20aa:	ff 90       	pop	r15
    20ac:	ef 90       	pop	r14
    20ae:	df 90       	pop	r13
    20b0:	cf 90       	pop	r12
    20b2:	08 95       	ret

000020b4 <init>:
		self->onBridge -= 1;
		ASYNC(self, printCars, NULL);
	}
}

void init(Bridge *self) {
    20b4:	cf 93       	push	r28
    20b6:	df 93       	push	r29
    20b8:	ec 01       	movw	r28, r24
	printAt(self->southQueue,0);
    20ba:	60 e0       	ldi	r22, 0x00	; 0
    20bc:	70 e0       	ldi	r23, 0x00	; 0
    20be:	8d 85       	ldd	r24, Y+13	; 0x0d
    20c0:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
 	printAt(self->onBridge,2);
    20c4:	62 e0       	ldi	r22, 0x02	; 2
    20c6:	70 e0       	ldi	r23, 0x00	; 0
    20c8:	8f 85       	ldd	r24, Y+15	; 0x0f
    20ca:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
	printAt(self->northQueue,4);
    20ce:	64 e0       	ldi	r22, 0x04	; 4
    20d0:	70 e0       	ldi	r23, 0x00	; 0
    20d2:	8b 85       	ldd	r24, Y+11	; 0x0b
    20d4:	0e 94 36 02 	call	0x46c	; 0x46c <printAt>
	

}
    20d8:	df 91       	pop	r29
    20da:	cf 91       	pop	r28
    20dc:	08 95       	ret

000020de <__tablejump2__>:
    20de:	ee 0f       	add	r30, r30
    20e0:	ff 1f       	adc	r31, r31
    20e2:	05 90       	lpm	r0, Z+
    20e4:	f4 91       	lpm	r31, Z
    20e6:	e0 2d       	mov	r30, r0
    20e8:	09 94       	ijmp

000020ea <setjmp>:
    20ea:	dc 01       	movw	r26, r24
    20ec:	2d 92       	st	X+, r2
    20ee:	3d 92       	st	X+, r3
    20f0:	4d 92       	st	X+, r4
    20f2:	5d 92       	st	X+, r5
    20f4:	6d 92       	st	X+, r6
    20f6:	7d 92       	st	X+, r7
    20f8:	8d 92       	st	X+, r8
    20fa:	9d 92       	st	X+, r9
    20fc:	ad 92       	st	X+, r10
    20fe:	bd 92       	st	X+, r11
    2100:	cd 92       	st	X+, r12
    2102:	dd 92       	st	X+, r13
    2104:	ed 92       	st	X+, r14
    2106:	fd 92       	st	X+, r15
    2108:	0d 93       	st	X+, r16
    210a:	1d 93       	st	X+, r17
    210c:	cd 93       	st	X+, r28
    210e:	dd 93       	st	X+, r29
    2110:	ff 91       	pop	r31
    2112:	ef 91       	pop	r30
    2114:	8d b7       	in	r24, 0x3d	; 61
    2116:	8d 93       	st	X+, r24
    2118:	8e b7       	in	r24, 0x3e	; 62
    211a:	8d 93       	st	X+, r24
    211c:	8f b7       	in	r24, 0x3f	; 63
    211e:	8d 93       	st	X+, r24
    2120:	ed 93       	st	X+, r30
    2122:	fd 93       	st	X+, r31
    2124:	88 27       	eor	r24, r24
    2126:	99 27       	eor	r25, r25
    2128:	09 94       	ijmp

0000212a <longjmp>:
    212a:	dc 01       	movw	r26, r24
    212c:	cb 01       	movw	r24, r22
    212e:	81 30       	cpi	r24, 0x01	; 1
    2130:	91 05       	cpc	r25, r1
    2132:	81 1d       	adc	r24, r1
    2134:	2d 90       	ld	r2, X+
    2136:	3d 90       	ld	r3, X+
    2138:	4d 90       	ld	r4, X+
    213a:	5d 90       	ld	r5, X+
    213c:	6d 90       	ld	r6, X+
    213e:	7d 90       	ld	r7, X+
    2140:	8d 90       	ld	r8, X+
    2142:	9d 90       	ld	r9, X+
    2144:	ad 90       	ld	r10, X+
    2146:	bd 90       	ld	r11, X+
    2148:	cd 90       	ld	r12, X+
    214a:	dd 90       	ld	r13, X+
    214c:	ed 90       	ld	r14, X+
    214e:	fd 90       	ld	r15, X+
    2150:	0d 91       	ld	r16, X+
    2152:	1d 91       	ld	r17, X+
    2154:	cd 91       	ld	r28, X+
    2156:	dd 91       	ld	r29, X+
    2158:	ed 91       	ld	r30, X+
    215a:	fd 91       	ld	r31, X+
    215c:	0d 90       	ld	r0, X+
    215e:	f8 94       	cli
    2160:	fe bf       	out	0x3e, r31	; 62
    2162:	0f be       	out	0x3f, r0	; 63
    2164:	ed bf       	out	0x3d, r30	; 61
    2166:	ed 91       	ld	r30, X+
    2168:	fd 91       	ld	r31, X+
    216a:	09 94       	ijmp

0000216c <_exit>:
    216c:	f8 94       	cli

0000216e <__stop_program>:
    216e:	ff cf       	rjmp	.-2      	; 0x216e <__stop_program>
