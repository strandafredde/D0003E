
lab5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001a  00800100  00001842  000018d6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001842  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000353  0080011a  0080011a  000018f0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000018f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001920  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001b0  00000000  00000000  00001960  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001ccf  00000000  00000000  00001b10  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d00  00000000  00000000  000037df  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000123c  00000000  00000000  000044df  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a7c  00000000  00000000  0000571c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000082c  00000000  00000000  00006198  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000021e3  00000000  00000000  000069c4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000180  00000000  00000000  00008ba7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
       4:	0c 94 18 03 	jmp	0x630	; 0x630 <__vector_1>
       8:	0c 94 87 03 	jmp	0x70e	; 0x70e <__vector_2>
       c:	0c 94 f6 03 	jmp	0x7ec	; 0x7ec <__vector_3>
      10:	0c 94 65 04 	jmp	0x8ca	; 0x8ca <__vector_4>
      14:	0c 94 d4 04 	jmp	0x9a8	; 0x9a8 <__vector_5>
      18:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      1c:	0c 94 38 0b 	jmp	0x1670	; 0x1670 <__vector_7>
      20:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      24:	0c 94 e6 0a 	jmp	0x15cc	; 0x15cc <__vector_9>
      28:	0c 94 43 05 	jmp	0xa86	; 0xa86 <__vector_10>
      2c:	0c 94 b2 05 	jmp	0xb64	; 0xb64 <__vector_11>
      30:	0c 94 21 06 	jmp	0xc42	; 0xc42 <__vector_12>
      34:	0c 94 90 06 	jmp	0xd20	; 0xd20 <__vector_13>
      38:	0c 94 ff 06 	jmp	0xdfe	; 0xdfe <__vector_14>
      3c:	0c 94 6e 07 	jmp	0xedc	; 0xedc <__vector_15>
      40:	0c 94 dd 07 	jmp	0xfba	; 0xfba <__vector_16>
      44:	0c 94 4c 08 	jmp	0x1098	; 0x1098 <__vector_17>
      48:	0c 94 bb 08 	jmp	0x1176	; 0x1176 <__vector_18>
      4c:	0c 94 2a 09 	jmp	0x1254	; 0x1254 <__vector_19>
      50:	0c 94 99 09 	jmp	0x1332	; 0x1332 <__vector_20>
      54:	0c 94 08 0a 	jmp	0x1410	; 0x1410 <__vector_21>
      58:	0c 94 77 0a 	jmp	0x14ee	; 0x14ee <__vector_22>
      5c:	b5 00       	.word	0x00b5	; ????
      5e:	9d 00       	.word	0x009d	; ????
      60:	a0 00       	.word	0x00a0	; ????
      62:	a3 00       	.word	0x00a3	; ????
      64:	a6 00       	.word	0x00a6	; ????
      66:	a9 00       	.word	0x00a9	; ????
      68:	ac 00       	.word	0x00ac	; ????
      6a:	af 00       	.word	0x00af	; ????
      6c:	b2 00       	.word	0x00b2	; ????

0000006e <__ctors_end>:
      6e:	11 24       	eor	r1, r1
      70:	1f be       	out	0x3f, r1	; 63
      72:	cf ef       	ldi	r28, 0xFF	; 255
      74:	d4 e0       	ldi	r29, 0x04	; 4
      76:	de bf       	out	0x3e, r29	; 62
      78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
      7a:	11 e0       	ldi	r17, 0x01	; 1
      7c:	a0 e0       	ldi	r26, 0x00	; 0
      7e:	b1 e0       	ldi	r27, 0x01	; 1
      80:	e2 e4       	ldi	r30, 0x42	; 66
      82:	f8 e1       	ldi	r31, 0x18	; 24
      84:	02 c0       	rjmp	.+4      	; 0x8a <__do_copy_data+0x10>
      86:	05 90       	lpm	r0, Z+
      88:	0d 92       	st	X+, r0
      8a:	aa 31       	cpi	r26, 0x1A	; 26
      8c:	b1 07       	cpc	r27, r17
      8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0xc>

00000090 <__do_clear_bss>:
      90:	24 e0       	ldi	r18, 0x04	; 4
      92:	aa e1       	ldi	r26, 0x1A	; 26
      94:	b1 e0       	ldi	r27, 0x01	; 1
      96:	01 c0       	rjmp	.+2      	; 0x9a <.do_clear_bss_start>

00000098 <.do_clear_bss_loop>:
      98:	1d 92       	st	X+, r1

0000009a <.do_clear_bss_start>:
      9a:	ad 36       	cpi	r26, 0x6D	; 109
      9c:	b2 07       	cpc	r27, r18
      9e:	e1 f7       	brne	.-8      	; 0x98 <.do_clear_bss_loop>
      a0:	0e 94 50 02 	call	0x4a0	; 0x4a0 <main>
      a4:	0c 94 1f 0c 	jmp	0x183e	; 0x183e <_exit>

000000a8 <__bad_interrupt>:
      a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ac <LCD_init>:
     *
     * returns: none
     */
	
	//Initialize clock 
	CLKPR = 0x80;
      ac:	e1 e6       	ldi	r30, 0x61	; 97
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	80 e8       	ldi	r24, 0x80	; 128
      b2:	80 83       	st	Z, r24
	CLKPR = 0x00;
      b4:	10 82       	st	Z, r1
	
    /* Asynchronous clock, 1/3 bias, 1/4 duty cycle,   25 segments */
    LCDCRB = (1<<LCDCS) | (1<<LCDMUX1) | (1<<LCDMUX0) | (1<<LCDPM2) | (1<<LCDPM1) | (1<<LCDPM0);
      b6:	87 eb       	ldi	r24, 0xB7	; 183
      b8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
    /* Set volt to 3.35V */
    LCDCCR = (1<<LCDCC3) |(1<<LCDCC2) | (1<<LCDCC1) | (1<<LCDCC0);
      bc:	8f e0       	ldi	r24, 0x0F	; 15
      be:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
    /* Clock division factor to 8, and prescaler to 16 */
    LCDFRR = (1<<LCDCD2) | (1<<LCDCD1) | (1<<LCDCD0);
      c2:	87 e0       	ldi	r24, 0x07	; 7
      c4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
    /* low power waveform, no frame interrupt, no blanking */
    LCDCRA = (1<<LCDAB) | (1<<LCDEN);
      c8:	90 ec       	ldi	r25, 0xC0	; 192
      ca:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>

    PORTB |= (1<<PB7)|(1<<PB6)|(1<<PB4);
      ce:	85 b1       	in	r24, 0x05	; 5
      d0:	80 6d       	ori	r24, 0xD0	; 208
      d2:	85 b9       	out	0x05, r24	; 5
    PORTE |= (1<<PE2)|(1<<PE3);
      d4:	8e b1       	in	r24, 0x0e	; 14
      d6:	8c 60       	ori	r24, 0x0C	; 12
      d8:	8e b9       	out	0x0e, r24	; 14
	DDRB   = (1<<DDB5)|(1<<DDB3)|(1<<DDB2)|(1<<DDB1)|(1<<DDB0);
      da:	8f e2       	ldi	r24, 0x2F	; 47
      dc:	84 b9       	out	0x04, r24	; 4
	DDRE   = (1<<DDE6)|(1<<DDE4);
      de:	80 e5       	ldi	r24, 0x50	; 80
      e0:	8d b9       	out	0x0d, r24	; 13
   
    // Enable external interrupts
	PCMSK0 = (1<<PCINT3)|(1<<PCINT2);
      e2:	8c e0       	ldi	r24, 0x0C	; 12
      e4:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
	PCMSK1 = (1<<PCINT15)|(1<<PCINT14)|(1<<PCINT12);
      e8:	80 ed       	ldi	r24, 0xD0	; 208
      ea:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
	EIMSK = (1 << PCIE1)|(1 << PCIE0);
      ee:	9d bb       	out	0x1d, r25	; 29
      f0:	08 95       	ret

000000f2 <writeChar>:
}

void writeChar(char ch, int pos){
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	64 97       	sbiw	r28, 0x14	; 20
      fc:	0f b6       	in	r0, 0x3f	; 63
      fe:	f8 94       	cli
     100:	de bf       	out	0x3e, r29	; 62
     102:	0f be       	out	0x3f, r0	; 63
     104:	cd bf       	out	0x3d, r28	; 61
	#define SCC_6  0x1F41
	#define SCC_7  0x0111
	#define SCC_8  0x1F51
	#define SCC_9  0x0B51

	int numArr[10] = {SCC_0, SCC_1 , SCC_2, SCC_3, SCC_4, SCC_5, SCC_6, SCC_7, SCC_8, SCC_9};
     106:	94 e1       	ldi	r25, 0x14	; 20
     108:	e6 e0       	ldi	r30, 0x06	; 6
     10a:	f1 e0       	ldi	r31, 0x01	; 1
     10c:	de 01       	movw	r26, r28
     10e:	11 96       	adiw	r26, 0x01	; 1
     110:	01 90       	ld	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	9a 95       	dec	r25
     116:	e1 f7       	brne	.-8      	; 0x110 <writeChar+0x1e>
     */

    int i = 0;

    /* checks if pos is within fixed range */
    if(pos < 0 || pos > 5) {
     118:	66 30       	cpi	r22, 0x06	; 6
     11a:	71 05       	cpc	r23, r1
     11c:	08 f0       	brcs	.+2      	; 0x120 <writeChar+0x2e>
     11e:	9d c1       	rjmp	.+826    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        return;
    }

    /* index select of character */
    switch(ch){
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	fc 01       	movw	r30, r24
     124:	f1 97       	sbiw	r30, 0x31	; 49
     126:	e9 30       	cpi	r30, 0x09	; 9
     128:	f1 05       	cpc	r31, r1
     12a:	20 f4       	brcc	.+8      	; 0x134 <writeChar+0x42>
     12c:	e2 5d       	subi	r30, 0xD2	; 210
     12e:	ff 4f       	sbci	r31, 0xFF	; 255
     130:	0c 94 d8 0b 	jmp	0x17b0	; 0x17b0 <__tablejump2__>
     * position (int pos) if within fixed range.
     *
     * returns: none
     */

    int i = 0;
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	1a c0       	rjmp	.+52     	; 0x16e <writeChar+0x7c>
            break;
        case '1':
            i = 1;
            break;
        case '2':
            i = 2;
     13a:	82 e0       	ldi	r24, 0x02	; 2
     13c:	90 e0       	ldi	r25, 0x00	; 0
            break;
     13e:	17 c0       	rjmp	.+46     	; 0x16e <writeChar+0x7c>
        case '3':
            i = 3;
     140:	83 e0       	ldi	r24, 0x03	; 3
     142:	90 e0       	ldi	r25, 0x00	; 0
            break;
     144:	14 c0       	rjmp	.+40     	; 0x16e <writeChar+0x7c>
        case '4':
            i = 4;
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	90 e0       	ldi	r25, 0x00	; 0
            break;
     14a:	11 c0       	rjmp	.+34     	; 0x16e <writeChar+0x7c>
        case '5':
            i = 5;
     14c:	85 e0       	ldi	r24, 0x05	; 5
     14e:	90 e0       	ldi	r25, 0x00	; 0
            break;
     150:	0e c0       	rjmp	.+28     	; 0x16e <writeChar+0x7c>
        case '6':
            i = 6;
     152:	86 e0       	ldi	r24, 0x06	; 6
     154:	90 e0       	ldi	r25, 0x00	; 0
            break;
     156:	0b c0       	rjmp	.+22     	; 0x16e <writeChar+0x7c>
        case '7':
            i = 7;
     158:	87 e0       	ldi	r24, 0x07	; 7
     15a:	90 e0       	ldi	r25, 0x00	; 0
            break;
     15c:	08 c0       	rjmp	.+16     	; 0x16e <writeChar+0x7c>
        case '8':
            i = 8;
     15e:	88 e0       	ldi	r24, 0x08	; 8
     160:	90 e0       	ldi	r25, 0x00	; 0
            break;
     162:	05 c0       	rjmp	.+10     	; 0x16e <writeChar+0x7c>
        case '9':
            i = 9;
     164:	89 e0       	ldi	r24, 0x09	; 9
     166:	90 e0       	ldi	r25, 0x00	; 0
            break;
     168:	02 c0       	rjmp	.+4      	; 0x16e <writeChar+0x7c>
    switch(ch){
        case '0':
            i = 0;
            break;
        case '1':
            i = 1;
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
        default:
            break;
    }

    /* writes translated char at pos to LCD */
    switch(pos){
     16e:	62 30       	cpi	r22, 0x02	; 2
     170:	71 05       	cpc	r23, r1
     172:	09 f4       	brne	.+2      	; 0x176 <writeChar+0x84>
     174:	89 c0       	rjmp	.+274    	; 0x288 <__EEPROM_REGION_LENGTH__+0x88>
     176:	44 f4       	brge	.+16     	; 0x188 <writeChar+0x96>
     178:	61 15       	cp	r22, r1
     17a:	71 05       	cpc	r23, r1
     17c:	81 f0       	breq	.+32     	; 0x19e <writeChar+0xac>
     17e:	61 30       	cpi	r22, 0x01	; 1
     180:	71 05       	cpc	r23, r1
     182:	09 f4       	brne	.+2      	; 0x186 <writeChar+0x94>
     184:	44 c0       	rjmp	.+136    	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
     186:	69 c1       	rjmp	.+722    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
     188:	64 30       	cpi	r22, 0x04	; 4
     18a:	71 05       	cpc	r23, r1
     18c:	09 f4       	brne	.+2      	; 0x190 <writeChar+0x9e>
     18e:	f1 c0       	rjmp	.+482    	; 0x372 <__EEPROM_REGION_LENGTH__+0x172>
     190:	0c f4       	brge	.+2      	; 0x194 <writeChar+0xa2>
     192:	b2 c0       	rjmp	.+356    	; 0x2f8 <__EEPROM_REGION_LENGTH__+0xf8>
     194:	65 30       	cpi	r22, 0x05	; 5
     196:	71 05       	cpc	r23, r1
     198:	09 f4       	brne	.+2      	; 0x19c <writeChar+0xaa>
     19a:	23 c1       	rjmp	.+582    	; 0x3e2 <__EEPROM_REGION_LENGTH__+0x1e2>
     19c:	5e c1       	rjmp	.+700    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 0:
            LCDDR0  = (LCDDR0&0x00F0)  |  (numArr[i] & 0x000F);
     19e:	ac ee       	ldi	r26, 0xEC	; 236
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	2c 91       	ld	r18, X
     1a4:	88 0f       	add	r24, r24
     1a6:	99 1f       	adc	r25, r25
     1a8:	e1 e0       	ldi	r30, 0x01	; 1
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	ec 0f       	add	r30, r28
     1ae:	fd 1f       	adc	r31, r29
     1b0:	e8 0f       	add	r30, r24
     1b2:	f9 1f       	adc	r31, r25
     1b4:	80 81       	ld	r24, Z
     1b6:	92 2f       	mov	r25, r18
     1b8:	90 7f       	andi	r25, 0xF0	; 240
     1ba:	8f 70       	andi	r24, 0x0F	; 15
     1bc:	89 2b       	or	r24, r25
     1be:	8c 93       	st	X, r24
            LCDDR5  = (LCDDR5&0x00F0)  | ((numArr[i] & 0x00F0))>>4;
     1c0:	a1 ef       	ldi	r26, 0xF1	; 241
     1c2:	b0 e0       	ldi	r27, 0x00	; 0
     1c4:	2c 91       	ld	r18, X
     1c6:	80 81       	ld	r24, Z
     1c8:	91 81       	ldd	r25, Z+1	; 0x01
     1ca:	80 7f       	andi	r24, 0xF0	; 240
     1cc:	99 27       	eor	r25, r25
     1ce:	95 95       	asr	r25
     1d0:	87 95       	ror	r24
     1d2:	95 95       	asr	r25
     1d4:	87 95       	ror	r24
     1d6:	95 95       	asr	r25
     1d8:	87 95       	ror	r24
     1da:	95 95       	asr	r25
     1dc:	87 95       	ror	r24
     1de:	92 2f       	mov	r25, r18
     1e0:	90 7f       	andi	r25, 0xF0	; 240
     1e2:	89 2b       	or	r24, r25
     1e4:	8c 93       	st	X, r24
            LCDDR10 = (LCDDR10&0x00F0) | ((numArr[i] & 0x0F00))>>8;
     1e6:	a6 ef       	ldi	r26, 0xF6	; 246
     1e8:	b0 e0       	ldi	r27, 0x00	; 0
     1ea:	8c 91       	ld	r24, X
     1ec:	20 81       	ld	r18, Z
     1ee:	31 81       	ldd	r19, Z+1	; 0x01
     1f0:	22 27       	eor	r18, r18
     1f2:	3f 70       	andi	r19, 0x0F	; 15
     1f4:	80 7f       	andi	r24, 0xF0	; 240
     1f6:	83 2b       	or	r24, r19
     1f8:	8c 93       	st	X, r24
            LCDDR15 = (LCDDR15&0x00F0) | ((numArr[i] & 0xF000))>>12;
     1fa:	ab ef       	ldi	r26, 0xFB	; 251
     1fc:	b0 e0       	ldi	r27, 0x00	; 0
     1fe:	8c 91       	ld	r24, X
     200:	91 81       	ldd	r25, Z+1	; 0x01
     202:	92 95       	swap	r25
     204:	9f 70       	andi	r25, 0x0F	; 15
     206:	80 7f       	andi	r24, 0xF0	; 240
     208:	89 2b       	or	r24, r25
     20a:	8c 93       	st	X, r24
            break;
     20c:	26 c1       	rjmp	.+588    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 1:
            LCDDR0  = (LCDDR0&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     20e:	ac ee       	ldi	r26, 0xEC	; 236
     210:	b0 e0       	ldi	r27, 0x00	; 0
     212:	2c 91       	ld	r18, X
     214:	88 0f       	add	r24, r24
     216:	99 1f       	adc	r25, r25
     218:	e1 e0       	ldi	r30, 0x01	; 1
     21a:	f0 e0       	ldi	r31, 0x00	; 0
     21c:	ec 0f       	add	r30, r28
     21e:	fd 1f       	adc	r31, r29
     220:	e8 0f       	add	r30, r24
     222:	f9 1f       	adc	r31, r25
     224:	80 81       	ld	r24, Z
     226:	91 81       	ldd	r25, Z+1	; 0x01
     228:	82 95       	swap	r24
     22a:	92 95       	swap	r25
     22c:	90 7f       	andi	r25, 0xF0	; 240
     22e:	98 27       	eor	r25, r24
     230:	80 7f       	andi	r24, 0xF0	; 240
     232:	98 27       	eor	r25, r24
     234:	92 2f       	mov	r25, r18
     236:	9f 70       	andi	r25, 0x0F	; 15
     238:	89 2b       	or	r24, r25
     23a:	8c 93       	st	X, r24
            LCDDR5  = (LCDDR5&0x000F)  |   (numArr[i] & 0x00F0);
     23c:	a1 ef       	ldi	r26, 0xF1	; 241
     23e:	b0 e0       	ldi	r27, 0x00	; 0
     240:	9c 91       	ld	r25, X
     242:	80 81       	ld	r24, Z
     244:	9f 70       	andi	r25, 0x0F	; 15
     246:	80 7f       	andi	r24, 0xF0	; 240
     248:	89 2b       	or	r24, r25
     24a:	8c 93       	st	X, r24
            LCDDR10 = (LCDDR10&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     24c:	a6 ef       	ldi	r26, 0xF6	; 246
     24e:	b0 e0       	ldi	r27, 0x00	; 0
     250:	2c 91       	ld	r18, X
     252:	80 81       	ld	r24, Z
     254:	91 81       	ldd	r25, Z+1	; 0x01
     256:	88 27       	eor	r24, r24
     258:	9f 70       	andi	r25, 0x0F	; 15
     25a:	95 95       	asr	r25
     25c:	87 95       	ror	r24
     25e:	95 95       	asr	r25
     260:	87 95       	ror	r24
     262:	95 95       	asr	r25
     264:	87 95       	ror	r24
     266:	95 95       	asr	r25
     268:	87 95       	ror	r24
     26a:	92 2f       	mov	r25, r18
     26c:	9f 70       	andi	r25, 0x0F	; 15
     26e:	89 2b       	or	r24, r25
     270:	8c 93       	st	X, r24
            LCDDR15 = (LCDDR15&0x000F) |  ((numArr[i] & 0xF000))>>8;
     272:	ab ef       	ldi	r26, 0xFB	; 251
     274:	b0 e0       	ldi	r27, 0x00	; 0
     276:	8c 91       	ld	r24, X
     278:	20 81       	ld	r18, Z
     27a:	31 81       	ldd	r19, Z+1	; 0x01
     27c:	22 27       	eor	r18, r18
     27e:	30 7f       	andi	r19, 0xF0	; 240
     280:	8f 70       	andi	r24, 0x0F	; 15
     282:	83 2b       	or	r24, r19
     284:	8c 93       	st	X, r24
            break;
     286:	e9 c0       	rjmp	.+466    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 2:
            LCDDR1  = (LCDDR1&0x00F0)  |  (numArr[i] & 0x000F);
     288:	ad ee       	ldi	r26, 0xED	; 237
     28a:	b0 e0       	ldi	r27, 0x00	; 0
     28c:	2c 91       	ld	r18, X
     28e:	88 0f       	add	r24, r24
     290:	99 1f       	adc	r25, r25
     292:	e1 e0       	ldi	r30, 0x01	; 1
     294:	f0 e0       	ldi	r31, 0x00	; 0
     296:	ec 0f       	add	r30, r28
     298:	fd 1f       	adc	r31, r29
     29a:	e8 0f       	add	r30, r24
     29c:	f9 1f       	adc	r31, r25
     29e:	80 81       	ld	r24, Z
     2a0:	92 2f       	mov	r25, r18
     2a2:	90 7f       	andi	r25, 0xF0	; 240
     2a4:	8f 70       	andi	r24, 0x0F	; 15
     2a6:	89 2b       	or	r24, r25
     2a8:	8c 93       	st	X, r24
            LCDDR6  = (LCDDR6&0x00F0)  |  ((numArr[i] & 0x00F0))>>4;
     2aa:	a2 ef       	ldi	r26, 0xF2	; 242
     2ac:	b0 e0       	ldi	r27, 0x00	; 0
     2ae:	2c 91       	ld	r18, X
     2b0:	80 81       	ld	r24, Z
     2b2:	91 81       	ldd	r25, Z+1	; 0x01
     2b4:	80 7f       	andi	r24, 0xF0	; 240
     2b6:	99 27       	eor	r25, r25
     2b8:	95 95       	asr	r25
     2ba:	87 95       	ror	r24
     2bc:	95 95       	asr	r25
     2be:	87 95       	ror	r24
     2c0:	95 95       	asr	r25
     2c2:	87 95       	ror	r24
     2c4:	95 95       	asr	r25
     2c6:	87 95       	ror	r24
     2c8:	92 2f       	mov	r25, r18
     2ca:	90 7f       	andi	r25, 0xF0	; 240
     2cc:	89 2b       	or	r24, r25
     2ce:	8c 93       	st	X, r24
            LCDDR11 = (LCDDR11&0x00F0) |  ((numArr[i] & 0x0F00))>>8;
     2d0:	a7 ef       	ldi	r26, 0xF7	; 247
     2d2:	b0 e0       	ldi	r27, 0x00	; 0
     2d4:	8c 91       	ld	r24, X
     2d6:	20 81       	ld	r18, Z
     2d8:	31 81       	ldd	r19, Z+1	; 0x01
     2da:	22 27       	eor	r18, r18
     2dc:	3f 70       	andi	r19, 0x0F	; 15
     2de:	80 7f       	andi	r24, 0xF0	; 240
     2e0:	83 2b       	or	r24, r19
     2e2:	8c 93       	st	X, r24
            LCDDR16 = (LCDDR16&0x00F0) |  ((numArr[i] & 0xF000))>>12;
     2e4:	ac ef       	ldi	r26, 0xFC	; 252
     2e6:	b0 e0       	ldi	r27, 0x00	; 0
     2e8:	8c 91       	ld	r24, X
     2ea:	91 81       	ldd	r25, Z+1	; 0x01
     2ec:	92 95       	swap	r25
     2ee:	9f 70       	andi	r25, 0x0F	; 15
     2f0:	80 7f       	andi	r24, 0xF0	; 240
     2f2:	89 2b       	or	r24, r25
     2f4:	8c 93       	st	X, r24
            break;
     2f6:	b1 c0       	rjmp	.+354    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 3:
            LCDDR1  = (LCDDR1&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     2f8:	ad ee       	ldi	r26, 0xED	; 237
     2fa:	b0 e0       	ldi	r27, 0x00	; 0
     2fc:	2c 91       	ld	r18, X
     2fe:	88 0f       	add	r24, r24
     300:	99 1f       	adc	r25, r25
     302:	e1 e0       	ldi	r30, 0x01	; 1
     304:	f0 e0       	ldi	r31, 0x00	; 0
     306:	ec 0f       	add	r30, r28
     308:	fd 1f       	adc	r31, r29
     30a:	e8 0f       	add	r30, r24
     30c:	f9 1f       	adc	r31, r25
     30e:	80 81       	ld	r24, Z
     310:	91 81       	ldd	r25, Z+1	; 0x01
     312:	82 95       	swap	r24
     314:	92 95       	swap	r25
     316:	90 7f       	andi	r25, 0xF0	; 240
     318:	98 27       	eor	r25, r24
     31a:	80 7f       	andi	r24, 0xF0	; 240
     31c:	98 27       	eor	r25, r24
     31e:	92 2f       	mov	r25, r18
     320:	9f 70       	andi	r25, 0x0F	; 15
     322:	89 2b       	or	r24, r25
     324:	8c 93       	st	X, r24
            LCDDR6  = (LCDDR6&0x000F)  |   (numArr[i] & 0x00F0);
     326:	a2 ef       	ldi	r26, 0xF2	; 242
     328:	b0 e0       	ldi	r27, 0x00	; 0
     32a:	9c 91       	ld	r25, X
     32c:	80 81       	ld	r24, Z
     32e:	9f 70       	andi	r25, 0x0F	; 15
     330:	80 7f       	andi	r24, 0xF0	; 240
     332:	89 2b       	or	r24, r25
     334:	8c 93       	st	X, r24
            LCDDR11 = (LCDDR11&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     336:	a7 ef       	ldi	r26, 0xF7	; 247
     338:	b0 e0       	ldi	r27, 0x00	; 0
     33a:	2c 91       	ld	r18, X
     33c:	80 81       	ld	r24, Z
     33e:	91 81       	ldd	r25, Z+1	; 0x01
     340:	88 27       	eor	r24, r24
     342:	9f 70       	andi	r25, 0x0F	; 15
     344:	95 95       	asr	r25
     346:	87 95       	ror	r24
     348:	95 95       	asr	r25
     34a:	87 95       	ror	r24
     34c:	95 95       	asr	r25
     34e:	87 95       	ror	r24
     350:	95 95       	asr	r25
     352:	87 95       	ror	r24
     354:	92 2f       	mov	r25, r18
     356:	9f 70       	andi	r25, 0x0F	; 15
     358:	89 2b       	or	r24, r25
     35a:	8c 93       	st	X, r24
            LCDDR16 = (LCDDR16&0x000F) |  ((numArr[i] & 0xF000))>>8;
     35c:	ac ef       	ldi	r26, 0xFC	; 252
     35e:	b0 e0       	ldi	r27, 0x00	; 0
     360:	8c 91       	ld	r24, X
     362:	20 81       	ld	r18, Z
     364:	31 81       	ldd	r19, Z+1	; 0x01
     366:	22 27       	eor	r18, r18
     368:	30 7f       	andi	r19, 0xF0	; 240
     36a:	8f 70       	andi	r24, 0x0F	; 15
     36c:	83 2b       	or	r24, r19
     36e:	8c 93       	st	X, r24
            break;
     370:	74 c0       	rjmp	.+232    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 4:
            LCDDR2  = (LCDDR2&0x00F0)  | ((numArr[i] & 0x000F));
     372:	ae ee       	ldi	r26, 0xEE	; 238
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	2c 91       	ld	r18, X
     378:	88 0f       	add	r24, r24
     37a:	99 1f       	adc	r25, r25
     37c:	e1 e0       	ldi	r30, 0x01	; 1
     37e:	f0 e0       	ldi	r31, 0x00	; 0
     380:	ec 0f       	add	r30, r28
     382:	fd 1f       	adc	r31, r29
     384:	e8 0f       	add	r30, r24
     386:	f9 1f       	adc	r31, r25
     388:	80 81       	ld	r24, Z
     38a:	92 2f       	mov	r25, r18
     38c:	90 7f       	andi	r25, 0xF0	; 240
     38e:	8f 70       	andi	r24, 0x0F	; 15
     390:	89 2b       	or	r24, r25
     392:	8c 93       	st	X, r24
            LCDDR7  = (LCDDR7&0x00F0)  | ((numArr[i] & 0x00F0))>>4;
     394:	a3 ef       	ldi	r26, 0xF3	; 243
     396:	b0 e0       	ldi	r27, 0x00	; 0
     398:	2c 91       	ld	r18, X
     39a:	80 81       	ld	r24, Z
     39c:	91 81       	ldd	r25, Z+1	; 0x01
     39e:	80 7f       	andi	r24, 0xF0	; 240
     3a0:	99 27       	eor	r25, r25
     3a2:	95 95       	asr	r25
     3a4:	87 95       	ror	r24
     3a6:	95 95       	asr	r25
     3a8:	87 95       	ror	r24
     3aa:	95 95       	asr	r25
     3ac:	87 95       	ror	r24
     3ae:	95 95       	asr	r25
     3b0:	87 95       	ror	r24
     3b2:	92 2f       	mov	r25, r18
     3b4:	90 7f       	andi	r25, 0xF0	; 240
     3b6:	89 2b       	or	r24, r25
     3b8:	8c 93       	st	X, r24
            LCDDR12 = (LCDDR12&0x00F0) | ((numArr[i] & 0x0F00))>>8;
     3ba:	a8 ef       	ldi	r26, 0xF8	; 248
     3bc:	b0 e0       	ldi	r27, 0x00	; 0
     3be:	8c 91       	ld	r24, X
     3c0:	20 81       	ld	r18, Z
     3c2:	31 81       	ldd	r19, Z+1	; 0x01
     3c4:	22 27       	eor	r18, r18
     3c6:	3f 70       	andi	r19, 0x0F	; 15
     3c8:	80 7f       	andi	r24, 0xF0	; 240
     3ca:	83 2b       	or	r24, r19
     3cc:	8c 93       	st	X, r24
            LCDDR17 = (LCDDR17&0x00F0) | ((numArr[i] & 0xF000))>>12;
     3ce:	ad ef       	ldi	r26, 0xFD	; 253
     3d0:	b0 e0       	ldi	r27, 0x00	; 0
     3d2:	8c 91       	ld	r24, X
     3d4:	91 81       	ldd	r25, Z+1	; 0x01
     3d6:	92 95       	swap	r25
     3d8:	9f 70       	andi	r25, 0x0F	; 15
     3da:	80 7f       	andi	r24, 0xF0	; 240
     3dc:	89 2b       	or	r24, r25
     3de:	8c 93       	st	X, r24
            break;
     3e0:	3c c0       	rjmp	.+120    	; 0x45a <__DATA_REGION_LENGTH__+0x5a>
        case 5:
            LCDDR2  = (LCDDR2&0x000F)  |  ((numArr[i] & 0x000F))<<4;
     3e2:	ae ee       	ldi	r26, 0xEE	; 238
     3e4:	b0 e0       	ldi	r27, 0x00	; 0
     3e6:	2c 91       	ld	r18, X
     3e8:	88 0f       	add	r24, r24
     3ea:	99 1f       	adc	r25, r25
     3ec:	e1 e0       	ldi	r30, 0x01	; 1
     3ee:	f0 e0       	ldi	r31, 0x00	; 0
     3f0:	ec 0f       	add	r30, r28
     3f2:	fd 1f       	adc	r31, r29
     3f4:	e8 0f       	add	r30, r24
     3f6:	f9 1f       	adc	r31, r25
     3f8:	80 81       	ld	r24, Z
     3fa:	91 81       	ldd	r25, Z+1	; 0x01
     3fc:	82 95       	swap	r24
     3fe:	92 95       	swap	r25
     400:	90 7f       	andi	r25, 0xF0	; 240
     402:	98 27       	eor	r25, r24
     404:	80 7f       	andi	r24, 0xF0	; 240
     406:	98 27       	eor	r25, r24
     408:	92 2f       	mov	r25, r18
     40a:	9f 70       	andi	r25, 0x0F	; 15
     40c:	89 2b       	or	r24, r25
     40e:	8c 93       	st	X, r24
            LCDDR7  = (LCDDR7&0x000F)  |  (numArr[i] & 0x00F0);
     410:	a3 ef       	ldi	r26, 0xF3	; 243
     412:	b0 e0       	ldi	r27, 0x00	; 0
     414:	9c 91       	ld	r25, X
     416:	80 81       	ld	r24, Z
     418:	9f 70       	andi	r25, 0x0F	; 15
     41a:	80 7f       	andi	r24, 0xF0	; 240
     41c:	89 2b       	or	r24, r25
     41e:	8c 93       	st	X, r24
            LCDDR12 = (LCDDR12&0x000F) |  ((numArr[i] & 0x0F00))>>4;
     420:	a8 ef       	ldi	r26, 0xF8	; 248
     422:	b0 e0       	ldi	r27, 0x00	; 0
     424:	2c 91       	ld	r18, X
     426:	80 81       	ld	r24, Z
     428:	91 81       	ldd	r25, Z+1	; 0x01
     42a:	88 27       	eor	r24, r24
     42c:	9f 70       	andi	r25, 0x0F	; 15
     42e:	95 95       	asr	r25
     430:	87 95       	ror	r24
     432:	95 95       	asr	r25
     434:	87 95       	ror	r24
     436:	95 95       	asr	r25
     438:	87 95       	ror	r24
     43a:	95 95       	asr	r25
     43c:	87 95       	ror	r24
     43e:	92 2f       	mov	r25, r18
     440:	9f 70       	andi	r25, 0x0F	; 15
     442:	89 2b       	or	r24, r25
     444:	8c 93       	st	X, r24
            LCDDR17 = (LCDDR17&0x000F) |  ((numArr[i] & 0xF000))>>8;
     446:	ad ef       	ldi	r26, 0xFD	; 253
     448:	b0 e0       	ldi	r27, 0x00	; 0
     44a:	8c 91       	ld	r24, X
     44c:	20 81       	ld	r18, Z
     44e:	31 81       	ldd	r19, Z+1	; 0x01
     450:	22 27       	eor	r18, r18
     452:	30 7f       	andi	r19, 0xF0	; 240
     454:	8f 70       	andi	r24, 0x0F	; 15
     456:	83 2b       	or	r24, r19
     458:	8c 93       	st	X, r24
            break;
        default:
            break;
    }

}
     45a:	64 96       	adiw	r28, 0x14	; 20
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	f8 94       	cli
     460:	de bf       	out	0x3e, r29	; 62
     462:	0f be       	out	0x3f, r0	; 63
     464:	cd bf       	out	0x3d, r28	; 61
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	08 95       	ret

0000046c <USART_Receive>:
// 	while(!(UCSR0A & (1<<UDRE0)));
// 	// Put data into buffer, sends the data
// 	UDR0 = data;
// }
// 
unsigned char USART_Receive(void) {
     46c:	cf 93       	push	r28
     46e:	df 93       	push	r29
     470:	1f 92       	push	r1
     472:	cd b7       	in	r28, 0x3d	; 61
     474:	de b7       	in	r29, 0x3e	; 62
	// Wait for data to be received
	while(!(UCSR0A & (1<<RXC0)));
     476:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fc0c0>
     47a:	88 23       	and	r24, r24
     47c:	e4 f7       	brge	.-8      	; 0x476 <USART_Receive+0xa>
	// Get and return received data from buffer
	volatile uint8_t data = UDR0;
     47e:	e6 ec       	ldi	r30, 0xC6	; 198
     480:	f0 e0       	ldi	r31, 0x00	; 0
     482:	80 81       	ld	r24, Z
     484:	89 83       	std	Y+1, r24	; 0x01
	if (UDR0 == 0b0001) {
     486:	80 81       	ld	r24, Z
     488:	81 30       	cpi	r24, 0x01	; 1
     48a:	31 f4       	brne	.+12     	; 0x498 <USART_Receive+0x2c>
		writeChar('1',1);
     48c:	61 e0       	ldi	r22, 0x01	; 1
     48e:	70 e0       	ldi	r23, 0x00	; 0
     490:	81 e3       	ldi	r24, 0x31	; 49
     492:	90 e0       	ldi	r25, 0x00	; 0
     494:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
	}
}
     498:	0f 90       	pop	r0
     49a:	df 91       	pop	r29
     49c:	cf 91       	pop	r28
     49e:	08 95       	ret

000004a0 <main>:

int main(){
	UBRR0H = (UBRR_VALUE>>8);
     4a0:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fc0c5>
	UBRR0L = (UBRR_VALUE);
     4a4:	84 e3       	ldi	r24, 0x34	; 52
     4a6:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fc0c4>
	// Enable transmitter and receiver
	UCSR0B = (1<<RXEN0)|(1<<TXEN0)|(1<<RXCIE0);
     4aa:	88 e9       	ldi	r24, 0x98	; 152
     4ac:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fc0c1>
	// Set frame format: 8data, 1stop bit
	UCSR0C = (0<<USBS0)|(1<<UCSZ00)|(1<<UCSZ01);
     4b0:	86 e0       	ldi	r24, 0x06	; 6
     4b2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7fc0c2>
	LCD_init();
     4b6:	0e 94 56 00 	call	0xac	; 0xac <LCD_init>
	
	USART_Receive();
     4ba:	0e 94 36 02 	call	0x46c	; 0x46c <USART_Receive>
	writeChar('1',5);
     4be:	65 e0       	ldi	r22, 0x05	; 5
     4c0:	70 e0       	ldi	r23, 0x00	; 0
     4c2:	81 e3       	ldi	r24, 0x31	; 49
     4c4:	90 e0       	ldi	r25, 0x00	; 0
     4c6:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
// 	while(1) {
//         unsigned char data = USART_Receive();
//         USART_Transmit(data);
// 		}	
//         return 0;
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	08 95       	ret

000004d0 <dispatch>:

static void idle(void) {
    schedule();
    ENABLE(1);
    while (1) {
        SLEEP();
     4d0:	cf 93       	push	r28
     4d2:	df 93       	push	r29
     4d4:	00 d0       	rcall	.+0      	; 0x4d6 <dispatch+0x6>
     4d6:	cd b7       	in	r28, 0x3d	; 61
     4d8:	de b7       	in	r29, 0x3e	; 62
     4da:	9a 83       	std	Y+2, r25	; 0x02
     4dc:	89 83       	std	Y+1, r24	; 0x01
     4de:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__DATA_REGION_ORIGIN__>
     4e2:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4e6:	06 96       	adiw	r24, 0x06	; 6
     4e8:	0e 94 de 0b 	call	0x17bc	; 0x17bc <setjmp>
     4ec:	89 2b       	or	r24, r25
     4ee:	59 f4       	brne	.+22     	; 0x506 <__stack+0x7>
     4f0:	89 81       	ldd	r24, Y+1	; 0x01
     4f2:	9a 81       	ldd	r25, Y+2	; 0x02
     4f4:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__DATA_REGION_ORIGIN__+0x1>
     4f8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__DATA_REGION_ORIGIN__>
     4fc:	61 e0       	ldi	r22, 0x01	; 1
     4fe:	70 e0       	ldi	r23, 0x00	; 0
     500:	06 96       	adiw	r24, 0x06	; 6
     502:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <longjmp>
     506:	0f 90       	pop	r0
     508:	0f 90       	pop	r0
     50a:	df 91       	pop	r29
     50c:	cf 91       	pop	r28
     50e:	08 95       	ret

00000510 <enqueueByDeadline>:
     510:	0f 93       	push	r16
     512:	1f 93       	push	r17
     514:	cf 93       	push	r28
     516:	df 93       	push	r29
     518:	dc 01       	movw	r26, r24
     51a:	cb 01       	movw	r24, r22
     51c:	eb 01       	movw	r28, r22
     51e:	e8 81       	ld	r30, Y
     520:	f9 81       	ldd	r31, Y+1	; 0x01
     522:	c0 e0       	ldi	r28, 0x00	; 0
     524:	d0 e0       	ldi	r29, 0x00	; 0
     526:	04 c0       	rjmp	.+8      	; 0x530 <enqueueByDeadline+0x20>
     528:	ef 01       	movw	r28, r30
     52a:	01 90       	ld	r0, Z+
     52c:	f0 81       	ld	r31, Z
     52e:	e0 2d       	mov	r30, r0
     530:	30 97       	sbiw	r30, 0x00	; 0
     532:	79 f0       	breq	.+30     	; 0x552 <enqueueByDeadline+0x42>
     534:	06 81       	ldd	r16, Z+6	; 0x06
     536:	17 81       	ldd	r17, Z+7	; 0x07
     538:	20 85       	ldd	r18, Z+8	; 0x08
     53a:	31 85       	ldd	r19, Z+9	; 0x09
     53c:	16 96       	adiw	r26, 0x06	; 6
     53e:	4d 91       	ld	r20, X+
     540:	5d 91       	ld	r21, X+
     542:	6d 91       	ld	r22, X+
     544:	7c 91       	ld	r23, X
     546:	19 97       	sbiw	r26, 0x09	; 9
     548:	40 17       	cp	r20, r16
     54a:	51 07       	cpc	r21, r17
     54c:	62 07       	cpc	r22, r18
     54e:	73 07       	cpc	r23, r19
     550:	5c f7       	brge	.-42     	; 0x528 <enqueueByDeadline+0x18>
     552:	11 96       	adiw	r26, 0x01	; 1
     554:	fc 93       	st	X, r31
     556:	ee 93       	st	-X, r30
     558:	20 97       	sbiw	r28, 0x00	; 0
     55a:	21 f4       	brne	.+8      	; 0x564 <enqueueByDeadline+0x54>
     55c:	fc 01       	movw	r30, r24
     55e:	b1 83       	std	Z+1, r27	; 0x01
     560:	a0 83       	st	Z, r26
     562:	02 c0       	rjmp	.+4      	; 0x568 <enqueueByDeadline+0x58>
     564:	b9 83       	std	Y+1, r27	; 0x01
     566:	a8 83       	st	Y, r26
     568:	df 91       	pop	r29
     56a:	cf 91       	pop	r28
     56c:	1f 91       	pop	r17
     56e:	0f 91       	pop	r16
     570:	08 95       	ret

00000572 <dequeue>:
     572:	dc 01       	movw	r26, r24
     574:	ed 91       	ld	r30, X+
     576:	fc 91       	ld	r31, X
     578:	11 97       	sbiw	r26, 0x01	; 1
     57a:	30 97       	sbiw	r30, 0x00	; 0
     57c:	59 f4       	brne	.+22     	; 0x594 <dequeue+0x22>
     57e:	8f ef       	ldi	r24, 0xFF	; 255
     580:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     584:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     588:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     58c:	81 e0       	ldi	r24, 0x01	; 1
     58e:	83 bf       	out	0x33, r24	; 51
     590:	88 95       	sleep
     592:	fc cf       	rjmp	.-8      	; 0x58c <dequeue+0x1a>
     594:	20 81       	ld	r18, Z
     596:	31 81       	ldd	r19, Z+1	; 0x01
     598:	2d 93       	st	X+, r18
     59a:	3c 93       	st	X, r19
     59c:	cf 01       	movw	r24, r30
     59e:	08 95       	ret

000005a0 <push>:
     5a0:	fb 01       	movw	r30, r22
     5a2:	20 81       	ld	r18, Z
     5a4:	31 81       	ldd	r19, Z+1	; 0x01
     5a6:	fc 01       	movw	r30, r24
     5a8:	31 83       	std	Z+1, r19	; 0x01
     5aa:	20 83       	st	Z, r18
     5ac:	fb 01       	movw	r30, r22
     5ae:	91 83       	std	Z+1, r25	; 0x01
     5b0:	80 83       	st	Z, r24
     5b2:	08 95       	ret

000005b4 <pop>:
     5b4:	dc 01       	movw	r26, r24
     5b6:	ed 91       	ld	r30, X+
     5b8:	fc 91       	ld	r31, X
     5ba:	11 97       	sbiw	r26, 0x01	; 1
     5bc:	20 81       	ld	r18, Z
     5be:	31 81       	ldd	r19, Z+1	; 0x01
     5c0:	2d 93       	st	X+, r18
     5c2:	3c 93       	st	X, r19
     5c4:	cf 01       	movw	r24, r30
     5c6:	08 95       	ret

000005c8 <schedule>:
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	e0 91 02 01 	lds	r30, 0x0102	; 0x800102 <activeStack>
     5d0:	f0 91 03 01 	lds	r31, 0x0103	; 0x800103 <activeStack+0x1>
     5d4:	c2 81       	ldd	r28, Z+2	; 0x02
     5d6:	d3 81       	ldd	r29, Z+3	; 0x03
     5d8:	e0 91 22 01 	lds	r30, 0x0122	; 0x800122 <msgQ>
     5dc:	f0 91 23 01 	lds	r31, 0x0123	; 0x800123 <msgQ+0x1>
     5e0:	30 97       	sbiw	r30, 0x00	; 0
     5e2:	19 f1       	breq	.+70     	; 0x62a <schedule+0x62>
     5e4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <threadPool>
     5e8:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <threadPool+0x1>
     5ec:	89 2b       	or	r24, r25
     5ee:	e9 f0       	breq	.+58     	; 0x62a <schedule+0x62>
     5f0:	20 97       	sbiw	r28, 0x00	; 0
     5f2:	69 f0       	breq	.+26     	; 0x60e <schedule+0x46>
     5f4:	86 81       	ldd	r24, Z+6	; 0x06
     5f6:	97 81       	ldd	r25, Z+7	; 0x07
     5f8:	a0 85       	ldd	r26, Z+8	; 0x08
     5fa:	b1 85       	ldd	r27, Z+9	; 0x09
     5fc:	4e 81       	ldd	r20, Y+6	; 0x06
     5fe:	5f 81       	ldd	r21, Y+7	; 0x07
     600:	68 85       	ldd	r22, Y+8	; 0x08
     602:	79 85       	ldd	r23, Y+9	; 0x09
     604:	84 1b       	sub	r24, r20
     606:	95 0b       	sbc	r25, r21
     608:	a6 0b       	sbc	r26, r22
     60a:	b7 0b       	sbc	r27, r23
     60c:	72 f4       	brpl	.+28     	; 0x62a <schedule+0x62>
     60e:	84 e0       	ldi	r24, 0x04	; 4
     610:	91 e0       	ldi	r25, 0x01	; 1
     612:	0e 94 da 02 	call	0x5b4	; 0x5b4 <pop>
     616:	62 e0       	ldi	r22, 0x02	; 2
     618:	71 e0       	ldi	r23, 0x01	; 1
     61a:	0e 94 d0 02 	call	0x5a0	; 0x5a0 <push>
     61e:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <activeStack>
     622:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <activeStack+0x1>
     626:	0e 94 68 02 	call	0x4d0	; 0x4d0 <dispatch>
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	08 95       	ret

00000630 <__vector_1>:
     630:	1f 92       	push	r1
     632:	0f 92       	push	r0
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	0f 92       	push	r0
     638:	11 24       	eor	r1, r1
     63a:	0f 93       	push	r16
     63c:	1f 93       	push	r17
     63e:	2f 93       	push	r18
     640:	3f 93       	push	r19
     642:	4f 93       	push	r20
     644:	5f 93       	push	r21
     646:	6f 93       	push	r22
     648:	7f 93       	push	r23
     64a:	8f 93       	push	r24
     64c:	9f 93       	push	r25
     64e:	af 93       	push	r26
     650:	bf 93       	push	r27
     652:	ef 93       	push	r30
     654:	ff 93       	push	r31
     656:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     65a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     65e:	ac 01       	movw	r20, r24
     660:	09 2e       	mov	r0, r25
     662:	00 0c       	add	r0, r0
     664:	66 0b       	sbc	r22, r22
     666:	77 0b       	sbc	r23, r23
     668:	9a 01       	movw	r18, r20
     66a:	11 27       	eor	r17, r17
     66c:	00 27       	eor	r16, r16
     66e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     672:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     676:	60 e0       	ldi	r22, 0x00	; 0
     678:	70 e0       	ldi	r23, 0x00	; 0
     67a:	40 2b       	or	r20, r16
     67c:	51 2b       	or	r21, r17
     67e:	62 2b       	or	r22, r18
     680:	73 2b       	or	r23, r19
     682:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     686:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     68a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     68e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     692:	b0 9b       	sbis	0x16, 0	; 22
     694:	1a c0       	rjmp	.+52     	; 0x6ca <__vector_1+0x9a>
     696:	01 96       	adiw	r24, 0x01	; 1
     698:	09 2e       	mov	r0, r25
     69a:	00 0c       	add	r0, r0
     69c:	aa 0b       	sbc	r26, r26
     69e:	bb 0b       	sbc	r27, r27
     6a0:	bc 01       	movw	r22, r24
     6a2:	55 27       	eor	r21, r21
     6a4:	44 27       	eor	r20, r20
     6a6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     6aa:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     6ae:	a0 e0       	ldi	r26, 0x00	; 0
     6b0:	b0 e0       	ldi	r27, 0x00	; 0
     6b2:	84 2b       	or	r24, r20
     6b4:	95 2b       	or	r25, r21
     6b6:	a6 2b       	or	r26, r22
     6b8:	b7 2b       	or	r27, r23
     6ba:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     6be:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     6c2:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     6c6:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     6ca:	e0 91 bc 01 	lds	r30, 0x01BC	; 0x8001bc <mtable>
     6ce:	f0 91 bd 01 	lds	r31, 0x01BD	; 0x8001bd <mtable+0x1>
     6d2:	30 97       	sbiw	r30, 0x00	; 0
     6d4:	39 f0       	breq	.+14     	; 0x6e4 <__vector_1+0xb4>
     6d6:	60 e0       	ldi	r22, 0x00	; 0
     6d8:	70 e0       	ldi	r23, 0x00	; 0
     6da:	80 91 24 01 	lds	r24, 0x0124	; 0x800124 <otable>
     6de:	90 91 25 01 	lds	r25, 0x0125	; 0x800125 <otable+0x1>
     6e2:	09 95       	icall
     6e4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     6e8:	ff 91       	pop	r31
     6ea:	ef 91       	pop	r30
     6ec:	bf 91       	pop	r27
     6ee:	af 91       	pop	r26
     6f0:	9f 91       	pop	r25
     6f2:	8f 91       	pop	r24
     6f4:	7f 91       	pop	r23
     6f6:	6f 91       	pop	r22
     6f8:	5f 91       	pop	r21
     6fa:	4f 91       	pop	r20
     6fc:	3f 91       	pop	r19
     6fe:	2f 91       	pop	r18
     700:	1f 91       	pop	r17
     702:	0f 91       	pop	r16
     704:	0f 90       	pop	r0
     706:	0f be       	out	0x3f, r0	; 63
     708:	0f 90       	pop	r0
     70a:	1f 90       	pop	r1
     70c:	18 95       	reti

0000070e <__vector_2>:
     70e:	1f 92       	push	r1
     710:	0f 92       	push	r0
     712:	0f b6       	in	r0, 0x3f	; 63
     714:	0f 92       	push	r0
     716:	11 24       	eor	r1, r1
     718:	0f 93       	push	r16
     71a:	1f 93       	push	r17
     71c:	2f 93       	push	r18
     71e:	3f 93       	push	r19
     720:	4f 93       	push	r20
     722:	5f 93       	push	r21
     724:	6f 93       	push	r22
     726:	7f 93       	push	r23
     728:	8f 93       	push	r24
     72a:	9f 93       	push	r25
     72c:	af 93       	push	r26
     72e:	bf 93       	push	r27
     730:	ef 93       	push	r30
     732:	ff 93       	push	r31
     734:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     738:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     73c:	ac 01       	movw	r20, r24
     73e:	09 2e       	mov	r0, r25
     740:	00 0c       	add	r0, r0
     742:	66 0b       	sbc	r22, r22
     744:	77 0b       	sbc	r23, r23
     746:	9a 01       	movw	r18, r20
     748:	11 27       	eor	r17, r17
     74a:	00 27       	eor	r16, r16
     74c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     750:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     754:	60 e0       	ldi	r22, 0x00	; 0
     756:	70 e0       	ldi	r23, 0x00	; 0
     758:	40 2b       	or	r20, r16
     75a:	51 2b       	or	r21, r17
     75c:	62 2b       	or	r22, r18
     75e:	73 2b       	or	r23, r19
     760:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     764:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     768:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     76c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     770:	b0 9b       	sbis	0x16, 0	; 22
     772:	1a c0       	rjmp	.+52     	; 0x7a8 <__vector_2+0x9a>
     774:	01 96       	adiw	r24, 0x01	; 1
     776:	09 2e       	mov	r0, r25
     778:	00 0c       	add	r0, r0
     77a:	aa 0b       	sbc	r26, r26
     77c:	bb 0b       	sbc	r27, r27
     77e:	bc 01       	movw	r22, r24
     780:	55 27       	eor	r21, r21
     782:	44 27       	eor	r20, r20
     784:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     788:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     78c:	a0 e0       	ldi	r26, 0x00	; 0
     78e:	b0 e0       	ldi	r27, 0x00	; 0
     790:	84 2b       	or	r24, r20
     792:	95 2b       	or	r25, r21
     794:	a6 2b       	or	r26, r22
     796:	b7 2b       	or	r27, r23
     798:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     79c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     7a0:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     7a4:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     7a8:	e0 91 be 01 	lds	r30, 0x01BE	; 0x8001be <mtable+0x2>
     7ac:	f0 91 bf 01 	lds	r31, 0x01BF	; 0x8001bf <mtable+0x3>
     7b0:	30 97       	sbiw	r30, 0x00	; 0
     7b2:	39 f0       	breq	.+14     	; 0x7c2 <__vector_2+0xb4>
     7b4:	61 e0       	ldi	r22, 0x01	; 1
     7b6:	70 e0       	ldi	r23, 0x00	; 0
     7b8:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <otable+0x2>
     7bc:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <otable+0x3>
     7c0:	09 95       	icall
     7c2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     7c6:	ff 91       	pop	r31
     7c8:	ef 91       	pop	r30
     7ca:	bf 91       	pop	r27
     7cc:	af 91       	pop	r26
     7ce:	9f 91       	pop	r25
     7d0:	8f 91       	pop	r24
     7d2:	7f 91       	pop	r23
     7d4:	6f 91       	pop	r22
     7d6:	5f 91       	pop	r21
     7d8:	4f 91       	pop	r20
     7da:	3f 91       	pop	r19
     7dc:	2f 91       	pop	r18
     7de:	1f 91       	pop	r17
     7e0:	0f 91       	pop	r16
     7e2:	0f 90       	pop	r0
     7e4:	0f be       	out	0x3f, r0	; 63
     7e6:	0f 90       	pop	r0
     7e8:	1f 90       	pop	r1
     7ea:	18 95       	reti

000007ec <__vector_3>:
     7ec:	1f 92       	push	r1
     7ee:	0f 92       	push	r0
     7f0:	0f b6       	in	r0, 0x3f	; 63
     7f2:	0f 92       	push	r0
     7f4:	11 24       	eor	r1, r1
     7f6:	0f 93       	push	r16
     7f8:	1f 93       	push	r17
     7fa:	2f 93       	push	r18
     7fc:	3f 93       	push	r19
     7fe:	4f 93       	push	r20
     800:	5f 93       	push	r21
     802:	6f 93       	push	r22
     804:	7f 93       	push	r23
     806:	8f 93       	push	r24
     808:	9f 93       	push	r25
     80a:	af 93       	push	r26
     80c:	bf 93       	push	r27
     80e:	ef 93       	push	r30
     810:	ff 93       	push	r31
     812:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     816:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     81a:	ac 01       	movw	r20, r24
     81c:	09 2e       	mov	r0, r25
     81e:	00 0c       	add	r0, r0
     820:	66 0b       	sbc	r22, r22
     822:	77 0b       	sbc	r23, r23
     824:	9a 01       	movw	r18, r20
     826:	11 27       	eor	r17, r17
     828:	00 27       	eor	r16, r16
     82a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     82e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     832:	60 e0       	ldi	r22, 0x00	; 0
     834:	70 e0       	ldi	r23, 0x00	; 0
     836:	40 2b       	or	r20, r16
     838:	51 2b       	or	r21, r17
     83a:	62 2b       	or	r22, r18
     83c:	73 2b       	or	r23, r19
     83e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     842:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     846:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     84a:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     84e:	b0 9b       	sbis	0x16, 0	; 22
     850:	1a c0       	rjmp	.+52     	; 0x886 <__vector_3+0x9a>
     852:	01 96       	adiw	r24, 0x01	; 1
     854:	09 2e       	mov	r0, r25
     856:	00 0c       	add	r0, r0
     858:	aa 0b       	sbc	r26, r26
     85a:	bb 0b       	sbc	r27, r27
     85c:	bc 01       	movw	r22, r24
     85e:	55 27       	eor	r21, r21
     860:	44 27       	eor	r20, r20
     862:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     866:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     86a:	a0 e0       	ldi	r26, 0x00	; 0
     86c:	b0 e0       	ldi	r27, 0x00	; 0
     86e:	84 2b       	or	r24, r20
     870:	95 2b       	or	r25, r21
     872:	a6 2b       	or	r26, r22
     874:	b7 2b       	or	r27, r23
     876:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     87a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     87e:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     882:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     886:	e0 91 c0 01 	lds	r30, 0x01C0	; 0x8001c0 <mtable+0x4>
     88a:	f0 91 c1 01 	lds	r31, 0x01C1	; 0x8001c1 <mtable+0x5>
     88e:	30 97       	sbiw	r30, 0x00	; 0
     890:	39 f0       	breq	.+14     	; 0x8a0 <__vector_3+0xb4>
     892:	62 e0       	ldi	r22, 0x02	; 2
     894:	70 e0       	ldi	r23, 0x00	; 0
     896:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <otable+0x4>
     89a:	90 91 29 01 	lds	r25, 0x0129	; 0x800129 <otable+0x5>
     89e:	09 95       	icall
     8a0:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     8a4:	ff 91       	pop	r31
     8a6:	ef 91       	pop	r30
     8a8:	bf 91       	pop	r27
     8aa:	af 91       	pop	r26
     8ac:	9f 91       	pop	r25
     8ae:	8f 91       	pop	r24
     8b0:	7f 91       	pop	r23
     8b2:	6f 91       	pop	r22
     8b4:	5f 91       	pop	r21
     8b6:	4f 91       	pop	r20
     8b8:	3f 91       	pop	r19
     8ba:	2f 91       	pop	r18
     8bc:	1f 91       	pop	r17
     8be:	0f 91       	pop	r16
     8c0:	0f 90       	pop	r0
     8c2:	0f be       	out	0x3f, r0	; 63
     8c4:	0f 90       	pop	r0
     8c6:	1f 90       	pop	r1
     8c8:	18 95       	reti

000008ca <__vector_4>:
     8ca:	1f 92       	push	r1
     8cc:	0f 92       	push	r0
     8ce:	0f b6       	in	r0, 0x3f	; 63
     8d0:	0f 92       	push	r0
     8d2:	11 24       	eor	r1, r1
     8d4:	0f 93       	push	r16
     8d6:	1f 93       	push	r17
     8d8:	2f 93       	push	r18
     8da:	3f 93       	push	r19
     8dc:	4f 93       	push	r20
     8de:	5f 93       	push	r21
     8e0:	6f 93       	push	r22
     8e2:	7f 93       	push	r23
     8e4:	8f 93       	push	r24
     8e6:	9f 93       	push	r25
     8e8:	af 93       	push	r26
     8ea:	bf 93       	push	r27
     8ec:	ef 93       	push	r30
     8ee:	ff 93       	push	r31
     8f0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     8f4:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     8f8:	ac 01       	movw	r20, r24
     8fa:	09 2e       	mov	r0, r25
     8fc:	00 0c       	add	r0, r0
     8fe:	66 0b       	sbc	r22, r22
     900:	77 0b       	sbc	r23, r23
     902:	9a 01       	movw	r18, r20
     904:	11 27       	eor	r17, r17
     906:	00 27       	eor	r16, r16
     908:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     90c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     910:	60 e0       	ldi	r22, 0x00	; 0
     912:	70 e0       	ldi	r23, 0x00	; 0
     914:	40 2b       	or	r20, r16
     916:	51 2b       	or	r21, r17
     918:	62 2b       	or	r22, r18
     91a:	73 2b       	or	r23, r19
     91c:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     920:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     924:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     928:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     92c:	b0 9b       	sbis	0x16, 0	; 22
     92e:	1a c0       	rjmp	.+52     	; 0x964 <__vector_4+0x9a>
     930:	01 96       	adiw	r24, 0x01	; 1
     932:	09 2e       	mov	r0, r25
     934:	00 0c       	add	r0, r0
     936:	aa 0b       	sbc	r26, r26
     938:	bb 0b       	sbc	r27, r27
     93a:	bc 01       	movw	r22, r24
     93c:	55 27       	eor	r21, r21
     93e:	44 27       	eor	r20, r20
     940:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     944:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     948:	a0 e0       	ldi	r26, 0x00	; 0
     94a:	b0 e0       	ldi	r27, 0x00	; 0
     94c:	84 2b       	or	r24, r20
     94e:	95 2b       	or	r25, r21
     950:	a6 2b       	or	r26, r22
     952:	b7 2b       	or	r27, r23
     954:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     958:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     95c:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     960:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     964:	e0 91 c2 01 	lds	r30, 0x01C2	; 0x8001c2 <mtable+0x6>
     968:	f0 91 c3 01 	lds	r31, 0x01C3	; 0x8001c3 <mtable+0x7>
     96c:	30 97       	sbiw	r30, 0x00	; 0
     96e:	39 f0       	breq	.+14     	; 0x97e <__vector_4+0xb4>
     970:	63 e0       	ldi	r22, 0x03	; 3
     972:	70 e0       	ldi	r23, 0x00	; 0
     974:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <otable+0x6>
     978:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <otable+0x7>
     97c:	09 95       	icall
     97e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     982:	ff 91       	pop	r31
     984:	ef 91       	pop	r30
     986:	bf 91       	pop	r27
     988:	af 91       	pop	r26
     98a:	9f 91       	pop	r25
     98c:	8f 91       	pop	r24
     98e:	7f 91       	pop	r23
     990:	6f 91       	pop	r22
     992:	5f 91       	pop	r21
     994:	4f 91       	pop	r20
     996:	3f 91       	pop	r19
     998:	2f 91       	pop	r18
     99a:	1f 91       	pop	r17
     99c:	0f 91       	pop	r16
     99e:	0f 90       	pop	r0
     9a0:	0f be       	out	0x3f, r0	; 63
     9a2:	0f 90       	pop	r0
     9a4:	1f 90       	pop	r1
     9a6:	18 95       	reti

000009a8 <__vector_5>:
     9a8:	1f 92       	push	r1
     9aa:	0f 92       	push	r0
     9ac:	0f b6       	in	r0, 0x3f	; 63
     9ae:	0f 92       	push	r0
     9b0:	11 24       	eor	r1, r1
     9b2:	0f 93       	push	r16
     9b4:	1f 93       	push	r17
     9b6:	2f 93       	push	r18
     9b8:	3f 93       	push	r19
     9ba:	4f 93       	push	r20
     9bc:	5f 93       	push	r21
     9be:	6f 93       	push	r22
     9c0:	7f 93       	push	r23
     9c2:	8f 93       	push	r24
     9c4:	9f 93       	push	r25
     9c6:	af 93       	push	r26
     9c8:	bf 93       	push	r27
     9ca:	ef 93       	push	r30
     9cc:	ff 93       	push	r31
     9ce:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     9d2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     9d6:	ac 01       	movw	r20, r24
     9d8:	09 2e       	mov	r0, r25
     9da:	00 0c       	add	r0, r0
     9dc:	66 0b       	sbc	r22, r22
     9de:	77 0b       	sbc	r23, r23
     9e0:	9a 01       	movw	r18, r20
     9e2:	11 27       	eor	r17, r17
     9e4:	00 27       	eor	r16, r16
     9e6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     9ea:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     9ee:	60 e0       	ldi	r22, 0x00	; 0
     9f0:	70 e0       	ldi	r23, 0x00	; 0
     9f2:	40 2b       	or	r20, r16
     9f4:	51 2b       	or	r21, r17
     9f6:	62 2b       	or	r22, r18
     9f8:	73 2b       	or	r23, r19
     9fa:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     9fe:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     a02:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     a06:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     a0a:	b0 9b       	sbis	0x16, 0	; 22
     a0c:	1a c0       	rjmp	.+52     	; 0xa42 <__vector_5+0x9a>
     a0e:	01 96       	adiw	r24, 0x01	; 1
     a10:	09 2e       	mov	r0, r25
     a12:	00 0c       	add	r0, r0
     a14:	aa 0b       	sbc	r26, r26
     a16:	bb 0b       	sbc	r27, r27
     a18:	bc 01       	movw	r22, r24
     a1a:	55 27       	eor	r21, r21
     a1c:	44 27       	eor	r20, r20
     a1e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     a22:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     a26:	a0 e0       	ldi	r26, 0x00	; 0
     a28:	b0 e0       	ldi	r27, 0x00	; 0
     a2a:	84 2b       	or	r24, r20
     a2c:	95 2b       	or	r25, r21
     a2e:	a6 2b       	or	r26, r22
     a30:	b7 2b       	or	r27, r23
     a32:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     a36:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     a3a:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     a3e:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     a42:	e0 91 c4 01 	lds	r30, 0x01C4	; 0x8001c4 <mtable+0x8>
     a46:	f0 91 c5 01 	lds	r31, 0x01C5	; 0x8001c5 <mtable+0x9>
     a4a:	30 97       	sbiw	r30, 0x00	; 0
     a4c:	39 f0       	breq	.+14     	; 0xa5c <__vector_5+0xb4>
     a4e:	64 e0       	ldi	r22, 0x04	; 4
     a50:	70 e0       	ldi	r23, 0x00	; 0
     a52:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <otable+0x8>
     a56:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <otable+0x9>
     a5a:	09 95       	icall
     a5c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     a60:	ff 91       	pop	r31
     a62:	ef 91       	pop	r30
     a64:	bf 91       	pop	r27
     a66:	af 91       	pop	r26
     a68:	9f 91       	pop	r25
     a6a:	8f 91       	pop	r24
     a6c:	7f 91       	pop	r23
     a6e:	6f 91       	pop	r22
     a70:	5f 91       	pop	r21
     a72:	4f 91       	pop	r20
     a74:	3f 91       	pop	r19
     a76:	2f 91       	pop	r18
     a78:	1f 91       	pop	r17
     a7a:	0f 91       	pop	r16
     a7c:	0f 90       	pop	r0
     a7e:	0f be       	out	0x3f, r0	; 63
     a80:	0f 90       	pop	r0
     a82:	1f 90       	pop	r1
     a84:	18 95       	reti

00000a86 <__vector_10>:
     a86:	1f 92       	push	r1
     a88:	0f 92       	push	r0
     a8a:	0f b6       	in	r0, 0x3f	; 63
     a8c:	0f 92       	push	r0
     a8e:	11 24       	eor	r1, r1
     a90:	0f 93       	push	r16
     a92:	1f 93       	push	r17
     a94:	2f 93       	push	r18
     a96:	3f 93       	push	r19
     a98:	4f 93       	push	r20
     a9a:	5f 93       	push	r21
     a9c:	6f 93       	push	r22
     a9e:	7f 93       	push	r23
     aa0:	8f 93       	push	r24
     aa2:	9f 93       	push	r25
     aa4:	af 93       	push	r26
     aa6:	bf 93       	push	r27
     aa8:	ef 93       	push	r30
     aaa:	ff 93       	push	r31
     aac:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     ab0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     ab4:	ac 01       	movw	r20, r24
     ab6:	09 2e       	mov	r0, r25
     ab8:	00 0c       	add	r0, r0
     aba:	66 0b       	sbc	r22, r22
     abc:	77 0b       	sbc	r23, r23
     abe:	9a 01       	movw	r18, r20
     ac0:	11 27       	eor	r17, r17
     ac2:	00 27       	eor	r16, r16
     ac4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ac8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     acc:	60 e0       	ldi	r22, 0x00	; 0
     ace:	70 e0       	ldi	r23, 0x00	; 0
     ad0:	40 2b       	or	r20, r16
     ad2:	51 2b       	or	r21, r17
     ad4:	62 2b       	or	r22, r18
     ad6:	73 2b       	or	r23, r19
     ad8:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     adc:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     ae0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     ae4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     ae8:	b0 9b       	sbis	0x16, 0	; 22
     aea:	1a c0       	rjmp	.+52     	; 0xb20 <__vector_10+0x9a>
     aec:	01 96       	adiw	r24, 0x01	; 1
     aee:	09 2e       	mov	r0, r25
     af0:	00 0c       	add	r0, r0
     af2:	aa 0b       	sbc	r26, r26
     af4:	bb 0b       	sbc	r27, r27
     af6:	bc 01       	movw	r22, r24
     af8:	55 27       	eor	r21, r21
     afa:	44 27       	eor	r20, r20
     afc:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     b00:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     b04:	a0 e0       	ldi	r26, 0x00	; 0
     b06:	b0 e0       	ldi	r27, 0x00	; 0
     b08:	84 2b       	or	r24, r20
     b0a:	95 2b       	or	r25, r21
     b0c:	a6 2b       	or	r26, r22
     b0e:	b7 2b       	or	r27, r23
     b10:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     b14:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     b18:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     b1c:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     b20:	e0 91 c6 01 	lds	r30, 0x01C6	; 0x8001c6 <mtable+0xa>
     b24:	f0 91 c7 01 	lds	r31, 0x01C7	; 0x8001c7 <mtable+0xb>
     b28:	30 97       	sbiw	r30, 0x00	; 0
     b2a:	39 f0       	breq	.+14     	; 0xb3a <__vector_10+0xb4>
     b2c:	65 e0       	ldi	r22, 0x05	; 5
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	80 91 2e 01 	lds	r24, 0x012E	; 0x80012e <otable+0xa>
     b34:	90 91 2f 01 	lds	r25, 0x012F	; 0x80012f <otable+0xb>
     b38:	09 95       	icall
     b3a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     b3e:	ff 91       	pop	r31
     b40:	ef 91       	pop	r30
     b42:	bf 91       	pop	r27
     b44:	af 91       	pop	r26
     b46:	9f 91       	pop	r25
     b48:	8f 91       	pop	r24
     b4a:	7f 91       	pop	r23
     b4c:	6f 91       	pop	r22
     b4e:	5f 91       	pop	r21
     b50:	4f 91       	pop	r20
     b52:	3f 91       	pop	r19
     b54:	2f 91       	pop	r18
     b56:	1f 91       	pop	r17
     b58:	0f 91       	pop	r16
     b5a:	0f 90       	pop	r0
     b5c:	0f be       	out	0x3f, r0	; 63
     b5e:	0f 90       	pop	r0
     b60:	1f 90       	pop	r1
     b62:	18 95       	reti

00000b64 <__vector_11>:
     b64:	1f 92       	push	r1
     b66:	0f 92       	push	r0
     b68:	0f b6       	in	r0, 0x3f	; 63
     b6a:	0f 92       	push	r0
     b6c:	11 24       	eor	r1, r1
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	2f 93       	push	r18
     b74:	3f 93       	push	r19
     b76:	4f 93       	push	r20
     b78:	5f 93       	push	r21
     b7a:	6f 93       	push	r22
     b7c:	7f 93       	push	r23
     b7e:	8f 93       	push	r24
     b80:	9f 93       	push	r25
     b82:	af 93       	push	r26
     b84:	bf 93       	push	r27
     b86:	ef 93       	push	r30
     b88:	ff 93       	push	r31
     b8a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     b8e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     b92:	ac 01       	movw	r20, r24
     b94:	09 2e       	mov	r0, r25
     b96:	00 0c       	add	r0, r0
     b98:	66 0b       	sbc	r22, r22
     b9a:	77 0b       	sbc	r23, r23
     b9c:	9a 01       	movw	r18, r20
     b9e:	11 27       	eor	r17, r17
     ba0:	00 27       	eor	r16, r16
     ba2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ba6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     baa:	60 e0       	ldi	r22, 0x00	; 0
     bac:	70 e0       	ldi	r23, 0x00	; 0
     bae:	40 2b       	or	r20, r16
     bb0:	51 2b       	or	r21, r17
     bb2:	62 2b       	or	r22, r18
     bb4:	73 2b       	or	r23, r19
     bb6:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     bba:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     bbe:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     bc2:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     bc6:	b0 9b       	sbis	0x16, 0	; 22
     bc8:	1a c0       	rjmp	.+52     	; 0xbfe <__vector_11+0x9a>
     bca:	01 96       	adiw	r24, 0x01	; 1
     bcc:	09 2e       	mov	r0, r25
     bce:	00 0c       	add	r0, r0
     bd0:	aa 0b       	sbc	r26, r26
     bd2:	bb 0b       	sbc	r27, r27
     bd4:	bc 01       	movw	r22, r24
     bd6:	55 27       	eor	r21, r21
     bd8:	44 27       	eor	r20, r20
     bda:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     bde:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     be2:	a0 e0       	ldi	r26, 0x00	; 0
     be4:	b0 e0       	ldi	r27, 0x00	; 0
     be6:	84 2b       	or	r24, r20
     be8:	95 2b       	or	r25, r21
     bea:	a6 2b       	or	r26, r22
     bec:	b7 2b       	or	r27, r23
     bee:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     bf2:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     bf6:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     bfa:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     bfe:	e0 91 c8 01 	lds	r30, 0x01C8	; 0x8001c8 <mtable+0xc>
     c02:	f0 91 c9 01 	lds	r31, 0x01C9	; 0x8001c9 <mtable+0xd>
     c06:	30 97       	sbiw	r30, 0x00	; 0
     c08:	39 f0       	breq	.+14     	; 0xc18 <__vector_11+0xb4>
     c0a:	66 e0       	ldi	r22, 0x06	; 6
     c0c:	70 e0       	ldi	r23, 0x00	; 0
     c0e:	80 91 30 01 	lds	r24, 0x0130	; 0x800130 <otable+0xc>
     c12:	90 91 31 01 	lds	r25, 0x0131	; 0x800131 <otable+0xd>
     c16:	09 95       	icall
     c18:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     c1c:	ff 91       	pop	r31
     c1e:	ef 91       	pop	r30
     c20:	bf 91       	pop	r27
     c22:	af 91       	pop	r26
     c24:	9f 91       	pop	r25
     c26:	8f 91       	pop	r24
     c28:	7f 91       	pop	r23
     c2a:	6f 91       	pop	r22
     c2c:	5f 91       	pop	r21
     c2e:	4f 91       	pop	r20
     c30:	3f 91       	pop	r19
     c32:	2f 91       	pop	r18
     c34:	1f 91       	pop	r17
     c36:	0f 91       	pop	r16
     c38:	0f 90       	pop	r0
     c3a:	0f be       	out	0x3f, r0	; 63
     c3c:	0f 90       	pop	r0
     c3e:	1f 90       	pop	r1
     c40:	18 95       	reti

00000c42 <__vector_12>:
     c42:	1f 92       	push	r1
     c44:	0f 92       	push	r0
     c46:	0f b6       	in	r0, 0x3f	; 63
     c48:	0f 92       	push	r0
     c4a:	11 24       	eor	r1, r1
     c4c:	0f 93       	push	r16
     c4e:	1f 93       	push	r17
     c50:	2f 93       	push	r18
     c52:	3f 93       	push	r19
     c54:	4f 93       	push	r20
     c56:	5f 93       	push	r21
     c58:	6f 93       	push	r22
     c5a:	7f 93       	push	r23
     c5c:	8f 93       	push	r24
     c5e:	9f 93       	push	r25
     c60:	af 93       	push	r26
     c62:	bf 93       	push	r27
     c64:	ef 93       	push	r30
     c66:	ff 93       	push	r31
     c68:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     c6c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     c70:	ac 01       	movw	r20, r24
     c72:	09 2e       	mov	r0, r25
     c74:	00 0c       	add	r0, r0
     c76:	66 0b       	sbc	r22, r22
     c78:	77 0b       	sbc	r23, r23
     c7a:	9a 01       	movw	r18, r20
     c7c:	11 27       	eor	r17, r17
     c7e:	00 27       	eor	r16, r16
     c80:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c84:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c88:	60 e0       	ldi	r22, 0x00	; 0
     c8a:	70 e0       	ldi	r23, 0x00	; 0
     c8c:	40 2b       	or	r20, r16
     c8e:	51 2b       	or	r21, r17
     c90:	62 2b       	or	r22, r18
     c92:	73 2b       	or	r23, r19
     c94:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     c98:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     c9c:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     ca0:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     ca4:	b0 9b       	sbis	0x16, 0	; 22
     ca6:	1a c0       	rjmp	.+52     	; 0xcdc <__vector_12+0x9a>
     ca8:	01 96       	adiw	r24, 0x01	; 1
     caa:	09 2e       	mov	r0, r25
     cac:	00 0c       	add	r0, r0
     cae:	aa 0b       	sbc	r26, r26
     cb0:	bb 0b       	sbc	r27, r27
     cb2:	bc 01       	movw	r22, r24
     cb4:	55 27       	eor	r21, r21
     cb6:	44 27       	eor	r20, r20
     cb8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     cbc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     cc0:	a0 e0       	ldi	r26, 0x00	; 0
     cc2:	b0 e0       	ldi	r27, 0x00	; 0
     cc4:	84 2b       	or	r24, r20
     cc6:	95 2b       	or	r25, r21
     cc8:	a6 2b       	or	r26, r22
     cca:	b7 2b       	or	r27, r23
     ccc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     cd0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     cd4:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     cd8:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     cdc:	e0 91 ca 01 	lds	r30, 0x01CA	; 0x8001ca <mtable+0xe>
     ce0:	f0 91 cb 01 	lds	r31, 0x01CB	; 0x8001cb <mtable+0xf>
     ce4:	30 97       	sbiw	r30, 0x00	; 0
     ce6:	39 f0       	breq	.+14     	; 0xcf6 <__vector_12+0xb4>
     ce8:	67 e0       	ldi	r22, 0x07	; 7
     cea:	70 e0       	ldi	r23, 0x00	; 0
     cec:	80 91 32 01 	lds	r24, 0x0132	; 0x800132 <otable+0xe>
     cf0:	90 91 33 01 	lds	r25, 0x0133	; 0x800133 <otable+0xf>
     cf4:	09 95       	icall
     cf6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     cfa:	ff 91       	pop	r31
     cfc:	ef 91       	pop	r30
     cfe:	bf 91       	pop	r27
     d00:	af 91       	pop	r26
     d02:	9f 91       	pop	r25
     d04:	8f 91       	pop	r24
     d06:	7f 91       	pop	r23
     d08:	6f 91       	pop	r22
     d0a:	5f 91       	pop	r21
     d0c:	4f 91       	pop	r20
     d0e:	3f 91       	pop	r19
     d10:	2f 91       	pop	r18
     d12:	1f 91       	pop	r17
     d14:	0f 91       	pop	r16
     d16:	0f 90       	pop	r0
     d18:	0f be       	out	0x3f, r0	; 63
     d1a:	0f 90       	pop	r0
     d1c:	1f 90       	pop	r1
     d1e:	18 95       	reti

00000d20 <__vector_13>:
     d20:	1f 92       	push	r1
     d22:	0f 92       	push	r0
     d24:	0f b6       	in	r0, 0x3f	; 63
     d26:	0f 92       	push	r0
     d28:	11 24       	eor	r1, r1
     d2a:	0f 93       	push	r16
     d2c:	1f 93       	push	r17
     d2e:	2f 93       	push	r18
     d30:	3f 93       	push	r19
     d32:	4f 93       	push	r20
     d34:	5f 93       	push	r21
     d36:	6f 93       	push	r22
     d38:	7f 93       	push	r23
     d3a:	8f 93       	push	r24
     d3c:	9f 93       	push	r25
     d3e:	af 93       	push	r26
     d40:	bf 93       	push	r27
     d42:	ef 93       	push	r30
     d44:	ff 93       	push	r31
     d46:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     d4a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     d4e:	ac 01       	movw	r20, r24
     d50:	09 2e       	mov	r0, r25
     d52:	00 0c       	add	r0, r0
     d54:	66 0b       	sbc	r22, r22
     d56:	77 0b       	sbc	r23, r23
     d58:	9a 01       	movw	r18, r20
     d5a:	11 27       	eor	r17, r17
     d5c:	00 27       	eor	r16, r16
     d5e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d62:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d66:	60 e0       	ldi	r22, 0x00	; 0
     d68:	70 e0       	ldi	r23, 0x00	; 0
     d6a:	40 2b       	or	r20, r16
     d6c:	51 2b       	or	r21, r17
     d6e:	62 2b       	or	r22, r18
     d70:	73 2b       	or	r23, r19
     d72:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     d76:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     d7a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     d7e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     d82:	b0 9b       	sbis	0x16, 0	; 22
     d84:	1a c0       	rjmp	.+52     	; 0xdba <__vector_13+0x9a>
     d86:	01 96       	adiw	r24, 0x01	; 1
     d88:	09 2e       	mov	r0, r25
     d8a:	00 0c       	add	r0, r0
     d8c:	aa 0b       	sbc	r26, r26
     d8e:	bb 0b       	sbc	r27, r27
     d90:	bc 01       	movw	r22, r24
     d92:	55 27       	eor	r21, r21
     d94:	44 27       	eor	r20, r20
     d96:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     d9a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     d9e:	a0 e0       	ldi	r26, 0x00	; 0
     da0:	b0 e0       	ldi	r27, 0x00	; 0
     da2:	84 2b       	or	r24, r20
     da4:	95 2b       	or	r25, r21
     da6:	a6 2b       	or	r26, r22
     da8:	b7 2b       	or	r27, r23
     daa:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     dae:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     db2:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     db6:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     dba:	e0 91 cc 01 	lds	r30, 0x01CC	; 0x8001cc <mtable+0x10>
     dbe:	f0 91 cd 01 	lds	r31, 0x01CD	; 0x8001cd <mtable+0x11>
     dc2:	30 97       	sbiw	r30, 0x00	; 0
     dc4:	39 f0       	breq	.+14     	; 0xdd4 <__vector_13+0xb4>
     dc6:	68 e0       	ldi	r22, 0x08	; 8
     dc8:	70 e0       	ldi	r23, 0x00	; 0
     dca:	80 91 34 01 	lds	r24, 0x0134	; 0x800134 <otable+0x10>
     dce:	90 91 35 01 	lds	r25, 0x0135	; 0x800135 <otable+0x11>
     dd2:	09 95       	icall
     dd4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     dd8:	ff 91       	pop	r31
     dda:	ef 91       	pop	r30
     ddc:	bf 91       	pop	r27
     dde:	af 91       	pop	r26
     de0:	9f 91       	pop	r25
     de2:	8f 91       	pop	r24
     de4:	7f 91       	pop	r23
     de6:	6f 91       	pop	r22
     de8:	5f 91       	pop	r21
     dea:	4f 91       	pop	r20
     dec:	3f 91       	pop	r19
     dee:	2f 91       	pop	r18
     df0:	1f 91       	pop	r17
     df2:	0f 91       	pop	r16
     df4:	0f 90       	pop	r0
     df6:	0f be       	out	0x3f, r0	; 63
     df8:	0f 90       	pop	r0
     dfa:	1f 90       	pop	r1
     dfc:	18 95       	reti

00000dfe <__vector_14>:
     dfe:	1f 92       	push	r1
     e00:	0f 92       	push	r0
     e02:	0f b6       	in	r0, 0x3f	; 63
     e04:	0f 92       	push	r0
     e06:	11 24       	eor	r1, r1
     e08:	0f 93       	push	r16
     e0a:	1f 93       	push	r17
     e0c:	2f 93       	push	r18
     e0e:	3f 93       	push	r19
     e10:	4f 93       	push	r20
     e12:	5f 93       	push	r21
     e14:	6f 93       	push	r22
     e16:	7f 93       	push	r23
     e18:	8f 93       	push	r24
     e1a:	9f 93       	push	r25
     e1c:	af 93       	push	r26
     e1e:	bf 93       	push	r27
     e20:	ef 93       	push	r30
     e22:	ff 93       	push	r31
     e24:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     e28:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     e2c:	ac 01       	movw	r20, r24
     e2e:	09 2e       	mov	r0, r25
     e30:	00 0c       	add	r0, r0
     e32:	66 0b       	sbc	r22, r22
     e34:	77 0b       	sbc	r23, r23
     e36:	9a 01       	movw	r18, r20
     e38:	11 27       	eor	r17, r17
     e3a:	00 27       	eor	r16, r16
     e3c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e40:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e44:	60 e0       	ldi	r22, 0x00	; 0
     e46:	70 e0       	ldi	r23, 0x00	; 0
     e48:	40 2b       	or	r20, r16
     e4a:	51 2b       	or	r21, r17
     e4c:	62 2b       	or	r22, r18
     e4e:	73 2b       	or	r23, r19
     e50:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     e54:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     e58:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     e5c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     e60:	b0 9b       	sbis	0x16, 0	; 22
     e62:	1a c0       	rjmp	.+52     	; 0xe98 <__vector_14+0x9a>
     e64:	01 96       	adiw	r24, 0x01	; 1
     e66:	09 2e       	mov	r0, r25
     e68:	00 0c       	add	r0, r0
     e6a:	aa 0b       	sbc	r26, r26
     e6c:	bb 0b       	sbc	r27, r27
     e6e:	bc 01       	movw	r22, r24
     e70:	55 27       	eor	r21, r21
     e72:	44 27       	eor	r20, r20
     e74:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     e78:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     e7c:	a0 e0       	ldi	r26, 0x00	; 0
     e7e:	b0 e0       	ldi	r27, 0x00	; 0
     e80:	84 2b       	or	r24, r20
     e82:	95 2b       	or	r25, r21
     e84:	a6 2b       	or	r26, r22
     e86:	b7 2b       	or	r27, r23
     e88:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     e8c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     e90:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     e94:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     e98:	e0 91 ce 01 	lds	r30, 0x01CE	; 0x8001ce <mtable+0x12>
     e9c:	f0 91 cf 01 	lds	r31, 0x01CF	; 0x8001cf <mtable+0x13>
     ea0:	30 97       	sbiw	r30, 0x00	; 0
     ea2:	39 f0       	breq	.+14     	; 0xeb2 <__vector_14+0xb4>
     ea4:	69 e0       	ldi	r22, 0x09	; 9
     ea6:	70 e0       	ldi	r23, 0x00	; 0
     ea8:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <otable+0x12>
     eac:	90 91 37 01 	lds	r25, 0x0137	; 0x800137 <otable+0x13>
     eb0:	09 95       	icall
     eb2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     eb6:	ff 91       	pop	r31
     eb8:	ef 91       	pop	r30
     eba:	bf 91       	pop	r27
     ebc:	af 91       	pop	r26
     ebe:	9f 91       	pop	r25
     ec0:	8f 91       	pop	r24
     ec2:	7f 91       	pop	r23
     ec4:	6f 91       	pop	r22
     ec6:	5f 91       	pop	r21
     ec8:	4f 91       	pop	r20
     eca:	3f 91       	pop	r19
     ecc:	2f 91       	pop	r18
     ece:	1f 91       	pop	r17
     ed0:	0f 91       	pop	r16
     ed2:	0f 90       	pop	r0
     ed4:	0f be       	out	0x3f, r0	; 63
     ed6:	0f 90       	pop	r0
     ed8:	1f 90       	pop	r1
     eda:	18 95       	reti

00000edc <__vector_15>:
     edc:	1f 92       	push	r1
     ede:	0f 92       	push	r0
     ee0:	0f b6       	in	r0, 0x3f	; 63
     ee2:	0f 92       	push	r0
     ee4:	11 24       	eor	r1, r1
     ee6:	0f 93       	push	r16
     ee8:	1f 93       	push	r17
     eea:	2f 93       	push	r18
     eec:	3f 93       	push	r19
     eee:	4f 93       	push	r20
     ef0:	5f 93       	push	r21
     ef2:	6f 93       	push	r22
     ef4:	7f 93       	push	r23
     ef6:	8f 93       	push	r24
     ef8:	9f 93       	push	r25
     efa:	af 93       	push	r26
     efc:	bf 93       	push	r27
     efe:	ef 93       	push	r30
     f00:	ff 93       	push	r31
     f02:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     f06:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     f0a:	ac 01       	movw	r20, r24
     f0c:	09 2e       	mov	r0, r25
     f0e:	00 0c       	add	r0, r0
     f10:	66 0b       	sbc	r22, r22
     f12:	77 0b       	sbc	r23, r23
     f14:	9a 01       	movw	r18, r20
     f16:	11 27       	eor	r17, r17
     f18:	00 27       	eor	r16, r16
     f1a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f1e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	40 2b       	or	r20, r16
     f28:	51 2b       	or	r21, r17
     f2a:	62 2b       	or	r22, r18
     f2c:	73 2b       	or	r23, r19
     f2e:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
     f32:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
     f36:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
     f3a:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
     f3e:	b0 9b       	sbis	0x16, 0	; 22
     f40:	1a c0       	rjmp	.+52     	; 0xf76 <__vector_15+0x9a>
     f42:	01 96       	adiw	r24, 0x01	; 1
     f44:	09 2e       	mov	r0, r25
     f46:	00 0c       	add	r0, r0
     f48:	aa 0b       	sbc	r26, r26
     f4a:	bb 0b       	sbc	r27, r27
     f4c:	bc 01       	movw	r22, r24
     f4e:	55 27       	eor	r21, r21
     f50:	44 27       	eor	r20, r20
     f52:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f56:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f5a:	a0 e0       	ldi	r26, 0x00	; 0
     f5c:	b0 e0       	ldi	r27, 0x00	; 0
     f5e:	84 2b       	or	r24, r20
     f60:	95 2b       	or	r25, r21
     f62:	a6 2b       	or	r26, r22
     f64:	b7 2b       	or	r27, r23
     f66:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
     f6a:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
     f6e:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
     f72:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
     f76:	e0 91 d0 01 	lds	r30, 0x01D0	; 0x8001d0 <mtable+0x14>
     f7a:	f0 91 d1 01 	lds	r31, 0x01D1	; 0x8001d1 <mtable+0x15>
     f7e:	30 97       	sbiw	r30, 0x00	; 0
     f80:	39 f0       	breq	.+14     	; 0xf90 <__vector_15+0xb4>
     f82:	6a e0       	ldi	r22, 0x0A	; 10
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <otable+0x14>
     f8a:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <otable+0x15>
     f8e:	09 95       	icall
     f90:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
     f94:	ff 91       	pop	r31
     f96:	ef 91       	pop	r30
     f98:	bf 91       	pop	r27
     f9a:	af 91       	pop	r26
     f9c:	9f 91       	pop	r25
     f9e:	8f 91       	pop	r24
     fa0:	7f 91       	pop	r23
     fa2:	6f 91       	pop	r22
     fa4:	5f 91       	pop	r21
     fa6:	4f 91       	pop	r20
     fa8:	3f 91       	pop	r19
     faa:	2f 91       	pop	r18
     fac:	1f 91       	pop	r17
     fae:	0f 91       	pop	r16
     fb0:	0f 90       	pop	r0
     fb2:	0f be       	out	0x3f, r0	; 63
     fb4:	0f 90       	pop	r0
     fb6:	1f 90       	pop	r1
     fb8:	18 95       	reti

00000fba <__vector_16>:
     fba:	1f 92       	push	r1
     fbc:	0f 92       	push	r0
     fbe:	0f b6       	in	r0, 0x3f	; 63
     fc0:	0f 92       	push	r0
     fc2:	11 24       	eor	r1, r1
     fc4:	0f 93       	push	r16
     fc6:	1f 93       	push	r17
     fc8:	2f 93       	push	r18
     fca:	3f 93       	push	r19
     fcc:	4f 93       	push	r20
     fce:	5f 93       	push	r21
     fd0:	6f 93       	push	r22
     fd2:	7f 93       	push	r23
     fd4:	8f 93       	push	r24
     fd6:	9f 93       	push	r25
     fd8:	af 93       	push	r26
     fda:	bf 93       	push	r27
     fdc:	ef 93       	push	r30
     fde:	ff 93       	push	r31
     fe0:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
     fe4:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
     fe8:	ac 01       	movw	r20, r24
     fea:	09 2e       	mov	r0, r25
     fec:	00 0c       	add	r0, r0
     fee:	66 0b       	sbc	r22, r22
     ff0:	77 0b       	sbc	r23, r23
     ff2:	9a 01       	movw	r18, r20
     ff4:	11 27       	eor	r17, r17
     ff6:	00 27       	eor	r16, r16
     ff8:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ffc:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1000:	60 e0       	ldi	r22, 0x00	; 0
    1002:	70 e0       	ldi	r23, 0x00	; 0
    1004:	40 2b       	or	r20, r16
    1006:	51 2b       	or	r21, r17
    1008:	62 2b       	or	r22, r18
    100a:	73 2b       	or	r23, r19
    100c:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1010:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    1014:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    1018:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    101c:	b0 9b       	sbis	0x16, 0	; 22
    101e:	1a c0       	rjmp	.+52     	; 0x1054 <__vector_16+0x9a>
    1020:	01 96       	adiw	r24, 0x01	; 1
    1022:	09 2e       	mov	r0, r25
    1024:	00 0c       	add	r0, r0
    1026:	aa 0b       	sbc	r26, r26
    1028:	bb 0b       	sbc	r27, r27
    102a:	bc 01       	movw	r22, r24
    102c:	55 27       	eor	r21, r21
    102e:	44 27       	eor	r20, r20
    1030:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1034:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1038:	a0 e0       	ldi	r26, 0x00	; 0
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	84 2b       	or	r24, r20
    103e:	95 2b       	or	r25, r21
    1040:	a6 2b       	or	r26, r22
    1042:	b7 2b       	or	r27, r23
    1044:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1048:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    104c:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    1050:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1054:	e0 91 d2 01 	lds	r30, 0x01D2	; 0x8001d2 <mtable+0x16>
    1058:	f0 91 d3 01 	lds	r31, 0x01D3	; 0x8001d3 <mtable+0x17>
    105c:	30 97       	sbiw	r30, 0x00	; 0
    105e:	39 f0       	breq	.+14     	; 0x106e <__vector_16+0xb4>
    1060:	6b e0       	ldi	r22, 0x0B	; 11
    1062:	70 e0       	ldi	r23, 0x00	; 0
    1064:	80 91 3a 01 	lds	r24, 0x013A	; 0x80013a <otable+0x16>
    1068:	90 91 3b 01 	lds	r25, 0x013B	; 0x80013b <otable+0x17>
    106c:	09 95       	icall
    106e:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    1072:	ff 91       	pop	r31
    1074:	ef 91       	pop	r30
    1076:	bf 91       	pop	r27
    1078:	af 91       	pop	r26
    107a:	9f 91       	pop	r25
    107c:	8f 91       	pop	r24
    107e:	7f 91       	pop	r23
    1080:	6f 91       	pop	r22
    1082:	5f 91       	pop	r21
    1084:	4f 91       	pop	r20
    1086:	3f 91       	pop	r19
    1088:	2f 91       	pop	r18
    108a:	1f 91       	pop	r17
    108c:	0f 91       	pop	r16
    108e:	0f 90       	pop	r0
    1090:	0f be       	out	0x3f, r0	; 63
    1092:	0f 90       	pop	r0
    1094:	1f 90       	pop	r1
    1096:	18 95       	reti

00001098 <__vector_17>:
    1098:	1f 92       	push	r1
    109a:	0f 92       	push	r0
    109c:	0f b6       	in	r0, 0x3f	; 63
    109e:	0f 92       	push	r0
    10a0:	11 24       	eor	r1, r1
    10a2:	0f 93       	push	r16
    10a4:	1f 93       	push	r17
    10a6:	2f 93       	push	r18
    10a8:	3f 93       	push	r19
    10aa:	4f 93       	push	r20
    10ac:	5f 93       	push	r21
    10ae:	6f 93       	push	r22
    10b0:	7f 93       	push	r23
    10b2:	8f 93       	push	r24
    10b4:	9f 93       	push	r25
    10b6:	af 93       	push	r26
    10b8:	bf 93       	push	r27
    10ba:	ef 93       	push	r30
    10bc:	ff 93       	push	r31
    10be:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    10c2:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    10c6:	ac 01       	movw	r20, r24
    10c8:	09 2e       	mov	r0, r25
    10ca:	00 0c       	add	r0, r0
    10cc:	66 0b       	sbc	r22, r22
    10ce:	77 0b       	sbc	r23, r23
    10d0:	9a 01       	movw	r18, r20
    10d2:	11 27       	eor	r17, r17
    10d4:	00 27       	eor	r16, r16
    10d6:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    10da:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    10de:	60 e0       	ldi	r22, 0x00	; 0
    10e0:	70 e0       	ldi	r23, 0x00	; 0
    10e2:	40 2b       	or	r20, r16
    10e4:	51 2b       	or	r21, r17
    10e6:	62 2b       	or	r22, r18
    10e8:	73 2b       	or	r23, r19
    10ea:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    10ee:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    10f2:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    10f6:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    10fa:	b0 9b       	sbis	0x16, 0	; 22
    10fc:	1a c0       	rjmp	.+52     	; 0x1132 <__vector_17+0x9a>
    10fe:	01 96       	adiw	r24, 0x01	; 1
    1100:	09 2e       	mov	r0, r25
    1102:	00 0c       	add	r0, r0
    1104:	aa 0b       	sbc	r26, r26
    1106:	bb 0b       	sbc	r27, r27
    1108:	bc 01       	movw	r22, r24
    110a:	55 27       	eor	r21, r21
    110c:	44 27       	eor	r20, r20
    110e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1112:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1116:	a0 e0       	ldi	r26, 0x00	; 0
    1118:	b0 e0       	ldi	r27, 0x00	; 0
    111a:	84 2b       	or	r24, r20
    111c:	95 2b       	or	r25, r21
    111e:	a6 2b       	or	r26, r22
    1120:	b7 2b       	or	r27, r23
    1122:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1126:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    112a:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    112e:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1132:	e0 91 d4 01 	lds	r30, 0x01D4	; 0x8001d4 <mtable+0x18>
    1136:	f0 91 d5 01 	lds	r31, 0x01D5	; 0x8001d5 <mtable+0x19>
    113a:	30 97       	sbiw	r30, 0x00	; 0
    113c:	39 f0       	breq	.+14     	; 0x114c <__vector_17+0xb4>
    113e:	6c e0       	ldi	r22, 0x0C	; 12
    1140:	70 e0       	ldi	r23, 0x00	; 0
    1142:	80 91 3c 01 	lds	r24, 0x013C	; 0x80013c <otable+0x18>
    1146:	90 91 3d 01 	lds	r25, 0x013D	; 0x80013d <otable+0x19>
    114a:	09 95       	icall
    114c:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    1150:	ff 91       	pop	r31
    1152:	ef 91       	pop	r30
    1154:	bf 91       	pop	r27
    1156:	af 91       	pop	r26
    1158:	9f 91       	pop	r25
    115a:	8f 91       	pop	r24
    115c:	7f 91       	pop	r23
    115e:	6f 91       	pop	r22
    1160:	5f 91       	pop	r21
    1162:	4f 91       	pop	r20
    1164:	3f 91       	pop	r19
    1166:	2f 91       	pop	r18
    1168:	1f 91       	pop	r17
    116a:	0f 91       	pop	r16
    116c:	0f 90       	pop	r0
    116e:	0f be       	out	0x3f, r0	; 63
    1170:	0f 90       	pop	r0
    1172:	1f 90       	pop	r1
    1174:	18 95       	reti

00001176 <__vector_18>:
    1176:	1f 92       	push	r1
    1178:	0f 92       	push	r0
    117a:	0f b6       	in	r0, 0x3f	; 63
    117c:	0f 92       	push	r0
    117e:	11 24       	eor	r1, r1
    1180:	0f 93       	push	r16
    1182:	1f 93       	push	r17
    1184:	2f 93       	push	r18
    1186:	3f 93       	push	r19
    1188:	4f 93       	push	r20
    118a:	5f 93       	push	r21
    118c:	6f 93       	push	r22
    118e:	7f 93       	push	r23
    1190:	8f 93       	push	r24
    1192:	9f 93       	push	r25
    1194:	af 93       	push	r26
    1196:	bf 93       	push	r27
    1198:	ef 93       	push	r30
    119a:	ff 93       	push	r31
    119c:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    11a0:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    11a4:	ac 01       	movw	r20, r24
    11a6:	09 2e       	mov	r0, r25
    11a8:	00 0c       	add	r0, r0
    11aa:	66 0b       	sbc	r22, r22
    11ac:	77 0b       	sbc	r23, r23
    11ae:	9a 01       	movw	r18, r20
    11b0:	11 27       	eor	r17, r17
    11b2:	00 27       	eor	r16, r16
    11b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11bc:	60 e0       	ldi	r22, 0x00	; 0
    11be:	70 e0       	ldi	r23, 0x00	; 0
    11c0:	40 2b       	or	r20, r16
    11c2:	51 2b       	or	r21, r17
    11c4:	62 2b       	or	r22, r18
    11c6:	73 2b       	or	r23, r19
    11c8:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    11cc:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    11d0:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    11d4:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    11d8:	b0 9b       	sbis	0x16, 0	; 22
    11da:	1a c0       	rjmp	.+52     	; 0x1210 <__vector_18+0x9a>
    11dc:	01 96       	adiw	r24, 0x01	; 1
    11de:	09 2e       	mov	r0, r25
    11e0:	00 0c       	add	r0, r0
    11e2:	aa 0b       	sbc	r26, r26
    11e4:	bb 0b       	sbc	r27, r27
    11e6:	bc 01       	movw	r22, r24
    11e8:	55 27       	eor	r21, r21
    11ea:	44 27       	eor	r20, r20
    11ec:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    11f0:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    11f4:	a0 e0       	ldi	r26, 0x00	; 0
    11f6:	b0 e0       	ldi	r27, 0x00	; 0
    11f8:	84 2b       	or	r24, r20
    11fa:	95 2b       	or	r25, r21
    11fc:	a6 2b       	or	r26, r22
    11fe:	b7 2b       	or	r27, r23
    1200:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    1204:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    1208:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    120c:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1210:	e0 91 d6 01 	lds	r30, 0x01D6	; 0x8001d6 <mtable+0x1a>
    1214:	f0 91 d7 01 	lds	r31, 0x01D7	; 0x8001d7 <mtable+0x1b>
    1218:	30 97       	sbiw	r30, 0x00	; 0
    121a:	39 f0       	breq	.+14     	; 0x122a <__vector_18+0xb4>
    121c:	6d e0       	ldi	r22, 0x0D	; 13
    121e:	70 e0       	ldi	r23, 0x00	; 0
    1220:	80 91 3e 01 	lds	r24, 0x013E	; 0x80013e <otable+0x1a>
    1224:	90 91 3f 01 	lds	r25, 0x013F	; 0x80013f <otable+0x1b>
    1228:	09 95       	icall
    122a:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    122e:	ff 91       	pop	r31
    1230:	ef 91       	pop	r30
    1232:	bf 91       	pop	r27
    1234:	af 91       	pop	r26
    1236:	9f 91       	pop	r25
    1238:	8f 91       	pop	r24
    123a:	7f 91       	pop	r23
    123c:	6f 91       	pop	r22
    123e:	5f 91       	pop	r21
    1240:	4f 91       	pop	r20
    1242:	3f 91       	pop	r19
    1244:	2f 91       	pop	r18
    1246:	1f 91       	pop	r17
    1248:	0f 91       	pop	r16
    124a:	0f 90       	pop	r0
    124c:	0f be       	out	0x3f, r0	; 63
    124e:	0f 90       	pop	r0
    1250:	1f 90       	pop	r1
    1252:	18 95       	reti

00001254 <__vector_19>:
    1254:	1f 92       	push	r1
    1256:	0f 92       	push	r0
    1258:	0f b6       	in	r0, 0x3f	; 63
    125a:	0f 92       	push	r0
    125c:	11 24       	eor	r1, r1
    125e:	0f 93       	push	r16
    1260:	1f 93       	push	r17
    1262:	2f 93       	push	r18
    1264:	3f 93       	push	r19
    1266:	4f 93       	push	r20
    1268:	5f 93       	push	r21
    126a:	6f 93       	push	r22
    126c:	7f 93       	push	r23
    126e:	8f 93       	push	r24
    1270:	9f 93       	push	r25
    1272:	af 93       	push	r26
    1274:	bf 93       	push	r27
    1276:	ef 93       	push	r30
    1278:	ff 93       	push	r31
    127a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    127e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    1282:	ac 01       	movw	r20, r24
    1284:	09 2e       	mov	r0, r25
    1286:	00 0c       	add	r0, r0
    1288:	66 0b       	sbc	r22, r22
    128a:	77 0b       	sbc	r23, r23
    128c:	9a 01       	movw	r18, r20
    128e:	11 27       	eor	r17, r17
    1290:	00 27       	eor	r16, r16
    1292:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1296:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    129a:	60 e0       	ldi	r22, 0x00	; 0
    129c:	70 e0       	ldi	r23, 0x00	; 0
    129e:	40 2b       	or	r20, r16
    12a0:	51 2b       	or	r21, r17
    12a2:	62 2b       	or	r22, r18
    12a4:	73 2b       	or	r23, r19
    12a6:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    12aa:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    12ae:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    12b2:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    12b6:	b0 9b       	sbis	0x16, 0	; 22
    12b8:	1a c0       	rjmp	.+52     	; 0x12ee <__vector_19+0x9a>
    12ba:	01 96       	adiw	r24, 0x01	; 1
    12bc:	09 2e       	mov	r0, r25
    12be:	00 0c       	add	r0, r0
    12c0:	aa 0b       	sbc	r26, r26
    12c2:	bb 0b       	sbc	r27, r27
    12c4:	bc 01       	movw	r22, r24
    12c6:	55 27       	eor	r21, r21
    12c8:	44 27       	eor	r20, r20
    12ca:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12ce:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12d2:	a0 e0       	ldi	r26, 0x00	; 0
    12d4:	b0 e0       	ldi	r27, 0x00	; 0
    12d6:	84 2b       	or	r24, r20
    12d8:	95 2b       	or	r25, r21
    12da:	a6 2b       	or	r26, r22
    12dc:	b7 2b       	or	r27, r23
    12de:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    12e2:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    12e6:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    12ea:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    12ee:	e0 91 d8 01 	lds	r30, 0x01D8	; 0x8001d8 <mtable+0x1c>
    12f2:	f0 91 d9 01 	lds	r31, 0x01D9	; 0x8001d9 <mtable+0x1d>
    12f6:	30 97       	sbiw	r30, 0x00	; 0
    12f8:	39 f0       	breq	.+14     	; 0x1308 <__vector_19+0xb4>
    12fa:	6e e0       	ldi	r22, 0x0E	; 14
    12fc:	70 e0       	ldi	r23, 0x00	; 0
    12fe:	80 91 40 01 	lds	r24, 0x0140	; 0x800140 <otable+0x1c>
    1302:	90 91 41 01 	lds	r25, 0x0141	; 0x800141 <otable+0x1d>
    1306:	09 95       	icall
    1308:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    130c:	ff 91       	pop	r31
    130e:	ef 91       	pop	r30
    1310:	bf 91       	pop	r27
    1312:	af 91       	pop	r26
    1314:	9f 91       	pop	r25
    1316:	8f 91       	pop	r24
    1318:	7f 91       	pop	r23
    131a:	6f 91       	pop	r22
    131c:	5f 91       	pop	r21
    131e:	4f 91       	pop	r20
    1320:	3f 91       	pop	r19
    1322:	2f 91       	pop	r18
    1324:	1f 91       	pop	r17
    1326:	0f 91       	pop	r16
    1328:	0f 90       	pop	r0
    132a:	0f be       	out	0x3f, r0	; 63
    132c:	0f 90       	pop	r0
    132e:	1f 90       	pop	r1
    1330:	18 95       	reti

00001332 <__vector_20>:
    1332:	1f 92       	push	r1
    1334:	0f 92       	push	r0
    1336:	0f b6       	in	r0, 0x3f	; 63
    1338:	0f 92       	push	r0
    133a:	11 24       	eor	r1, r1
    133c:	0f 93       	push	r16
    133e:	1f 93       	push	r17
    1340:	2f 93       	push	r18
    1342:	3f 93       	push	r19
    1344:	4f 93       	push	r20
    1346:	5f 93       	push	r21
    1348:	6f 93       	push	r22
    134a:	7f 93       	push	r23
    134c:	8f 93       	push	r24
    134e:	9f 93       	push	r25
    1350:	af 93       	push	r26
    1352:	bf 93       	push	r27
    1354:	ef 93       	push	r30
    1356:	ff 93       	push	r31
    1358:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    135c:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    1360:	ac 01       	movw	r20, r24
    1362:	09 2e       	mov	r0, r25
    1364:	00 0c       	add	r0, r0
    1366:	66 0b       	sbc	r22, r22
    1368:	77 0b       	sbc	r23, r23
    136a:	9a 01       	movw	r18, r20
    136c:	11 27       	eor	r17, r17
    136e:	00 27       	eor	r16, r16
    1370:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1374:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1378:	60 e0       	ldi	r22, 0x00	; 0
    137a:	70 e0       	ldi	r23, 0x00	; 0
    137c:	40 2b       	or	r20, r16
    137e:	51 2b       	or	r21, r17
    1380:	62 2b       	or	r22, r18
    1382:	73 2b       	or	r23, r19
    1384:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1388:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    138c:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    1390:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    1394:	b0 9b       	sbis	0x16, 0	; 22
    1396:	1a c0       	rjmp	.+52     	; 0x13cc <__vector_20+0x9a>
    1398:	01 96       	adiw	r24, 0x01	; 1
    139a:	09 2e       	mov	r0, r25
    139c:	00 0c       	add	r0, r0
    139e:	aa 0b       	sbc	r26, r26
    13a0:	bb 0b       	sbc	r27, r27
    13a2:	bc 01       	movw	r22, r24
    13a4:	55 27       	eor	r21, r21
    13a6:	44 27       	eor	r20, r20
    13a8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13ac:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13b0:	a0 e0       	ldi	r26, 0x00	; 0
    13b2:	b0 e0       	ldi	r27, 0x00	; 0
    13b4:	84 2b       	or	r24, r20
    13b6:	95 2b       	or	r25, r21
    13b8:	a6 2b       	or	r26, r22
    13ba:	b7 2b       	or	r27, r23
    13bc:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    13c0:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    13c4:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    13c8:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    13cc:	e0 91 da 01 	lds	r30, 0x01DA	; 0x8001da <mtable+0x1e>
    13d0:	f0 91 db 01 	lds	r31, 0x01DB	; 0x8001db <mtable+0x1f>
    13d4:	30 97       	sbiw	r30, 0x00	; 0
    13d6:	39 f0       	breq	.+14     	; 0x13e6 <__vector_20+0xb4>
    13d8:	6f e0       	ldi	r22, 0x0F	; 15
    13da:	70 e0       	ldi	r23, 0x00	; 0
    13dc:	80 91 42 01 	lds	r24, 0x0142	; 0x800142 <otable+0x1e>
    13e0:	90 91 43 01 	lds	r25, 0x0143	; 0x800143 <otable+0x1f>
    13e4:	09 95       	icall
    13e6:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    13ea:	ff 91       	pop	r31
    13ec:	ef 91       	pop	r30
    13ee:	bf 91       	pop	r27
    13f0:	af 91       	pop	r26
    13f2:	9f 91       	pop	r25
    13f4:	8f 91       	pop	r24
    13f6:	7f 91       	pop	r23
    13f8:	6f 91       	pop	r22
    13fa:	5f 91       	pop	r21
    13fc:	4f 91       	pop	r20
    13fe:	3f 91       	pop	r19
    1400:	2f 91       	pop	r18
    1402:	1f 91       	pop	r17
    1404:	0f 91       	pop	r16
    1406:	0f 90       	pop	r0
    1408:	0f be       	out	0x3f, r0	; 63
    140a:	0f 90       	pop	r0
    140c:	1f 90       	pop	r1
    140e:	18 95       	reti

00001410 <__vector_21>:
    1410:	1f 92       	push	r1
    1412:	0f 92       	push	r0
    1414:	0f b6       	in	r0, 0x3f	; 63
    1416:	0f 92       	push	r0
    1418:	11 24       	eor	r1, r1
    141a:	0f 93       	push	r16
    141c:	1f 93       	push	r17
    141e:	2f 93       	push	r18
    1420:	3f 93       	push	r19
    1422:	4f 93       	push	r20
    1424:	5f 93       	push	r21
    1426:	6f 93       	push	r22
    1428:	7f 93       	push	r23
    142a:	8f 93       	push	r24
    142c:	9f 93       	push	r25
    142e:	af 93       	push	r26
    1430:	bf 93       	push	r27
    1432:	ef 93       	push	r30
    1434:	ff 93       	push	r31
    1436:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    143a:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    143e:	ac 01       	movw	r20, r24
    1440:	09 2e       	mov	r0, r25
    1442:	00 0c       	add	r0, r0
    1444:	66 0b       	sbc	r22, r22
    1446:	77 0b       	sbc	r23, r23
    1448:	9a 01       	movw	r18, r20
    144a:	11 27       	eor	r17, r17
    144c:	00 27       	eor	r16, r16
    144e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1452:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1456:	60 e0       	ldi	r22, 0x00	; 0
    1458:	70 e0       	ldi	r23, 0x00	; 0
    145a:	40 2b       	or	r20, r16
    145c:	51 2b       	or	r21, r17
    145e:	62 2b       	or	r22, r18
    1460:	73 2b       	or	r23, r19
    1462:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1466:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    146a:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    146e:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    1472:	b0 9b       	sbis	0x16, 0	; 22
    1474:	1a c0       	rjmp	.+52     	; 0x14aa <__vector_21+0x9a>
    1476:	01 96       	adiw	r24, 0x01	; 1
    1478:	09 2e       	mov	r0, r25
    147a:	00 0c       	add	r0, r0
    147c:	aa 0b       	sbc	r26, r26
    147e:	bb 0b       	sbc	r27, r27
    1480:	bc 01       	movw	r22, r24
    1482:	55 27       	eor	r21, r21
    1484:	44 27       	eor	r20, r20
    1486:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    148a:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    148e:	a0 e0       	ldi	r26, 0x00	; 0
    1490:	b0 e0       	ldi	r27, 0x00	; 0
    1492:	84 2b       	or	r24, r20
    1494:	95 2b       	or	r25, r21
    1496:	a6 2b       	or	r26, r22
    1498:	b7 2b       	or	r27, r23
    149a:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    149e:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    14a2:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    14a6:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    14aa:	e0 91 dc 01 	lds	r30, 0x01DC	; 0x8001dc <mtable+0x20>
    14ae:	f0 91 dd 01 	lds	r31, 0x01DD	; 0x8001dd <mtable+0x21>
    14b2:	30 97       	sbiw	r30, 0x00	; 0
    14b4:	39 f0       	breq	.+14     	; 0x14c4 <__vector_21+0xb4>
    14b6:	60 e1       	ldi	r22, 0x10	; 16
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	80 91 44 01 	lds	r24, 0x0144	; 0x800144 <otable+0x20>
    14be:	90 91 45 01 	lds	r25, 0x0145	; 0x800145 <otable+0x21>
    14c2:	09 95       	icall
    14c4:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    14c8:	ff 91       	pop	r31
    14ca:	ef 91       	pop	r30
    14cc:	bf 91       	pop	r27
    14ce:	af 91       	pop	r26
    14d0:	9f 91       	pop	r25
    14d2:	8f 91       	pop	r24
    14d4:	7f 91       	pop	r23
    14d6:	6f 91       	pop	r22
    14d8:	5f 91       	pop	r21
    14da:	4f 91       	pop	r20
    14dc:	3f 91       	pop	r19
    14de:	2f 91       	pop	r18
    14e0:	1f 91       	pop	r17
    14e2:	0f 91       	pop	r16
    14e4:	0f 90       	pop	r0
    14e6:	0f be       	out	0x3f, r0	; 63
    14e8:	0f 90       	pop	r0
    14ea:	1f 90       	pop	r1
    14ec:	18 95       	reti

000014ee <__vector_22>:
    14ee:	1f 92       	push	r1
    14f0:	0f 92       	push	r0
    14f2:	0f b6       	in	r0, 0x3f	; 63
    14f4:	0f 92       	push	r0
    14f6:	11 24       	eor	r1, r1
    14f8:	0f 93       	push	r16
    14fa:	1f 93       	push	r17
    14fc:	2f 93       	push	r18
    14fe:	3f 93       	push	r19
    1500:	4f 93       	push	r20
    1502:	5f 93       	push	r21
    1504:	6f 93       	push	r22
    1506:	7f 93       	push	r23
    1508:	8f 93       	push	r24
    150a:	9f 93       	push	r25
    150c:	af 93       	push	r26
    150e:	bf 93       	push	r27
    1510:	ef 93       	push	r30
    1512:	ff 93       	push	r31
    1514:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    1518:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    151c:	ac 01       	movw	r20, r24
    151e:	09 2e       	mov	r0, r25
    1520:	00 0c       	add	r0, r0
    1522:	66 0b       	sbc	r22, r22
    1524:	77 0b       	sbc	r23, r23
    1526:	9a 01       	movw	r18, r20
    1528:	11 27       	eor	r17, r17
    152a:	00 27       	eor	r16, r16
    152c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1530:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1534:	60 e0       	ldi	r22, 0x00	; 0
    1536:	70 e0       	ldi	r23, 0x00	; 0
    1538:	40 2b       	or	r20, r16
    153a:	51 2b       	or	r21, r17
    153c:	62 2b       	or	r22, r18
    153e:	73 2b       	or	r23, r19
    1540:	40 93 1c 01 	sts	0x011C, r20	; 0x80011c <timestamp>
    1544:	50 93 1d 01 	sts	0x011D, r21	; 0x80011d <timestamp+0x1>
    1548:	60 93 1e 01 	sts	0x011E, r22	; 0x80011e <timestamp+0x2>
    154c:	70 93 1f 01 	sts	0x011F, r23	; 0x80011f <timestamp+0x3>
    1550:	b0 9b       	sbis	0x16, 0	; 22
    1552:	1a c0       	rjmp	.+52     	; 0x1588 <__vector_22+0x9a>
    1554:	01 96       	adiw	r24, 0x01	; 1
    1556:	09 2e       	mov	r0, r25
    1558:	00 0c       	add	r0, r0
    155a:	aa 0b       	sbc	r26, r26
    155c:	bb 0b       	sbc	r27, r27
    155e:	bc 01       	movw	r22, r24
    1560:	55 27       	eor	r21, r21
    1562:	44 27       	eor	r20, r20
    1564:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1568:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    156c:	a0 e0       	ldi	r26, 0x00	; 0
    156e:	b0 e0       	ldi	r27, 0x00	; 0
    1570:	84 2b       	or	r24, r20
    1572:	95 2b       	or	r25, r21
    1574:	a6 2b       	or	r26, r22
    1576:	b7 2b       	or	r27, r23
    1578:	80 93 1c 01 	sts	0x011C, r24	; 0x80011c <timestamp>
    157c:	90 93 1d 01 	sts	0x011D, r25	; 0x80011d <timestamp+0x1>
    1580:	a0 93 1e 01 	sts	0x011E, r26	; 0x80011e <timestamp+0x2>
    1584:	b0 93 1f 01 	sts	0x011F, r27	; 0x80011f <timestamp+0x3>
    1588:	e0 91 de 01 	lds	r30, 0x01DE	; 0x8001de <mtable+0x22>
    158c:	f0 91 df 01 	lds	r31, 0x01DF	; 0x8001df <mtable+0x23>
    1590:	30 97       	sbiw	r30, 0x00	; 0
    1592:	39 f0       	breq	.+14     	; 0x15a2 <__vector_22+0xb4>
    1594:	61 e1       	ldi	r22, 0x11	; 17
    1596:	70 e0       	ldi	r23, 0x00	; 0
    1598:	80 91 46 01 	lds	r24, 0x0146	; 0x800146 <otable+0x22>
    159c:	90 91 47 01 	lds	r25, 0x0147	; 0x800147 <otable+0x23>
    15a0:	09 95       	icall
    15a2:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
    15a6:	ff 91       	pop	r31
    15a8:	ef 91       	pop	r30
    15aa:	bf 91       	pop	r27
    15ac:	af 91       	pop	r26
    15ae:	9f 91       	pop	r25
    15b0:	8f 91       	pop	r24
    15b2:	7f 91       	pop	r23
    15b4:	6f 91       	pop	r22
    15b6:	5f 91       	pop	r21
    15b8:	4f 91       	pop	r20
    15ba:	3f 91       	pop	r19
    15bc:	2f 91       	pop	r18
    15be:	1f 91       	pop	r17
    15c0:	0f 91       	pop	r16
    15c2:	0f 90       	pop	r0
    15c4:	0f be       	out	0x3f, r0	; 63
    15c6:	0f 90       	pop	r0
    15c8:	1f 90       	pop	r1
    15ca:	18 95       	reti

000015cc <__vector_9>:
        return 1;
    }
    return 0;
}

TIMER_OVERFLOW_INTERRUPT {
    15cc:	1f 92       	push	r1
    15ce:	0f 92       	push	r0
    15d0:	0f b6       	in	r0, 0x3f	; 63
    15d2:	0f 92       	push	r0
    15d4:	11 24       	eor	r1, r1
    15d6:	2f 93       	push	r18
    15d8:	3f 93       	push	r19
    15da:	4f 93       	push	r20
    15dc:	5f 93       	push	r21
    15de:	6f 93       	push	r22
    15e0:	7f 93       	push	r23
    15e2:	8f 93       	push	r24
    15e4:	9f 93       	push	r25
    15e6:	ef 93       	push	r30
    15e8:	ff 93       	push	r31
    TIMER_OCLR();
    overflows++;
    15ea:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    15ee:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    15f2:	01 96       	adiw	r24, 0x01	; 1
    15f4:	90 93 1b 01 	sts	0x011B, r25	; 0x80011b <__data_end+0x1>
    15f8:	80 93 1a 01 	sts	0x011A, r24	; 0x80011a <__data_end>
    TIMERSET(timerQ);
    15fc:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <timerQ>
    1600:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <timerQ+0x1>
    1604:	30 97       	sbiw	r30, 0x00	; 0
    1606:	01 f1       	breq	.+64     	; 0x1648 <__vector_9+0x7c>
    1608:	42 81       	ldd	r20, Z+2	; 0x02
    160a:	53 81       	ldd	r21, Z+3	; 0x03
    160c:	64 81       	ldd	r22, Z+4	; 0x04
    160e:	75 81       	ldd	r23, Z+5	; 0x05
    1610:	86 17       	cp	r24, r22
    1612:	97 07       	cpc	r25, r23
    1614:	c9 f4       	brne	.+50     	; 0x1648 <__vector_9+0x7c>
    1616:	ca 01       	movw	r24, r20
    1618:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    161c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1620:	42 1b       	sub	r20, r18
    1622:	53 0b       	sbc	r21, r19
    1624:	41 30       	cpi	r20, 0x01	; 1
    1626:	51 05       	cpc	r21, r1
    1628:	29 f4       	brne	.+10     	; 0x1634 <__vector_9+0x68>
    162a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    162e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1632:	01 96       	adiw	r24, 0x01	; 1
    1634:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1638:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    163c:	ef e6       	ldi	r30, 0x6F	; 111
    163e:	f0 e0       	ldi	r31, 0x00	; 0
    1640:	80 81       	ld	r24, Z
    1642:	82 60       	ori	r24, 0x02	; 2
    1644:	80 83       	st	Z, r24
    1646:	05 c0       	rjmp	.+10     	; 0x1652 <__vector_9+0x86>
    1648:	ef e6       	ldi	r30, 0x6F	; 111
    164a:	f0 e0       	ldi	r31, 0x00	; 0
    164c:	80 81       	ld	r24, Z
    164e:	8d 7f       	andi	r24, 0xFD	; 253
    1650:	80 83       	st	Z, r24
}
    1652:	ff 91       	pop	r31
    1654:	ef 91       	pop	r30
    1656:	9f 91       	pop	r25
    1658:	8f 91       	pop	r24
    165a:	7f 91       	pop	r23
    165c:	6f 91       	pop	r22
    165e:	5f 91       	pop	r21
    1660:	4f 91       	pop	r20
    1662:	3f 91       	pop	r19
    1664:	2f 91       	pop	r18
    1666:	0f 90       	pop	r0
    1668:	0f be       	out	0x3f, r0	; 63
    166a:	0f 90       	pop	r0
    166c:	1f 90       	pop	r1
    166e:	18 95       	reti

00001670 <__vector_7>:

TIMER_COMPARE_INTERRUPT {
    1670:	1f 92       	push	r1
    1672:	0f 92       	push	r0
    1674:	0f b6       	in	r0, 0x3f	; 63
    1676:	0f 92       	push	r0
    1678:	11 24       	eor	r1, r1
    167a:	cf 92       	push	r12
    167c:	df 92       	push	r13
    167e:	ef 92       	push	r14
    1680:	ff 92       	push	r15
    1682:	2f 93       	push	r18
    1684:	3f 93       	push	r19
    1686:	4f 93       	push	r20
    1688:	5f 93       	push	r21
    168a:	6f 93       	push	r22
    168c:	7f 93       	push	r23
    168e:	8f 93       	push	r24
    1690:	9f 93       	push	r25
    1692:	af 93       	push	r26
    1694:	bf 93       	push	r27
    1696:	ef 93       	push	r30
    1698:	ff 93       	push	r31
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    169a:	80 91 1a 01 	lds	r24, 0x011A	; 0x80011a <__data_end>
    169e:	90 91 1b 01 	lds	r25, 0x011B	; 0x80011b <__data_end+0x1>
    16a2:	6c 01       	movw	r12, r24
    16a4:	09 2e       	mov	r0, r25
    16a6:	00 0c       	add	r0, r0
    16a8:	ee 08       	sbc	r14, r14
    16aa:	ff 08       	sbc	r15, r15
    16ac:	76 01       	movw	r14, r12
    16ae:	dd 24       	eor	r13, r13
    16b0:	cc 24       	eor	r12, r12
    16b2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16b6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ba:	60 e0       	ldi	r22, 0x00	; 0
    16bc:	70 e0       	ldi	r23, 0x00	; 0
    16be:	c4 2a       	or	r12, r20
    16c0:	d5 2a       	or	r13, r21
    16c2:	e6 2a       	or	r14, r22
    16c4:	f7 2a       	or	r15, r23
    16c6:	b0 9b       	sbis	0x16, 0	; 22
    16c8:	1e c0       	rjmp	.+60     	; 0x1706 <__vector_7+0x96>
    16ca:	6c 01       	movw	r12, r24
    16cc:	2f ef       	ldi	r18, 0xFF	; 255
    16ce:	c2 1a       	sub	r12, r18
    16d0:	d2 0a       	sbc	r13, r18
    16d2:	0d 2c       	mov	r0, r13
    16d4:	00 0c       	add	r0, r0
    16d6:	ee 08       	sbc	r14, r14
    16d8:	ff 08       	sbc	r15, r15
    16da:	d6 01       	movw	r26, r12
    16dc:	99 27       	eor	r25, r25
    16de:	88 27       	eor	r24, r24
    16e0:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16e4:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16e8:	e1 2c       	mov	r14, r1
    16ea:	f1 2c       	mov	r15, r1
    16ec:	c8 2a       	or	r12, r24
    16ee:	d9 2a       	or	r13, r25
    16f0:	ea 2a       	or	r14, r26
    16f2:	fb 2a       	or	r15, r27
    16f4:	08 c0       	rjmp	.+16     	; 0x1706 <__vector_7+0x96>
    while (timerQ && (timerQ->baseline - now <= 0))
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    16f6:	80 e2       	ldi	r24, 0x20	; 32
    16f8:	91 e0       	ldi	r25, 0x01	; 1
    16fa:	0e 94 b9 02 	call	0x572	; 0x572 <dequeue>
    16fe:	62 e2       	ldi	r22, 0x22	; 34
    1700:	71 e0       	ldi	r23, 0x01	; 1
    1702:	0e 94 88 02 	call	0x510	; 0x510 <enqueueByDeadline>

TIMER_COMPARE_INTERRUPT {
    Time now;
    TIMER_CCLR();
    TIMERGET(now);
    while (timerQ && (timerQ->baseline - now <= 0))
    1706:	e0 91 20 01 	lds	r30, 0x0120	; 0x800120 <timerQ>
    170a:	f0 91 21 01 	lds	r31, 0x0121	; 0x800121 <timerQ+0x1>
    170e:	30 97       	sbiw	r30, 0x00	; 0
    1710:	69 f0       	breq	.+26     	; 0x172c <__vector_7+0xbc>
    1712:	82 81       	ldd	r24, Z+2	; 0x02
    1714:	93 81       	ldd	r25, Z+3	; 0x03
    1716:	a4 81       	ldd	r26, Z+4	; 0x04
    1718:	b5 81       	ldd	r27, Z+5	; 0x05
    171a:	8c 19       	sub	r24, r12
    171c:	9d 09       	sbc	r25, r13
    171e:	ae 09       	sbc	r26, r14
    1720:	bf 09       	sbc	r27, r15
    1722:	18 16       	cp	r1, r24
    1724:	19 06       	cpc	r1, r25
    1726:	1a 06       	cpc	r1, r26
    1728:	1b 06       	cpc	r1, r27
    172a:	2c f7       	brge	.-54     	; 0x16f6 <__vector_7+0x86>
        enqueueByDeadline( dequeue(&timerQ), &msgQ );
    TIMERSET(timerQ);
    172c:	30 97       	sbiw	r30, 0x00	; 0
    172e:	21 f1       	breq	.+72     	; 0x1778 <__vector_7+0x108>
    1730:	82 81       	ldd	r24, Z+2	; 0x02
    1732:	93 81       	ldd	r25, Z+3	; 0x03
    1734:	a4 81       	ldd	r26, Z+4	; 0x04
    1736:	b5 81       	ldd	r27, Z+5	; 0x05
    1738:	20 91 1a 01 	lds	r18, 0x011A	; 0x80011a <__data_end>
    173c:	30 91 1b 01 	lds	r19, 0x011B	; 0x80011b <__data_end+0x1>
    1740:	2a 17       	cp	r18, r26
    1742:	3b 07       	cpc	r19, r27
    1744:	c9 f4       	brne	.+50     	; 0x1778 <__vector_7+0x108>
    1746:	9c 01       	movw	r18, r24
    1748:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    174c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1750:	84 1b       	sub	r24, r20
    1752:	95 0b       	sbc	r25, r21
    1754:	01 97       	sbiw	r24, 0x01	; 1
    1756:	31 f4       	brne	.+12     	; 0x1764 <__vector_7+0xf4>
    1758:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    175c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1760:	2f 5f       	subi	r18, 0xFF	; 255
    1762:	3f 4f       	sbci	r19, 0xFF	; 255
    1764:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1768:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    176c:	ef e6       	ldi	r30, 0x6F	; 111
    176e:	f0 e0       	ldi	r31, 0x00	; 0
    1770:	80 81       	ld	r24, Z
    1772:	82 60       	ori	r24, 0x02	; 2
    1774:	80 83       	st	Z, r24
    1776:	05 c0       	rjmp	.+10     	; 0x1782 <__vector_7+0x112>
    1778:	ef e6       	ldi	r30, 0x6F	; 111
    177a:	f0 e0       	ldi	r31, 0x00	; 0
    177c:	80 81       	ld	r24, Z
    177e:	8d 7f       	andi	r24, 0xFD	; 253
    1780:	80 83       	st	Z, r24
    schedule();
    1782:	0e 94 e4 02 	call	0x5c8	; 0x5c8 <schedule>
}
    1786:	ff 91       	pop	r31
    1788:	ef 91       	pop	r30
    178a:	bf 91       	pop	r27
    178c:	af 91       	pop	r26
    178e:	9f 91       	pop	r25
    1790:	8f 91       	pop	r24
    1792:	7f 91       	pop	r23
    1794:	6f 91       	pop	r22
    1796:	5f 91       	pop	r21
    1798:	4f 91       	pop	r20
    179a:	3f 91       	pop	r19
    179c:	2f 91       	pop	r18
    179e:	ff 90       	pop	r15
    17a0:	ef 90       	pop	r14
    17a2:	df 90       	pop	r13
    17a4:	cf 90       	pop	r12
    17a6:	0f 90       	pop	r0
    17a8:	0f be       	out	0x3f, r0	; 63
    17aa:	0f 90       	pop	r0
    17ac:	1f 90       	pop	r1
    17ae:	18 95       	reti

000017b0 <__tablejump2__>:
    17b0:	ee 0f       	add	r30, r30
    17b2:	ff 1f       	adc	r31, r31
    17b4:	05 90       	lpm	r0, Z+
    17b6:	f4 91       	lpm	r31, Z
    17b8:	e0 2d       	mov	r30, r0
    17ba:	09 94       	ijmp

000017bc <setjmp>:
    17bc:	dc 01       	movw	r26, r24
    17be:	2d 92       	st	X+, r2
    17c0:	3d 92       	st	X+, r3
    17c2:	4d 92       	st	X+, r4
    17c4:	5d 92       	st	X+, r5
    17c6:	6d 92       	st	X+, r6
    17c8:	7d 92       	st	X+, r7
    17ca:	8d 92       	st	X+, r8
    17cc:	9d 92       	st	X+, r9
    17ce:	ad 92       	st	X+, r10
    17d0:	bd 92       	st	X+, r11
    17d2:	cd 92       	st	X+, r12
    17d4:	dd 92       	st	X+, r13
    17d6:	ed 92       	st	X+, r14
    17d8:	fd 92       	st	X+, r15
    17da:	0d 93       	st	X+, r16
    17dc:	1d 93       	st	X+, r17
    17de:	cd 93       	st	X+, r28
    17e0:	dd 93       	st	X+, r29
    17e2:	ff 91       	pop	r31
    17e4:	ef 91       	pop	r30
    17e6:	8d b7       	in	r24, 0x3d	; 61
    17e8:	8d 93       	st	X+, r24
    17ea:	8e b7       	in	r24, 0x3e	; 62
    17ec:	8d 93       	st	X+, r24
    17ee:	8f b7       	in	r24, 0x3f	; 63
    17f0:	8d 93       	st	X+, r24
    17f2:	ed 93       	st	X+, r30
    17f4:	fd 93       	st	X+, r31
    17f6:	88 27       	eor	r24, r24
    17f8:	99 27       	eor	r25, r25
    17fa:	09 94       	ijmp

000017fc <longjmp>:
    17fc:	dc 01       	movw	r26, r24
    17fe:	cb 01       	movw	r24, r22
    1800:	81 30       	cpi	r24, 0x01	; 1
    1802:	91 05       	cpc	r25, r1
    1804:	81 1d       	adc	r24, r1
    1806:	2d 90       	ld	r2, X+
    1808:	3d 90       	ld	r3, X+
    180a:	4d 90       	ld	r4, X+
    180c:	5d 90       	ld	r5, X+
    180e:	6d 90       	ld	r6, X+
    1810:	7d 90       	ld	r7, X+
    1812:	8d 90       	ld	r8, X+
    1814:	9d 90       	ld	r9, X+
    1816:	ad 90       	ld	r10, X+
    1818:	bd 90       	ld	r11, X+
    181a:	cd 90       	ld	r12, X+
    181c:	dd 90       	ld	r13, X+
    181e:	ed 90       	ld	r14, X+
    1820:	fd 90       	ld	r15, X+
    1822:	0d 91       	ld	r16, X+
    1824:	1d 91       	ld	r17, X+
    1826:	cd 91       	ld	r28, X+
    1828:	dd 91       	ld	r29, X+
    182a:	ed 91       	ld	r30, X+
    182c:	fd 91       	ld	r31, X+
    182e:	0d 90       	ld	r0, X+
    1830:	f8 94       	cli
    1832:	fe bf       	out	0x3e, r31	; 62
    1834:	0f be       	out	0x3f, r0	; 63
    1836:	ed bf       	out	0x3d, r30	; 61
    1838:	ed 91       	ld	r30, X+
    183a:	fd 91       	ld	r31, X+
    183c:	09 94       	ijmp

0000183e <_exit>:
    183e:	f8 94       	cli

00001840 <__stop_program>:
    1840:	ff cf       	rjmp	.-2      	; 0x1840 <__stop_program>
