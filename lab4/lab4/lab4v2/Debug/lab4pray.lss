
lab4pray.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000004c  00800100  00002526  000025ba  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002526  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000357  0080014c  0080014c  00002606  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00002606  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002638  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000250  00000000  00000000  00002678  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002d19  00000000  00000000  000028c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001056  00000000  00000000  000055e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001793  00000000  00000000  00006637  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000c98  00000000  00000000  00007dcc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000094d  00000000  00000000  00008a64  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002817  00000000  00000000  000093b1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000208  00000000  00000000  0000bbc8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 37 00 	jmp	0x6e	; 0x6e <__ctors_end>
       4:	0c 94 30 07 	jmp	0xe60	; 0xe60 <__vector_1>
       8:	0c 94 9f 07 	jmp	0xf3e	; 0xf3e <__vector_2>
       c:	0c 94 0e 08 	jmp	0x101c	; 0x101c <__vector_3>
      10:	0c 94 7d 08 	jmp	0x10fa	; 0x10fa <__vector_4>
      14:	0c 94 ec 08 	jmp	0x11d8	; 0x11d8 <__vector_5>
      18:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      1c:	0c 94 57 0f 	jmp	0x1eae	; 0x1eae <__vector_7>
      20:	0c 94 54 00 	jmp	0xa8	; 0xa8 <__bad_interrupt>
      24:	0c 94 05 0f 	jmp	0x1e0a	; 0x1e0a <__vector_9>
      28:	0c 94 5b 09 	jmp	0x12b6	; 0x12b6 <__vector_10>
      2c:	0c 94 ca 09 	jmp	0x1394	; 0x1394 <__vector_11>
      30:	0c 94 39 0a 	jmp	0x1472	; 0x1472 <__vector_12>
      34:	0c 94 a8 0a 	jmp	0x1550	; 0x1550 <__vector_13>
      38:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__vector_14>
      3c:	0c 94 86 0b 	jmp	0x170c	; 0x170c <__vector_15>
      40:	0c 94 f5 0b 	jmp	0x17ea	; 0x17ea <__vector_16>
      44:	0c 94 64 0c 	jmp	0x18c8	; 0x18c8 <__vector_17>
      48:	0c 94 d3 0c 	jmp	0x19a6	; 0x19a6 <__vector_18>
      4c:	0c 94 42 0d 	jmp	0x1a84	; 0x1a84 <__vector_19>
      50:	0c 94 b1 0d 	jmp	0x1b62	; 0x1b62 <__vector_20>
      54:	0c 94 20 0e 	jmp	0x1c40	; 0x1c40 <__vector_21>
      58:	0c 94 8f 0e 	jmp	0x1d1e	; 0x1d1e <__vector_22>
      5c:	b5 00       	.word	0x00b5	; ????
      5e:	9d 00       	.word	0x009d	; ????
      60:	a0 00       	.word	0x00a0	; ????
      62:	a3 00       	.word	0x00a3	; ????
      64:	a6 00       	.word	0x00a6	; ????
      66:	a9 00       	.word	0x00a9	; ????
      68:	ac 00       	.word	0x00ac	; ????
      6a:	af 00       	.word	0x00af	; ????
      6c:	b2 00       	.word	0x00b2	; ????

0000006e <__ctors_end>:
      6e:	11 24       	eor	r1, r1
      70:	1f be       	out	0x3f, r1	; 63
      72:	cf ef       	ldi	r28, 0xFF	; 255
      74:	d4 e0       	ldi	r29, 0x04	; 4
      76:	de bf       	out	0x3e, r29	; 62
      78:	cd bf       	out	0x3d, r28	; 61

0000007a <__do_copy_data>:
      7a:	11 e0       	ldi	r17, 0x01	; 1
      7c:	a0 e0       	ldi	r26, 0x00	; 0
      7e:	b1 e0       	ldi	r27, 0x01	; 1
      80:	e6 e2       	ldi	r30, 0x26	; 38
      82:	f5 e2       	ldi	r31, 0x25	; 37
      84:	02 c0       	rjmp	.+4      	; 0x8a <__do_copy_data+0x10>
      86:	05 90       	lpm	r0, Z+
      88:	0d 92       	st	X+, r0
      8a:	ac 34       	cpi	r26, 0x4C	; 76
      8c:	b1 07       	cpc	r27, r17
      8e:	d9 f7       	brne	.-10     	; 0x86 <__do_copy_data+0xc>

00000090 <__do_clear_bss>:
      90:	24 e0       	ldi	r18, 0x04	; 4
      92:	ac e4       	ldi	r26, 0x4C	; 76
      94:	b1 e0       	ldi	r27, 0x01	; 1
      96:	01 c0       	rjmp	.+2      	; 0x9a <.do_clear_bss_start>

00000098 <.do_clear_bss_loop>:
      98:	1d 92       	st	X+, r1

0000009a <.do_clear_bss_start>:
      9a:	a3 3a       	cpi	r26, 0xA3	; 163
      9c:	b2 07       	cpc	r27, r18
      9e:	e1 f7       	brne	.-8      	; 0x98 <.do_clear_bss_loop>
      a0:	0e 94 1f 04 	call	0x83e	; 0x83e <main>
      a4:	0c 94 91 12 	jmp	0x2522	; 0x2522 <_exit>

000000a8 <__bad_interrupt>:
      a8:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ac <LCD_init>:
            return false;
        }
    }
    /* is prime */
    return true;
}
      ac:	e1 e6       	ldi	r30, 0x61	; 97
      ae:	f0 e0       	ldi	r31, 0x00	; 0
      b0:	80 e8       	ldi	r24, 0x80	; 128
      b2:	80 83       	st	Z, r24
      b4:	10 82       	st	Z, r1
      b6:	87 eb       	ldi	r24, 0xB7	; 183
      b8:	80 93 e5 00 	sts	0x00E5, r24	; 0x8000e5 <__TEXT_REGION_LENGTH__+0x7fc0e5>
      bc:	8f e0       	ldi	r24, 0x0F	; 15
      be:	80 93 e7 00 	sts	0x00E7, r24	; 0x8000e7 <__TEXT_REGION_LENGTH__+0x7fc0e7>
      c2:	87 e0       	ldi	r24, 0x07	; 7
      c4:	80 93 e6 00 	sts	0x00E6, r24	; 0x8000e6 <__TEXT_REGION_LENGTH__+0x7fc0e6>
      c8:	90 ec       	ldi	r25, 0xC0	; 192
      ca:	90 93 e4 00 	sts	0x00E4, r25	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7fc0e4>
      ce:	85 b1       	in	r24, 0x05	; 5
      d0:	80 6d       	ori	r24, 0xD0	; 208
      d2:	85 b9       	out	0x05, r24	; 5
      d4:	8e b1       	in	r24, 0x0e	; 14
      d6:	8c 60       	ori	r24, 0x0C	; 12
      d8:	8e b9       	out	0x0e, r24	; 14
      da:	8f e2       	ldi	r24, 0x2F	; 47
      dc:	84 b9       	out	0x04, r24	; 4
      de:	80 e5       	ldi	r24, 0x50	; 80
      e0:	8d b9       	out	0x0d, r24	; 13
      e2:	8c e0       	ldi	r24, 0x0C	; 12
      e4:	80 93 6b 00 	sts	0x006B, r24	; 0x80006b <__TEXT_REGION_LENGTH__+0x7fc06b>
      e8:	80 ed       	ldi	r24, 0xD0	; 208
      ea:	80 93 6c 00 	sts	0x006C, r24	; 0x80006c <__TEXT_REGION_LENGTH__+0x7fc06c>
      ee:	9d bb       	out	0x1d, r25	; 29
      f0:	08 95       	ret

000000f2 <writeChar>:
      f2:	cf 93       	push	r28
      f4:	df 93       	push	r29
      f6:	cd b7       	in	r28, 0x3d	; 61
      f8:	de b7       	in	r29, 0x3e	; 62
      fa:	64 97       	sbiw	r28, 0x14	; 20
      fc:	0f b6       	in	r0, 0x3f	; 63
      fe:	f8 94       	cli
     100:	de bf       	out	0x3e, r29	; 62
     102:	0f be       	out	0x3f, r0	; 63
     104:	cd bf       	out	0x3d, r28	; 61
     106:	94 e1       	ldi	r25, 0x14	; 20
     108:	e7 e3       	ldi	r30, 0x37	; 55
     10a:	f1 e0       	ldi	r31, 0x01	; 1
     10c:	de 01       	movw	r26, r28
     10e:	11 96       	adiw	r26, 0x01	; 1
     110:	01 90       	ld	r0, Z+
     112:	0d 92       	st	X+, r0
     114:	9a 95       	dec	r25
     116:	e1 f7       	brne	.-8      	; 0x110 <writeChar+0x1e>
     118:	66 30       	cpi	r22, 0x06	; 6
     11a:	71 05       	cpc	r23, r1
     11c:	08 f0       	brcs	.+2      	; 0x120 <writeChar+0x2e>
     11e:	9e c1       	rjmp	.+828    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     120:	90 e0       	ldi	r25, 0x00	; 0
     122:	fc 01       	movw	r30, r24
     124:	f1 97       	sbiw	r30, 0x31	; 49
     126:	e9 30       	cpi	r30, 0x09	; 9
     128:	f1 05       	cpc	r31, r1
     12a:	20 f4       	brcc	.+8      	; 0x134 <writeChar+0x42>
     12c:	e2 5d       	subi	r30, 0xD2	; 210
     12e:	ff 4f       	sbci	r31, 0xFF	; 255
     130:	0c 94 20 12 	jmp	0x2440	; 0x2440 <__tablejump2__>
     134:	80 e0       	ldi	r24, 0x00	; 0
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	1a c0       	rjmp	.+52     	; 0x16e <writeChar+0x7c>
     13a:	82 e0       	ldi	r24, 0x02	; 2
     13c:	90 e0       	ldi	r25, 0x00	; 0
     13e:	17 c0       	rjmp	.+46     	; 0x16e <writeChar+0x7c>
     140:	83 e0       	ldi	r24, 0x03	; 3
     142:	90 e0       	ldi	r25, 0x00	; 0
     144:	14 c0       	rjmp	.+40     	; 0x16e <writeChar+0x7c>
     146:	84 e0       	ldi	r24, 0x04	; 4
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	11 c0       	rjmp	.+34     	; 0x16e <writeChar+0x7c>
     14c:	85 e0       	ldi	r24, 0x05	; 5
     14e:	90 e0       	ldi	r25, 0x00	; 0
     150:	0e c0       	rjmp	.+28     	; 0x16e <writeChar+0x7c>
     152:	86 e0       	ldi	r24, 0x06	; 6
     154:	90 e0       	ldi	r25, 0x00	; 0
     156:	0b c0       	rjmp	.+22     	; 0x16e <writeChar+0x7c>
     158:	87 e0       	ldi	r24, 0x07	; 7
     15a:	90 e0       	ldi	r25, 0x00	; 0
     15c:	08 c0       	rjmp	.+16     	; 0x16e <writeChar+0x7c>
     15e:	88 e0       	ldi	r24, 0x08	; 8
     160:	90 e0       	ldi	r25, 0x00	; 0
     162:	05 c0       	rjmp	.+10     	; 0x16e <writeChar+0x7c>
     164:	89 e0       	ldi	r24, 0x09	; 9
     166:	90 e0       	ldi	r25, 0x00	; 0
     168:	02 c0       	rjmp	.+4      	; 0x16e <writeChar+0x7c>
     16a:	81 e0       	ldi	r24, 0x01	; 1
     16c:	90 e0       	ldi	r25, 0x00	; 0
     16e:	62 30       	cpi	r22, 0x02	; 2
     170:	71 05       	cpc	r23, r1
     172:	09 f4       	brne	.+2      	; 0x176 <writeChar+0x84>
     174:	8a c0       	rjmp	.+276    	; 0x28a <__EEPROM_REGION_LENGTH__+0x8a>
     176:	44 f4       	brge	.+16     	; 0x188 <writeChar+0x96>
     178:	61 15       	cp	r22, r1
     17a:	71 05       	cpc	r23, r1
     17c:	81 f0       	breq	.+32     	; 0x19e <writeChar+0xac>
     17e:	61 30       	cpi	r22, 0x01	; 1
     180:	71 05       	cpc	r23, r1
     182:	09 f4       	brne	.+2      	; 0x186 <writeChar+0x94>
     184:	45 c0       	rjmp	.+138    	; 0x210 <__EEPROM_REGION_LENGTH__+0x10>
     186:	6a c1       	rjmp	.+724    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     188:	64 30       	cpi	r22, 0x04	; 4
     18a:	71 05       	cpc	r23, r1
     18c:	09 f4       	brne	.+2      	; 0x190 <writeChar+0x9e>
     18e:	f2 c0       	rjmp	.+484    	; 0x374 <__EEPROM_REGION_LENGTH__+0x174>
     190:	0c f4       	brge	.+2      	; 0x194 <writeChar+0xa2>
     192:	b3 c0       	rjmp	.+358    	; 0x2fa <__EEPROM_REGION_LENGTH__+0xfa>
     194:	65 30       	cpi	r22, 0x05	; 5
     196:	71 05       	cpc	r23, r1
     198:	09 f4       	brne	.+2      	; 0x19c <writeChar+0xaa>
     19a:	24 c1       	rjmp	.+584    	; 0x3e4 <__EEPROM_REGION_LENGTH__+0x1e4>
     19c:	5f c1       	rjmp	.+702    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     19e:	ac ee       	ldi	r26, 0xEC	; 236
     1a0:	b0 e0       	ldi	r27, 0x00	; 0
     1a2:	2c 91       	ld	r18, X
     1a4:	88 0f       	add	r24, r24
     1a6:	99 1f       	adc	r25, r25
     1a8:	e1 e0       	ldi	r30, 0x01	; 1
     1aa:	f0 e0       	ldi	r31, 0x00	; 0
     1ac:	ec 0f       	add	r30, r28
     1ae:	fd 1f       	adc	r31, r29
     1b0:	e8 0f       	add	r30, r24
     1b2:	f9 1f       	adc	r31, r25
     1b4:	90 81       	ld	r25, Z
     1b6:	20 7f       	andi	r18, 0xF0	; 240
     1b8:	89 2f       	mov	r24, r25
     1ba:	8f 70       	andi	r24, 0x0F	; 15
     1bc:	82 2b       	or	r24, r18
     1be:	84 60       	ori	r24, 0x04	; 4
     1c0:	8c 93       	st	X, r24
     1c2:	a1 ef       	ldi	r26, 0xF1	; 241
     1c4:	b0 e0       	ldi	r27, 0x00	; 0
     1c6:	2c 91       	ld	r18, X
     1c8:	80 81       	ld	r24, Z
     1ca:	91 81       	ldd	r25, Z+1	; 0x01
     1cc:	80 7f       	andi	r24, 0xF0	; 240
     1ce:	99 27       	eor	r25, r25
     1d0:	95 95       	asr	r25
     1d2:	87 95       	ror	r24
     1d4:	95 95       	asr	r25
     1d6:	87 95       	ror	r24
     1d8:	95 95       	asr	r25
     1da:	87 95       	ror	r24
     1dc:	95 95       	asr	r25
     1de:	87 95       	ror	r24
     1e0:	92 2f       	mov	r25, r18
     1e2:	90 7f       	andi	r25, 0xF0	; 240
     1e4:	89 2b       	or	r24, r25
     1e6:	8c 93       	st	X, r24
     1e8:	a6 ef       	ldi	r26, 0xF6	; 246
     1ea:	b0 e0       	ldi	r27, 0x00	; 0
     1ec:	8c 91       	ld	r24, X
     1ee:	20 81       	ld	r18, Z
     1f0:	31 81       	ldd	r19, Z+1	; 0x01
     1f2:	22 27       	eor	r18, r18
     1f4:	3f 70       	andi	r19, 0x0F	; 15
     1f6:	80 7f       	andi	r24, 0xF0	; 240
     1f8:	83 2b       	or	r24, r19
     1fa:	8c 93       	st	X, r24
     1fc:	ab ef       	ldi	r26, 0xFB	; 251
     1fe:	b0 e0       	ldi	r27, 0x00	; 0
     200:	8c 91       	ld	r24, X
     202:	91 81       	ldd	r25, Z+1	; 0x01
     204:	92 95       	swap	r25
     206:	9f 70       	andi	r25, 0x0F	; 15
     208:	80 7f       	andi	r24, 0xF0	; 240
     20a:	89 2b       	or	r24, r25
     20c:	8c 93       	st	X, r24
     20e:	26 c1       	rjmp	.+588    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     210:	ac ee       	ldi	r26, 0xEC	; 236
     212:	b0 e0       	ldi	r27, 0x00	; 0
     214:	2c 91       	ld	r18, X
     216:	88 0f       	add	r24, r24
     218:	99 1f       	adc	r25, r25
     21a:	e1 e0       	ldi	r30, 0x01	; 1
     21c:	f0 e0       	ldi	r31, 0x00	; 0
     21e:	ec 0f       	add	r30, r28
     220:	fd 1f       	adc	r31, r29
     222:	e8 0f       	add	r30, r24
     224:	f9 1f       	adc	r31, r25
     226:	80 81       	ld	r24, Z
     228:	91 81       	ldd	r25, Z+1	; 0x01
     22a:	82 95       	swap	r24
     22c:	92 95       	swap	r25
     22e:	90 7f       	andi	r25, 0xF0	; 240
     230:	98 27       	eor	r25, r24
     232:	80 7f       	andi	r24, 0xF0	; 240
     234:	98 27       	eor	r25, r24
     236:	92 2f       	mov	r25, r18
     238:	9f 70       	andi	r25, 0x0F	; 15
     23a:	89 2b       	or	r24, r25
     23c:	8c 93       	st	X, r24
     23e:	a1 ef       	ldi	r26, 0xF1	; 241
     240:	b0 e0       	ldi	r27, 0x00	; 0
     242:	9c 91       	ld	r25, X
     244:	80 81       	ld	r24, Z
     246:	9f 70       	andi	r25, 0x0F	; 15
     248:	80 7f       	andi	r24, 0xF0	; 240
     24a:	89 2b       	or	r24, r25
     24c:	8c 93       	st	X, r24
     24e:	a6 ef       	ldi	r26, 0xF6	; 246
     250:	b0 e0       	ldi	r27, 0x00	; 0
     252:	2c 91       	ld	r18, X
     254:	80 81       	ld	r24, Z
     256:	91 81       	ldd	r25, Z+1	; 0x01
     258:	88 27       	eor	r24, r24
     25a:	9f 70       	andi	r25, 0x0F	; 15
     25c:	95 95       	asr	r25
     25e:	87 95       	ror	r24
     260:	95 95       	asr	r25
     262:	87 95       	ror	r24
     264:	95 95       	asr	r25
     266:	87 95       	ror	r24
     268:	95 95       	asr	r25
     26a:	87 95       	ror	r24
     26c:	92 2f       	mov	r25, r18
     26e:	9f 70       	andi	r25, 0x0F	; 15
     270:	89 2b       	or	r24, r25
     272:	8c 93       	st	X, r24
     274:	ab ef       	ldi	r26, 0xFB	; 251
     276:	b0 e0       	ldi	r27, 0x00	; 0
     278:	8c 91       	ld	r24, X
     27a:	20 81       	ld	r18, Z
     27c:	31 81       	ldd	r19, Z+1	; 0x01
     27e:	22 27       	eor	r18, r18
     280:	30 7f       	andi	r19, 0xF0	; 240
     282:	8f 70       	andi	r24, 0x0F	; 15
     284:	83 2b       	or	r24, r19
     286:	8c 93       	st	X, r24
     288:	e9 c0       	rjmp	.+466    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     28a:	ad ee       	ldi	r26, 0xED	; 237
     28c:	b0 e0       	ldi	r27, 0x00	; 0
     28e:	2c 91       	ld	r18, X
     290:	88 0f       	add	r24, r24
     292:	99 1f       	adc	r25, r25
     294:	e1 e0       	ldi	r30, 0x01	; 1
     296:	f0 e0       	ldi	r31, 0x00	; 0
     298:	ec 0f       	add	r30, r28
     29a:	fd 1f       	adc	r31, r29
     29c:	e8 0f       	add	r30, r24
     29e:	f9 1f       	adc	r31, r25
     2a0:	80 81       	ld	r24, Z
     2a2:	92 2f       	mov	r25, r18
     2a4:	90 7f       	andi	r25, 0xF0	; 240
     2a6:	8f 70       	andi	r24, 0x0F	; 15
     2a8:	89 2b       	or	r24, r25
     2aa:	8c 93       	st	X, r24
     2ac:	a2 ef       	ldi	r26, 0xF2	; 242
     2ae:	b0 e0       	ldi	r27, 0x00	; 0
     2b0:	2c 91       	ld	r18, X
     2b2:	80 81       	ld	r24, Z
     2b4:	91 81       	ldd	r25, Z+1	; 0x01
     2b6:	80 7f       	andi	r24, 0xF0	; 240
     2b8:	99 27       	eor	r25, r25
     2ba:	95 95       	asr	r25
     2bc:	87 95       	ror	r24
     2be:	95 95       	asr	r25
     2c0:	87 95       	ror	r24
     2c2:	95 95       	asr	r25
     2c4:	87 95       	ror	r24
     2c6:	95 95       	asr	r25
     2c8:	87 95       	ror	r24
     2ca:	92 2f       	mov	r25, r18
     2cc:	90 7f       	andi	r25, 0xF0	; 240
     2ce:	89 2b       	or	r24, r25
     2d0:	8c 93       	st	X, r24
     2d2:	a7 ef       	ldi	r26, 0xF7	; 247
     2d4:	b0 e0       	ldi	r27, 0x00	; 0
     2d6:	8c 91       	ld	r24, X
     2d8:	20 81       	ld	r18, Z
     2da:	31 81       	ldd	r19, Z+1	; 0x01
     2dc:	22 27       	eor	r18, r18
     2de:	3f 70       	andi	r19, 0x0F	; 15
     2e0:	80 7f       	andi	r24, 0xF0	; 240
     2e2:	83 2b       	or	r24, r19
     2e4:	8c 93       	st	X, r24
     2e6:	ac ef       	ldi	r26, 0xFC	; 252
     2e8:	b0 e0       	ldi	r27, 0x00	; 0
     2ea:	8c 91       	ld	r24, X
     2ec:	91 81       	ldd	r25, Z+1	; 0x01
     2ee:	92 95       	swap	r25
     2f0:	9f 70       	andi	r25, 0x0F	; 15
     2f2:	80 7f       	andi	r24, 0xF0	; 240
     2f4:	89 2b       	or	r24, r25
     2f6:	8c 93       	st	X, r24
     2f8:	b1 c0       	rjmp	.+354    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     2fa:	ad ee       	ldi	r26, 0xED	; 237
     2fc:	b0 e0       	ldi	r27, 0x00	; 0
     2fe:	2c 91       	ld	r18, X
     300:	88 0f       	add	r24, r24
     302:	99 1f       	adc	r25, r25
     304:	e1 e0       	ldi	r30, 0x01	; 1
     306:	f0 e0       	ldi	r31, 0x00	; 0
     308:	ec 0f       	add	r30, r28
     30a:	fd 1f       	adc	r31, r29
     30c:	e8 0f       	add	r30, r24
     30e:	f9 1f       	adc	r31, r25
     310:	80 81       	ld	r24, Z
     312:	91 81       	ldd	r25, Z+1	; 0x01
     314:	82 95       	swap	r24
     316:	92 95       	swap	r25
     318:	90 7f       	andi	r25, 0xF0	; 240
     31a:	98 27       	eor	r25, r24
     31c:	80 7f       	andi	r24, 0xF0	; 240
     31e:	98 27       	eor	r25, r24
     320:	92 2f       	mov	r25, r18
     322:	9f 70       	andi	r25, 0x0F	; 15
     324:	89 2b       	or	r24, r25
     326:	8c 93       	st	X, r24
     328:	a2 ef       	ldi	r26, 0xF2	; 242
     32a:	b0 e0       	ldi	r27, 0x00	; 0
     32c:	9c 91       	ld	r25, X
     32e:	80 81       	ld	r24, Z
     330:	9f 70       	andi	r25, 0x0F	; 15
     332:	80 7f       	andi	r24, 0xF0	; 240
     334:	89 2b       	or	r24, r25
     336:	8c 93       	st	X, r24
     338:	a7 ef       	ldi	r26, 0xF7	; 247
     33a:	b0 e0       	ldi	r27, 0x00	; 0
     33c:	2c 91       	ld	r18, X
     33e:	80 81       	ld	r24, Z
     340:	91 81       	ldd	r25, Z+1	; 0x01
     342:	88 27       	eor	r24, r24
     344:	9f 70       	andi	r25, 0x0F	; 15
     346:	95 95       	asr	r25
     348:	87 95       	ror	r24
     34a:	95 95       	asr	r25
     34c:	87 95       	ror	r24
     34e:	95 95       	asr	r25
     350:	87 95       	ror	r24
     352:	95 95       	asr	r25
     354:	87 95       	ror	r24
     356:	92 2f       	mov	r25, r18
     358:	9f 70       	andi	r25, 0x0F	; 15
     35a:	89 2b       	or	r24, r25
     35c:	8c 93       	st	X, r24
     35e:	ac ef       	ldi	r26, 0xFC	; 252
     360:	b0 e0       	ldi	r27, 0x00	; 0
     362:	8c 91       	ld	r24, X
     364:	20 81       	ld	r18, Z
     366:	31 81       	ldd	r19, Z+1	; 0x01
     368:	22 27       	eor	r18, r18
     36a:	30 7f       	andi	r19, 0xF0	; 240
     36c:	8f 70       	andi	r24, 0x0F	; 15
     36e:	83 2b       	or	r24, r19
     370:	8c 93       	st	X, r24
     372:	74 c0       	rjmp	.+232    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     374:	ae ee       	ldi	r26, 0xEE	; 238
     376:	b0 e0       	ldi	r27, 0x00	; 0
     378:	2c 91       	ld	r18, X
     37a:	88 0f       	add	r24, r24
     37c:	99 1f       	adc	r25, r25
     37e:	e1 e0       	ldi	r30, 0x01	; 1
     380:	f0 e0       	ldi	r31, 0x00	; 0
     382:	ec 0f       	add	r30, r28
     384:	fd 1f       	adc	r31, r29
     386:	e8 0f       	add	r30, r24
     388:	f9 1f       	adc	r31, r25
     38a:	80 81       	ld	r24, Z
     38c:	92 2f       	mov	r25, r18
     38e:	90 7f       	andi	r25, 0xF0	; 240
     390:	8f 70       	andi	r24, 0x0F	; 15
     392:	89 2b       	or	r24, r25
     394:	8c 93       	st	X, r24
     396:	a3 ef       	ldi	r26, 0xF3	; 243
     398:	b0 e0       	ldi	r27, 0x00	; 0
     39a:	2c 91       	ld	r18, X
     39c:	80 81       	ld	r24, Z
     39e:	91 81       	ldd	r25, Z+1	; 0x01
     3a0:	80 7f       	andi	r24, 0xF0	; 240
     3a2:	99 27       	eor	r25, r25
     3a4:	95 95       	asr	r25
     3a6:	87 95       	ror	r24
     3a8:	95 95       	asr	r25
     3aa:	87 95       	ror	r24
     3ac:	95 95       	asr	r25
     3ae:	87 95       	ror	r24
     3b0:	95 95       	asr	r25
     3b2:	87 95       	ror	r24
     3b4:	92 2f       	mov	r25, r18
     3b6:	90 7f       	andi	r25, 0xF0	; 240
     3b8:	89 2b       	or	r24, r25
     3ba:	8c 93       	st	X, r24
     3bc:	a8 ef       	ldi	r26, 0xF8	; 248
     3be:	b0 e0       	ldi	r27, 0x00	; 0
     3c0:	8c 91       	ld	r24, X
     3c2:	20 81       	ld	r18, Z
     3c4:	31 81       	ldd	r19, Z+1	; 0x01
     3c6:	22 27       	eor	r18, r18
     3c8:	3f 70       	andi	r19, 0x0F	; 15
     3ca:	80 7f       	andi	r24, 0xF0	; 240
     3cc:	83 2b       	or	r24, r19
     3ce:	8c 93       	st	X, r24
     3d0:	ad ef       	ldi	r26, 0xFD	; 253
     3d2:	b0 e0       	ldi	r27, 0x00	; 0
     3d4:	8c 91       	ld	r24, X
     3d6:	91 81       	ldd	r25, Z+1	; 0x01
     3d8:	92 95       	swap	r25
     3da:	9f 70       	andi	r25, 0x0F	; 15
     3dc:	80 7f       	andi	r24, 0xF0	; 240
     3de:	89 2b       	or	r24, r25
     3e0:	8c 93       	st	X, r24
     3e2:	3c c0       	rjmp	.+120    	; 0x45c <__DATA_REGION_LENGTH__+0x5c>
     3e4:	ae ee       	ldi	r26, 0xEE	; 238
     3e6:	b0 e0       	ldi	r27, 0x00	; 0
     3e8:	2c 91       	ld	r18, X
     3ea:	88 0f       	add	r24, r24
     3ec:	99 1f       	adc	r25, r25
     3ee:	e1 e0       	ldi	r30, 0x01	; 1
     3f0:	f0 e0       	ldi	r31, 0x00	; 0
     3f2:	ec 0f       	add	r30, r28
     3f4:	fd 1f       	adc	r31, r29
     3f6:	e8 0f       	add	r30, r24
     3f8:	f9 1f       	adc	r31, r25
     3fa:	80 81       	ld	r24, Z
     3fc:	91 81       	ldd	r25, Z+1	; 0x01
     3fe:	82 95       	swap	r24
     400:	92 95       	swap	r25
     402:	90 7f       	andi	r25, 0xF0	; 240
     404:	98 27       	eor	r25, r24
     406:	80 7f       	andi	r24, 0xF0	; 240
     408:	98 27       	eor	r25, r24
     40a:	92 2f       	mov	r25, r18
     40c:	9f 70       	andi	r25, 0x0F	; 15
     40e:	89 2b       	or	r24, r25
     410:	8c 93       	st	X, r24
     412:	a3 ef       	ldi	r26, 0xF3	; 243
     414:	b0 e0       	ldi	r27, 0x00	; 0
     416:	9c 91       	ld	r25, X
     418:	80 81       	ld	r24, Z
     41a:	9f 70       	andi	r25, 0x0F	; 15
     41c:	80 7f       	andi	r24, 0xF0	; 240
     41e:	89 2b       	or	r24, r25
     420:	8c 93       	st	X, r24
     422:	a8 ef       	ldi	r26, 0xF8	; 248
     424:	b0 e0       	ldi	r27, 0x00	; 0
     426:	2c 91       	ld	r18, X
     428:	80 81       	ld	r24, Z
     42a:	91 81       	ldd	r25, Z+1	; 0x01
     42c:	88 27       	eor	r24, r24
     42e:	9f 70       	andi	r25, 0x0F	; 15
     430:	95 95       	asr	r25
     432:	87 95       	ror	r24
     434:	95 95       	asr	r25
     436:	87 95       	ror	r24
     438:	95 95       	asr	r25
     43a:	87 95       	ror	r24
     43c:	95 95       	asr	r25
     43e:	87 95       	ror	r24
     440:	92 2f       	mov	r25, r18
     442:	9f 70       	andi	r25, 0x0F	; 15
     444:	89 2b       	or	r24, r25
     446:	8c 93       	st	X, r24
     448:	ad ef       	ldi	r26, 0xFD	; 253
     44a:	b0 e0       	ldi	r27, 0x00	; 0
     44c:	8c 91       	ld	r24, X
     44e:	20 81       	ld	r18, Z
     450:	31 81       	ldd	r19, Z+1	; 0x01
     452:	22 27       	eor	r18, r18
     454:	30 7f       	andi	r19, 0xF0	; 240
     456:	8f 70       	andi	r24, 0x0F	; 15
     458:	83 2b       	or	r24, r19
     45a:	8c 93       	st	X, r24
     45c:	64 96       	adiw	r28, 0x14	; 20
     45e:	0f b6       	in	r0, 0x3f	; 63
     460:	f8 94       	cli
     462:	de bf       	out	0x3e, r29	; 62
     464:	0f be       	out	0x3f, r0	; 63
     466:	cd bf       	out	0x3d, r28	; 61
     468:	df 91       	pop	r29
     46a:	cf 91       	pop	r28
     46c:	08 95       	ret

0000046e <printAt>:

void printAt(guiClass *self, uint8_t num) {
     46e:	0f 93       	push	r16
     470:	1f 93       	push	r17
     472:	cf 93       	push	r28
     474:	df 93       	push	r29
     476:	d6 2f       	mov	r29, r22
     * at fixed positions 0 and 1.
     *
     * returns: none
     */
	
    int pp = self->pos;
     478:	fc 01       	movw	r30, r24
     47a:	04 81       	ldd	r16, Z+4	; 0x04
     47c:	10 e0       	ldi	r17, 0x00	; 0
    writeChar( (num % 100) / 10 + '0', pp);
     47e:	89 e2       	ldi	r24, 0x29	; 41
     480:	68 9f       	mul	r22, r24
     482:	81 2d       	mov	r24, r1
     484:	11 24       	eor	r1, r1
     486:	82 95       	swap	r24
     488:	8f 70       	andi	r24, 0x0F	; 15
     48a:	26 2f       	mov	r18, r22
     48c:	f4 e6       	ldi	r31, 0x64	; 100
     48e:	8f 9f       	mul	r24, r31
     490:	20 19       	sub	r18, r0
     492:	11 24       	eor	r1, r1
     494:	cd ec       	ldi	r28, 0xCD	; 205
     496:	2c 9f       	mul	r18, r28
     498:	81 2d       	mov	r24, r1
     49a:	11 24       	eor	r1, r1
     49c:	86 95       	lsr	r24
     49e:	86 95       	lsr	r24
     4a0:	86 95       	lsr	r24
     4a2:	b8 01       	movw	r22, r16
     4a4:	80 5d       	subi	r24, 0xD0	; 208
     4a6:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
    pp++;
     4aa:	b8 01       	movw	r22, r16
     4ac:	6f 5f       	subi	r22, 0xFF	; 255
     4ae:	7f 4f       	sbci	r23, 0xFF	; 255
    writeChar( num % 10 + '0', pp);
     4b0:	dc 9f       	mul	r29, r28
     4b2:	c1 2d       	mov	r28, r1
     4b4:	11 24       	eor	r1, r1
     4b6:	c6 95       	lsr	r28
     4b8:	c6 95       	lsr	r28
     4ba:	c6 95       	lsr	r28
     4bc:	cc 0f       	add	r28, r28
     4be:	8c 2f       	mov	r24, r28
     4c0:	88 0f       	add	r24, r24
     4c2:	88 0f       	add	r24, r24
     4c4:	c8 0f       	add	r28, r24
     4c6:	8d 2f       	mov	r24, r29
     4c8:	8c 1b       	sub	r24, r28
     4ca:	80 5d       	subi	r24, 0xD0	; 208
     4cc:	0e 94 79 00 	call	0xf2	; 0xf2 <writeChar>
}
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	1f 91       	pop	r17
     4d6:	0f 91       	pop	r16
     4d8:	08 95       	ret

000004da <generatorChange>:

void generatorChange(guiClass *self) {
	/*  Shows which side to display the frequency on */
	if (self->pos == 0) {
     4da:	fc 01       	movw	r30, r24
     4dc:	84 81       	ldd	r24, Z+4	; 0x04
     4de:	81 11       	cpse	r24, r1
     4e0:	09 c0       	rjmp	.+18     	; 0x4f4 <generatorChange+0x1a>
				LCDDR0 |= 0x04;
     4e2:	ec ee       	ldi	r30, 0xEC	; 236
     4e4:	f0 e0       	ldi	r31, 0x00	; 0
     4e6:	80 81       	ld	r24, Z
     4e8:	84 60       	ori	r24, 0x04	; 4
     4ea:	80 83       	st	Z, r24
				LCDDR0 &= 0xBF;
     4ec:	80 81       	ld	r24, Z
     4ee:	8f 7b       	andi	r24, 0xBF	; 191
     4f0:	80 83       	st	Z, r24
     4f2:	08 95       	ret
	}
	else if (self->pos == 4) {
     4f4:	84 30       	cpi	r24, 0x04	; 4
     4f6:	41 f4       	brne	.+16     	; 0x508 <__stack+0x9>
				LCDDR0 |= 0x40;
     4f8:	ec ee       	ldi	r30, 0xEC	; 236
     4fa:	f0 e0       	ldi	r31, 0x00	; 0
     4fc:	80 81       	ld	r24, Z
     4fe:	80 64       	ori	r24, 0x40	; 64
     500:	80 83       	st	Z, r24
				LCDDR0 &= 0xFB;
     502:	80 81       	ld	r24, Z
     504:	8b 7f       	andi	r24, 0xFB	; 251
     506:	80 83       	st	Z, r24
     508:	08 95       	ret

0000050a <bounce>:
    }
	
}

void bounce(inputHandler *self) {
	self->press = true;
     50a:	21 e0       	ldi	r18, 0x01	; 1
     50c:	fc 01       	movw	r30, r24
     50e:	26 87       	std	Z+14, r18	; 0x0e
     510:	08 95       	ret

00000512 <initialize>:
#include "TinyTimber.h"
#include "Gui.h"
#include "pulseGenerator.h"
#include "InputHandler.h"

void initialize (inputHandler *self) {
     512:	cf 92       	push	r12
     514:	df 92       	push	r13
     516:	ef 92       	push	r14
     518:	ff 92       	push	r15
     51a:	0f 93       	push	r16
     51c:	1f 93       	push	r17
     51e:	cf 93       	push	r28
     520:	df 93       	push	r29
     522:	ec 01       	movw	r28, r24
    SYNC(self->gui[0], LCD_init, 0);
     524:	40 e0       	ldi	r20, 0x00	; 0
     526:	50 e0       	ldi	r21, 0x00	; 0
     528:	66 e5       	ldi	r22, 0x56	; 86
     52a:	70 e0       	ldi	r23, 0x00	; 0
     52c:	88 85       	ldd	r24, Y+8	; 0x08
     52e:	99 85       	ldd	r25, Y+9	; 0x09
     530:	0e 94 00 11 	call	0x2200	; 0x2200 <sync>
    SYNC(self->pGen[0], generatePulse , NULL);
     534:	40 e0       	ldi	r20, 0x00	; 0
     536:	50 e0       	ldi	r21, 0x00	; 0
     538:	6b e5       	ldi	r22, 0x5B	; 91
     53a:	74 e0       	ldi	r23, 0x04	; 4
     53c:	8c 81       	ldd	r24, Y+4	; 0x04
     53e:	9d 81       	ldd	r25, Y+5	; 0x05
     540:	0e 94 00 11 	call	0x2200	; 0x2200 <sync>
    ASYNC(self->pGen[1], generatePulse , NULL);
     544:	0e 81       	ldd	r16, Y+6	; 0x06
     546:	1f 81       	ldd	r17, Y+7	; 0x07
     548:	c1 2c       	mov	r12, r1
     54a:	d1 2c       	mov	r13, r1
     54c:	0f 2e       	mov	r0, r31
     54e:	fb e5       	ldi	r31, 0x5B	; 91
     550:	ef 2e       	mov	r14, r31
     552:	f4 e0       	ldi	r31, 0x04	; 4
     554:	ff 2e       	mov	r15, r31
     556:	f0 2d       	mov	r31, r0
     558:	20 e0       	ldi	r18, 0x00	; 0
     55a:	30 e0       	ldi	r19, 0x00	; 0
     55c:	a9 01       	movw	r20, r18
     55e:	60 e0       	ldi	r22, 0x00	; 0
     560:	70 e0       	ldi	r23, 0x00	; 0
     562:	cb 01       	movw	r24, r22
     564:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
	ASYNC(self->gui[0], printAt, 1);
     568:	08 85       	ldd	r16, Y+8	; 0x08
     56a:	19 85       	ldd	r17, Y+9	; 0x09
     56c:	cc 24       	eor	r12, r12
     56e:	c3 94       	inc	r12
     570:	d1 2c       	mov	r13, r1
     572:	0f 2e       	mov	r0, r31
     574:	f7 e3       	ldi	r31, 0x37	; 55
     576:	ef 2e       	mov	r14, r31
     578:	f2 e0       	ldi	r31, 0x02	; 2
     57a:	ff 2e       	mov	r15, r31
     57c:	f0 2d       	mov	r31, r0
     57e:	20 e0       	ldi	r18, 0x00	; 0
     580:	30 e0       	ldi	r19, 0x00	; 0
     582:	a9 01       	movw	r20, r18
     584:	60 e0       	ldi	r22, 0x00	; 0
     586:	70 e0       	ldi	r23, 0x00	; 0
     588:	cb 01       	movw	r24, r22
     58a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
	ASYNC(self->gui[1], printAt, 1);
     58e:	0a 85       	ldd	r16, Y+10	; 0x0a
     590:	1b 85       	ldd	r17, Y+11	; 0x0b
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	a9 01       	movw	r20, r18
     598:	60 e0       	ldi	r22, 0x00	; 0
     59a:	70 e0       	ldi	r23, 0x00	; 0
     59c:	cb 01       	movw	r24, r22
     59e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
	ASYNC(self->gui[0], generatorChange, NULL);
     5a2:	08 85       	ldd	r16, Y+8	; 0x08
     5a4:	19 85       	ldd	r17, Y+9	; 0x09
     5a6:	c1 2c       	mov	r12, r1
     5a8:	d1 2c       	mov	r13, r1
     5aa:	0f 2e       	mov	r0, r31
     5ac:	fd e6       	ldi	r31, 0x6D	; 109
     5ae:	ef 2e       	mov	r14, r31
     5b0:	f2 e0       	ldi	r31, 0x02	; 2
     5b2:	ff 2e       	mov	r15, r31
     5b4:	f0 2d       	mov	r31, r0
     5b6:	20 e0       	ldi	r18, 0x00	; 0
     5b8:	30 e0       	ldi	r19, 0x00	; 0
     5ba:	a9 01       	movw	r20, r18
     5bc:	60 e0       	ldi	r22, 0x00	; 0
     5be:	70 e0       	ldi	r23, 0x00	; 0
     5c0:	cb 01       	movw	r24, r22
     5c2:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
}
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	1f 91       	pop	r17
     5cc:	0f 91       	pop	r16
     5ce:	ff 90       	pop	r15
     5d0:	ef 90       	pop	r14
     5d2:	df 90       	pop	r13
     5d4:	cf 90       	pop	r12
     5d6:	08 95       	ret

000005d8 <joystickUpDownCenter>:

void joystickUpDownCenter (inputHandler *self) {
     5d8:	cf 92       	push	r12
     5da:	df 92       	push	r13
     5dc:	ef 92       	push	r14
     5de:	ff 92       	push	r15
     5e0:	0f 93       	push	r16
     5e2:	1f 93       	push	r17
     5e4:	cf 93       	push	r28
     5e6:	df 93       	push	r29
     5e8:	ec 01       	movw	r28, r24
		with a delay of 0.5s depending on which
		button is pressed. */
	
	
	//Push
	PORTB |= (1<<4);
     5ea:	85 b1       	in	r24, 0x05	; 5
     5ec:	80 61       	ori	r24, 0x10	; 16
     5ee:	85 b9       	out	0x05, r24	; 5
	if((PINB & (1<<PINB4)) == 0) {
     5f0:	1c 99       	sbic	0x03, 4	; 3
     5f2:	2f c0       	rjmp	.+94     	; 0x652 <joystickUpDownCenter+0x7a>
		if(self->press){
     5f4:	8e 85       	ldd	r24, Y+14	; 0x0e
     5f6:	88 23       	and	r24, r24
     5f8:	d1 f0       	breq	.+52     	; 0x62e <joystickUpDownCenter+0x56>
			ASYNC(self->pGen[self->current], saveFreq, NULL);
     5fa:	ec 85       	ldd	r30, Y+12	; 0x0c
     5fc:	fd 85       	ldd	r31, Y+13	; 0x0d
     5fe:	32 96       	adiw	r30, 0x02	; 2
     600:	ee 0f       	add	r30, r30
     602:	ff 1f       	adc	r31, r31
     604:	ec 0f       	add	r30, r28
     606:	fd 1f       	adc	r31, r29
     608:	00 81       	ld	r16, Z
     60a:	11 81       	ldd	r17, Z+1	; 0x01
     60c:	c1 2c       	mov	r12, r1
     60e:	d1 2c       	mov	r13, r1
     610:	0f 2e       	mov	r0, r31
     612:	f6 e5       	ldi	r31, 0x56	; 86
     614:	ef 2e       	mov	r14, r31
     616:	f5 e0       	ldi	r31, 0x05	; 5
     618:	ff 2e       	mov	r15, r31
     61a:	f0 2d       	mov	r31, r0
     61c:	20 e0       	ldi	r18, 0x00	; 0
     61e:	30 e0       	ldi	r19, 0x00	; 0
     620:	a9 01       	movw	r20, r18
     622:	60 e0       	ldi	r22, 0x00	; 0
     624:	70 e0       	ldi	r23, 0x00	; 0
     626:	cb 01       	movw	r24, r22
     628:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			self->press = false;
     62c:	1e 86       	std	Y+14, r1	; 0x0e
		}
		AFTER(MSEC(200), self, bounce, NULL);
     62e:	c1 2c       	mov	r12, r1
     630:	d1 2c       	mov	r13, r1
     632:	0f 2e       	mov	r0, r31
     634:	f5 e8       	ldi	r31, 0x85	; 133
     636:	ef 2e       	mov	r14, r31
     638:	f2 e0       	ldi	r31, 0x02	; 2
     63a:	ff 2e       	mov	r15, r31
     63c:	f0 2d       	mov	r31, r0
     63e:	8e 01       	movw	r16, r28
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	30 e0       	ldi	r19, 0x00	; 0
     644:	a9 01       	movw	r20, r18
     646:	6a e6       	ldi	r22, 0x6A	; 106
     648:	78 e1       	ldi	r23, 0x18	; 24
     64a:	80 e0       	ldi	r24, 0x00	; 0
     64c:	90 e0       	ldi	r25, 0x00	; 0
     64e:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
	}

    //Up
	PORTB |= (1<<6);
     652:	85 b1       	in	r24, 0x05	; 5
     654:	80 64       	ori	r24, 0x40	; 64
     656:	85 b9       	out	0x05, r24	; 5
	if(!(PINB & 0x0040)) {
     658:	1e 99       	sbic	0x03, 6	; 3
     65a:	30 c0       	rjmp	.+96     	; 0x6bc <joystickUpDownCenter+0xe4>
		if (self->press){
     65c:	8e 85       	ldd	r24, Y+14	; 0x0e
     65e:	88 23       	and	r24, r24
     660:	d9 f0       	breq	.+54     	; 0x698 <joystickUpDownCenter+0xc0>
			AFTER(MSEC(500),self->pGen[self->current],  changeFreqUp, NULL);
     662:	ec 85       	ldd	r30, Y+12	; 0x0c
     664:	fd 85       	ldd	r31, Y+13	; 0x0d
     666:	32 96       	adiw	r30, 0x02	; 2
     668:	ee 0f       	add	r30, r30
     66a:	ff 1f       	adc	r31, r31
     66c:	ec 0f       	add	r30, r28
     66e:	fd 1f       	adc	r31, r29
     670:	00 81       	ld	r16, Z
     672:	11 81       	ldd	r17, Z+1	; 0x01
     674:	c1 2c       	mov	r12, r1
     676:	d1 2c       	mov	r13, r1
     678:	0f 2e       	mov	r0, r31
     67a:	f5 ed       	ldi	r31, 0xD5	; 213
     67c:	ef 2e       	mov	r14, r31
     67e:	f4 e0       	ldi	r31, 0x04	; 4
     680:	ff 2e       	mov	r15, r31
     682:	f0 2d       	mov	r31, r0
     684:	20 e0       	ldi	r18, 0x00	; 0
     686:	30 e0       	ldi	r19, 0x00	; 0
     688:	a9 01       	movw	r20, r18
     68a:	69 e0       	ldi	r22, 0x09	; 9
     68c:	7d e3       	ldi	r23, 0x3D	; 61
     68e:	80 e0       	ldi	r24, 0x00	; 0
     690:	90 e0       	ldi	r25, 0x00	; 0
     692:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			self->press = false;
     696:	1e 86       	std	Y+14, r1	; 0x0e
		}
		AFTER(MSEC(200), self, bounce, NULL);
     698:	c1 2c       	mov	r12, r1
     69a:	d1 2c       	mov	r13, r1
     69c:	0f 2e       	mov	r0, r31
     69e:	f5 e8       	ldi	r31, 0x85	; 133
     6a0:	ef 2e       	mov	r14, r31
     6a2:	f2 e0       	ldi	r31, 0x02	; 2
     6a4:	ff 2e       	mov	r15, r31
     6a6:	f0 2d       	mov	r31, r0
     6a8:	8e 01       	movw	r16, r28
     6aa:	20 e0       	ldi	r18, 0x00	; 0
     6ac:	30 e0       	ldi	r19, 0x00	; 0
     6ae:	a9 01       	movw	r20, r18
     6b0:	6a e6       	ldi	r22, 0x6A	; 106
     6b2:	78 e1       	ldi	r23, 0x18	; 24
     6b4:	80 e0       	ldi	r24, 0x00	; 0
     6b6:	90 e0       	ldi	r25, 0x00	; 0
     6b8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>

    }
	
    //Down
	PORTB |= (1<<7);
     6bc:	85 b1       	in	r24, 0x05	; 5
     6be:	80 68       	ori	r24, 0x80	; 128
     6c0:	85 b9       	out	0x05, r24	; 5
	if(!(PINB & 0x0080)) {
     6c2:	1f 99       	sbic	0x03, 7	; 3
     6c4:	30 c0       	rjmp	.+96     	; 0x726 <joystickUpDownCenter+0x14e>
		if(self->press) {
     6c6:	8e 85       	ldd	r24, Y+14	; 0x0e
     6c8:	88 23       	and	r24, r24
     6ca:	d9 f0       	breq	.+54     	; 0x702 <joystickUpDownCenter+0x12a>
			AFTER(MSEC(500), self->pGen[self->current],  changeFreqDown, NULL);
     6cc:	ec 85       	ldd	r30, Y+12	; 0x0c
     6ce:	fd 85       	ldd	r31, Y+13	; 0x0d
     6d0:	32 96       	adiw	r30, 0x02	; 2
     6d2:	ee 0f       	add	r30, r30
     6d4:	ff 1f       	adc	r31, r31
     6d6:	ec 0f       	add	r30, r28
     6d8:	fd 1f       	adc	r31, r29
     6da:	00 81       	ld	r16, Z
     6dc:	11 81       	ldd	r17, Z+1	; 0x01
     6de:	c1 2c       	mov	r12, r1
     6e0:	d1 2c       	mov	r13, r1
     6e2:	0f 2e       	mov	r0, r31
     6e4:	f6 e1       	ldi	r31, 0x16	; 22
     6e6:	ef 2e       	mov	r14, r31
     6e8:	f5 e0       	ldi	r31, 0x05	; 5
     6ea:	ff 2e       	mov	r15, r31
     6ec:	f0 2d       	mov	r31, r0
     6ee:	20 e0       	ldi	r18, 0x00	; 0
     6f0:	30 e0       	ldi	r19, 0x00	; 0
     6f2:	a9 01       	movw	r20, r18
     6f4:	69 e0       	ldi	r22, 0x09	; 9
     6f6:	7d e3       	ldi	r23, 0x3D	; 61
     6f8:	80 e0       	ldi	r24, 0x00	; 0
     6fa:	90 e0       	ldi	r25, 0x00	; 0
     6fc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			self->press = false;
     700:	1e 86       	std	Y+14, r1	; 0x0e
		}
		AFTER(MSEC(200), self, bounce, NULL);
     702:	c1 2c       	mov	r12, r1
     704:	d1 2c       	mov	r13, r1
     706:	0f 2e       	mov	r0, r31
     708:	f5 e8       	ldi	r31, 0x85	; 133
     70a:	ef 2e       	mov	r14, r31
     70c:	f2 e0       	ldi	r31, 0x02	; 2
     70e:	ff 2e       	mov	r15, r31
     710:	f0 2d       	mov	r31, r0
     712:	8e 01       	movw	r16, r28
     714:	20 e0       	ldi	r18, 0x00	; 0
     716:	30 e0       	ldi	r19, 0x00	; 0
     718:	a9 01       	movw	r20, r18
     71a:	6a e6       	ldi	r22, 0x6A	; 106
     71c:	78 e1       	ldi	r23, 0x18	; 24
     71e:	80 e0       	ldi	r24, 0x00	; 0
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
    }
	
}
     726:	df 91       	pop	r29
     728:	cf 91       	pop	r28
     72a:	1f 91       	pop	r17
     72c:	0f 91       	pop	r16
     72e:	ff 90       	pop	r15
     730:	ef 90       	pop	r14
     732:	df 90       	pop	r13
     734:	cf 90       	pop	r12
     736:	08 95       	ret

00000738 <joystickLeftRight>:
void bounce(inputHandler *self) {
	self->press = true;
}


void joystickLeftRight(inputHandler *self) {
     738:	cf 92       	push	r12
     73a:	df 92       	push	r13
     73c:	ef 92       	push	r14
     73e:	ff 92       	push	r15
     740:	0f 93       	push	r16
     742:	1f 93       	push	r17
     744:	cf 93       	push	r28
     746:	df 93       	push	r29
     748:	ec 01       	movw	r28, r24
		side to display frequency on. 
		
		Asynchronously invoke method generator change on object self 
		with the chosen side as argument.   */
	
	    PORTE |= (1<<3);
     74a:	8e b1       	in	r24, 0x0e	; 14
     74c:	88 60       	ori	r24, 0x08	; 8
     74e:	8e b9       	out	0x0e, r24	; 14
	    if(!(PINE & (0X0008))) {
     750:	63 99       	sbic	0x0c, 3	; 12
     752:	34 c0       	rjmp	.+104    	; 0x7bc <joystickLeftRight+0x84>
		    /* Pulse generator 2 */
			if (self->current < 1) {
     754:	8c 85       	ldd	r24, Y+12	; 0x0c
     756:	9d 85       	ldd	r25, Y+13	; 0x0d
     758:	18 16       	cp	r1, r24
     75a:	19 06       	cpc	r1, r25
     75c:	7c f1       	brlt	.+94     	; 0x7bc <joystickLeftRight+0x84>
				ASYNC(self->gui[self->current], generatorChange, NULL);
     75e:	fc 01       	movw	r30, r24
     760:	34 96       	adiw	r30, 0x04	; 4
     762:	ee 0f       	add	r30, r30
     764:	ff 1f       	adc	r31, r31
     766:	ec 0f       	add	r30, r28
     768:	fd 1f       	adc	r31, r29
     76a:	00 81       	ld	r16, Z
     76c:	11 81       	ldd	r17, Z+1	; 0x01
     76e:	c1 2c       	mov	r12, r1
     770:	d1 2c       	mov	r13, r1
     772:	0f 2e       	mov	r0, r31
     774:	fd e6       	ldi	r31, 0x6D	; 109
     776:	ef 2e       	mov	r14, r31
     778:	f2 e0       	ldi	r31, 0x02	; 2
     77a:	ff 2e       	mov	r15, r31
     77c:	f0 2d       	mov	r31, r0
     77e:	20 e0       	ldi	r18, 0x00	; 0
     780:	30 e0       	ldi	r19, 0x00	; 0
     782:	a9 01       	movw	r20, r18
     784:	60 e0       	ldi	r22, 0x00	; 0
     786:	70 e0       	ldi	r23, 0x00	; 0
     788:	cb 01       	movw	r24, r22
     78a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
				self->current += 1;
     78e:	8c 85       	ldd	r24, Y+12	; 0x0c
     790:	9d 85       	ldd	r25, Y+13	; 0x0d
     792:	9c 01       	movw	r18, r24
     794:	2f 5f       	subi	r18, 0xFF	; 255
     796:	3f 4f       	sbci	r19, 0xFF	; 255
     798:	3d 87       	std	Y+13, r19	; 0x0d
     79a:	2c 87       	std	Y+12, r18	; 0x0c
				ASYNC(self->gui[self->current], generatorChange, NULL);
     79c:	fc 01       	movw	r30, r24
     79e:	35 96       	adiw	r30, 0x05	; 5
     7a0:	ee 0f       	add	r30, r30
     7a2:	ff 1f       	adc	r31, r31
     7a4:	ec 0f       	add	r30, r28
     7a6:	fd 1f       	adc	r31, r29
     7a8:	00 81       	ld	r16, Z
     7aa:	11 81       	ldd	r17, Z+1	; 0x01
     7ac:	20 e0       	ldi	r18, 0x00	; 0
     7ae:	30 e0       	ldi	r19, 0x00	; 0
     7b0:	a9 01       	movw	r20, r18
     7b2:	60 e0       	ldi	r22, 0x00	; 0
     7b4:	70 e0       	ldi	r23, 0x00	; 0
     7b6:	cb 01       	movw	r24, r22
     7b8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			}
	    }
	    PORTE |= (1<<2);
     7bc:	8e b1       	in	r24, 0x0e	; 14
     7be:	84 60       	ori	r24, 0x04	; 4
     7c0:	8e b9       	out	0x0e, r24	; 14
	    if(!(PINE & (0X0004))) {
     7c2:	62 99       	sbic	0x0c, 2	; 12
     7c4:	33 c0       	rjmp	.+102    	; 0x82c <joystickLeftRight+0xf4>
		    /* Pulse generator 1 */
		if (self->current > 0) {
     7c6:	8c 85       	ldd	r24, Y+12	; 0x0c
     7c8:	9d 85       	ldd	r25, Y+13	; 0x0d
     7ca:	18 16       	cp	r1, r24
     7cc:	19 06       	cpc	r1, r25
     7ce:	74 f5       	brge	.+92     	; 0x82c <joystickLeftRight+0xf4>
			ASYNC(self->gui[self->current], generatorChange, NULL);
     7d0:	fc 01       	movw	r30, r24
     7d2:	34 96       	adiw	r30, 0x04	; 4
     7d4:	ee 0f       	add	r30, r30
     7d6:	ff 1f       	adc	r31, r31
     7d8:	ec 0f       	add	r30, r28
     7da:	fd 1f       	adc	r31, r29
     7dc:	00 81       	ld	r16, Z
     7de:	11 81       	ldd	r17, Z+1	; 0x01
     7e0:	c1 2c       	mov	r12, r1
     7e2:	d1 2c       	mov	r13, r1
     7e4:	0f 2e       	mov	r0, r31
     7e6:	fd e6       	ldi	r31, 0x6D	; 109
     7e8:	ef 2e       	mov	r14, r31
     7ea:	f2 e0       	ldi	r31, 0x02	; 2
     7ec:	ff 2e       	mov	r15, r31
     7ee:	f0 2d       	mov	r31, r0
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	a9 01       	movw	r20, r18
     7f6:	60 e0       	ldi	r22, 0x00	; 0
     7f8:	70 e0       	ldi	r23, 0x00	; 0
     7fa:	cb 01       	movw	r24, r22
     7fc:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			self->current -= 1;
     800:	8c 85       	ldd	r24, Y+12	; 0x0c
     802:	9d 85       	ldd	r25, Y+13	; 0x0d
     804:	9c 01       	movw	r18, r24
     806:	21 50       	subi	r18, 0x01	; 1
     808:	31 09       	sbc	r19, r1
     80a:	3d 87       	std	Y+13, r19	; 0x0d
     80c:	2c 87       	std	Y+12, r18	; 0x0c
			ASYNC(self->gui[self->current], generatorChange, NULL);
     80e:	03 96       	adiw	r24, 0x03	; 3
     810:	88 0f       	add	r24, r24
     812:	99 1f       	adc	r25, r25
     814:	c8 0f       	add	r28, r24
     816:	d9 1f       	adc	r29, r25
     818:	08 81       	ld	r16, Y
     81a:	19 81       	ldd	r17, Y+1	; 0x01
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	a9 01       	movw	r20, r18
     822:	60 e0       	ldi	r22, 0x00	; 0
     824:	70 e0       	ldi	r23, 0x00	; 0
     826:	cb 01       	movw	r24, r22
     828:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
		}
	    }
	}
     82c:	df 91       	pop	r29
     82e:	cf 91       	pop	r28
     830:	1f 91       	pop	r17
     832:	0f 91       	pop	r16
     834:	ff 90       	pop	r15
     836:	ef 90       	pop	r14
     838:	df 90       	pop	r13
     83a:	cf 90       	pop	r12
     83c:	08 95       	ret

0000083e <main>:


int main(void){	
	
	
	pGen[0].pSender = &pSender;
     83e:	e9 e1       	ldi	r30, 0x19	; 25
     840:	f1 e0       	ldi	r31, 0x01	; 1
     842:	8c e4       	ldi	r24, 0x4C	; 76
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	90 87       	std	Z+8, r25	; 0x08
     848:	87 83       	std	Z+7, r24	; 0x07
	pGen[1].pSender = &pSender;
     84a:	93 8b       	std	Z+19, r25	; 0x13
     84c:	82 8b       	std	Z+18, r24	; 0x12
	pGen[0].gui = &gui[0];
     84e:	2f e0       	ldi	r18, 0x0F	; 15
     850:	31 e0       	ldi	r19, 0x01	; 1
     852:	32 87       	std	Z+10, r19	; 0x0a
     854:	21 87       	std	Z+9, r18	; 0x09
	pGen[1].gui = &gui[1];
     856:	84 e1       	ldi	r24, 0x14	; 20
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	95 8b       	std	Z+21, r25	; 0x15
     85c:	84 8b       	std	Z+20, r24	; 0x14

    handler.pGen[0] = &pGen[0];
     85e:	a0 e0       	ldi	r26, 0x00	; 0
     860:	b1 e0       	ldi	r27, 0x01	; 1
     862:	15 96       	adiw	r26, 0x05	; 5
     864:	fc 93       	st	X, r31
     866:	ee 93       	st	-X, r30
     868:	14 97       	sbiw	r26, 0x04	; 4
	handler.pGen[1] = &pGen[1];
     86a:	44 e2       	ldi	r20, 0x24	; 36
     86c:	51 e0       	ldi	r21, 0x01	; 1
     86e:	17 96       	adiw	r26, 0x07	; 7
     870:	5c 93       	st	X, r21
     872:	4e 93       	st	-X, r20
     874:	16 97       	sbiw	r26, 0x06	; 6
    handler.gui[0] = &gui[0];
     876:	19 96       	adiw	r26, 0x09	; 9
     878:	3c 93       	st	X, r19
     87a:	2e 93       	st	-X, r18
     87c:	18 97       	sbiw	r26, 0x08	; 8
	handler.gui[1] = &gui[1];
     87e:	1b 96       	adiw	r26, 0x0b	; 11
     880:	9c 93       	st	X, r25
     882:	8e 93       	st	-X, r24
     884:	1a 97       	sbiw	r26, 0x0a	; 10
	
	INSTALL(&handler, joystickUpDownCenter, IRQ_PCINT1);
     886:	42 e0       	ldi	r20, 0x02	; 2
     888:	6c ee       	ldi	r22, 0xEC	; 236
     88a:	72 e0       	ldi	r23, 0x02	; 2
     88c:	cd 01       	movw	r24, r26
     88e:	0e 94 da 11 	call	0x23b4	; 0x23b4 <install>
	INSTALL(&handler, joystickLeftRight, IRQ_PCINT0);
     892:	41 e0       	ldi	r20, 0x01	; 1
     894:	6c e9       	ldi	r22, 0x9C	; 156
     896:	73 e0       	ldi	r23, 0x03	; 3
     898:	80 e0       	ldi	r24, 0x00	; 0
     89a:	91 e0       	ldi	r25, 0x01	; 1
     89c:	0e 94 da 11 	call	0x23b4	; 0x23b4 <install>
	
	TINYTIMBER(&handler, initialize, NULL);
     8a0:	40 e0       	ldi	r20, 0x00	; 0
     8a2:	50 e0       	ldi	r21, 0x00	; 0
     8a4:	69 e8       	ldi	r22, 0x89	; 137
     8a6:	72 e0       	ldi	r23, 0x02	; 2
     8a8:	80 e0       	ldi	r24, 0x00	; 0
     8aa:	91 e0       	ldi	r25, 0x01	; 1
     8ac:	0e 94 f5 11 	call	0x23ea	; 0x23ea <tinytimber>
}
     8b0:	80 e0       	ldi	r24, 0x00	; 0
     8b2:	90 e0       	ldi	r25, 0x00	; 0
     8b4:	08 95       	ret

000008b6 <generatePulse>:
#include "pulseSender.h"
#include "TinyTimber.h"
#include "Gui.h"


void generatePulse(pulseGenerator *self) {
     8b6:	cf 92       	push	r12
     8b8:	df 92       	push	r13
     8ba:	ef 92       	push	r14
     8bc:	ff 92       	push	r15
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	ec 01       	movw	r28, r24
    if (self->freq > 0) {
     8c8:	8d 81       	ldd	r24, Y+5	; 0x05
     8ca:	88 23       	and	r24, r24
     8cc:	09 f4       	brne	.+2      	; 0x8d0 <generatePulse+0x1a>
     8ce:	40 c0       	rjmp	.+128    	; 0x950 <generatePulse+0x9a>
        ASYNC(self->pSender, sendPulse, self->pin);
     8d0:	cc 80       	ldd	r12, Y+4	; 0x04
     8d2:	0f 81       	ldd	r16, Y+7	; 0x07
     8d4:	18 85       	ldd	r17, Y+8	; 0x08
     8d6:	d1 2c       	mov	r13, r1
     8d8:	0f 2e       	mov	r0, r31
     8da:	fe e7       	ldi	r31, 0x7E	; 126
     8dc:	ef 2e       	mov	r14, r31
     8de:	f5 e0       	ldi	r31, 0x05	; 5
     8e0:	ff 2e       	mov	r15, r31
     8e2:	f0 2d       	mov	r31, r0
     8e4:	20 e0       	ldi	r18, 0x00	; 0
     8e6:	30 e0       	ldi	r19, 0x00	; 0
     8e8:	a9 01       	movw	r20, r18
     8ea:	60 e0       	ldi	r22, 0x00	; 0
     8ec:	70 e0       	ldi	r23, 0x00	; 0
     8ee:	cb 01       	movw	r24, r22
     8f0:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
        AFTER(MSEC(1000/(self->freq*2)), self, generatePulse, NULL);
     8f4:	6d 81       	ldd	r22, Y+5	; 0x05
     8f6:	70 e0       	ldi	r23, 0x00	; 0
     8f8:	66 0f       	add	r22, r22
     8fa:	77 1f       	adc	r23, r23
     8fc:	88 ee       	ldi	r24, 0xE8	; 232
     8fe:	93 e0       	ldi	r25, 0x03	; 3
     900:	0e 94 0c 12 	call	0x2418	; 0x2418 <__divmodhi4>
     904:	2d e7       	ldi	r18, 0x7D	; 125
     906:	30 e0       	ldi	r19, 0x00	; 0
     908:	db 01       	movw	r26, r22
     90a:	0e 94 26 12 	call	0x244c	; 0x244c <__usmulhisi3>
     90e:	8b 01       	movw	r16, r22
     910:	9c 01       	movw	r18, r24
     912:	99 23       	and	r25, r25
     914:	24 f4       	brge	.+8      	; 0x91e <generatePulse+0x68>
     916:	0d 5f       	subi	r16, 0xFD	; 253
     918:	1f 4f       	sbci	r17, 0xFF	; 255
     91a:	2f 4f       	sbci	r18, 0xFF	; 255
     91c:	3f 4f       	sbci	r19, 0xFF	; 255
     91e:	c9 01       	movw	r24, r18
     920:	b8 01       	movw	r22, r16
     922:	95 95       	asr	r25
     924:	87 95       	ror	r24
     926:	77 95       	ror	r23
     928:	67 95       	ror	r22
     92a:	95 95       	asr	r25
     92c:	87 95       	ror	r24
     92e:	77 95       	ror	r23
     930:	67 95       	ror	r22
     932:	c1 2c       	mov	r12, r1
     934:	d1 2c       	mov	r13, r1
     936:	0f 2e       	mov	r0, r31
     938:	fb e5       	ldi	r31, 0x5B	; 91
     93a:	ef 2e       	mov	r14, r31
     93c:	f4 e0       	ldi	r31, 0x04	; 4
     93e:	ff 2e       	mov	r15, r31
     940:	f0 2d       	mov	r31, r0
     942:	8e 01       	movw	r16, r28
     944:	20 e0       	ldi	r18, 0x00	; 0
     946:	30 e0       	ldi	r19, 0x00	; 0
     948:	a9 01       	movw	r20, r18
     94a:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
     94e:	24 c0       	rjmp	.+72     	; 0x998 <generatePulse+0xe2>

    } else {
		AFTER(MSEC(1000/(1*2)), self, generatePulse, NULL);
     950:	c1 2c       	mov	r12, r1
     952:	d1 2c       	mov	r13, r1
     954:	0f 2e       	mov	r0, r31
     956:	fb e5       	ldi	r31, 0x5B	; 91
     958:	ef 2e       	mov	r14, r31
     95a:	f4 e0       	ldi	r31, 0x04	; 4
     95c:	ff 2e       	mov	r15, r31
     95e:	f0 2d       	mov	r31, r0
     960:	8e 01       	movw	r16, r28
     962:	20 e0       	ldi	r18, 0x00	; 0
     964:	30 e0       	ldi	r19, 0x00	; 0
     966:	a9 01       	movw	r20, r18
     968:	69 e0       	ldi	r22, 0x09	; 9
     96a:	7d e3       	ldi	r23, 0x3D	; 61
     96c:	80 e0       	ldi	r24, 0x00	; 0
     96e:	90 e0       	ldi	r25, 0x00	; 0
     970:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
        ASYNC(self->pSender, resetPin, self->pin);
     974:	cc 80       	ldd	r12, Y+4	; 0x04
     976:	0f 81       	ldd	r16, Y+7	; 0x07
     978:	18 85       	ldd	r17, Y+8	; 0x08
     97a:	d1 2c       	mov	r13, r1
     97c:	0f 2e       	mov	r0, r31
     97e:	f9 e8       	ldi	r31, 0x89	; 137
     980:	ef 2e       	mov	r14, r31
     982:	f5 e0       	ldi	r31, 0x05	; 5
     984:	ff 2e       	mov	r15, r31
     986:	f0 2d       	mov	r31, r0
     988:	20 e0       	ldi	r18, 0x00	; 0
     98a:	30 e0       	ldi	r19, 0x00	; 0
     98c:	a9 01       	movw	r20, r18
     98e:	60 e0       	ldi	r22, 0x00	; 0
     990:	70 e0       	ldi	r23, 0x00	; 0
     992:	cb 01       	movw	r24, r22
     994:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
    }
}
     998:	df 91       	pop	r29
     99a:	cf 91       	pop	r28
     99c:	1f 91       	pop	r17
     99e:	0f 91       	pop	r16
     9a0:	ff 90       	pop	r15
     9a2:	ef 90       	pop	r14
     9a4:	df 90       	pop	r13
     9a6:	cf 90       	pop	r12
     9a8:	08 95       	ret

000009aa <changeFreqUp>:
		self->freq = self->savedFreq;
	}
	ASYNC(self->gui, printAt, self->freq);
}

void changeFreqUp(pulseGenerator *self){
     9aa:	cf 92       	push	r12
     9ac:	df 92       	push	r13
     9ae:	ef 92       	push	r14
     9b0:	ff 92       	push	r15
     9b2:	0f 93       	push	r16
     9b4:	1f 93       	push	r17
     9b6:	cf 93       	push	r28
     9b8:	df 93       	push	r29
     9ba:	fc 01       	movw	r30, r24
	if(self->freq < 99){
     9bc:	95 81       	ldd	r25, Z+5	; 0x05
     9be:	93 36       	cpi	r25, 0x63	; 99
     9c0:	60 f5       	brcc	.+88     	; 0xa1a <changeFreqUp+0x70>
     9c2:	ef 01       	movw	r28, r30
		self->freq += 1;
     9c4:	9f 5f       	subi	r25, 0xFF	; 255
     9c6:	95 83       	std	Z+5, r25	; 0x05
		ASYNC(self->gui, printAt, self->freq);
     9c8:	01 85       	ldd	r16, Z+9	; 0x09
     9ca:	12 85       	ldd	r17, Z+10	; 0x0a
     9cc:	c9 2e       	mov	r12, r25
     9ce:	d1 2c       	mov	r13, r1
     9d0:	0f 2e       	mov	r0, r31
     9d2:	f7 e3       	ldi	r31, 0x37	; 55
     9d4:	ef 2e       	mov	r14, r31
     9d6:	f2 e0       	ldi	r31, 0x02	; 2
     9d8:	ff 2e       	mov	r15, r31
     9da:	f0 2d       	mov	r31, r0
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	a9 01       	movw	r20, r18
     9e2:	60 e0       	ldi	r22, 0x00	; 0
     9e4:	70 e0       	ldi	r23, 0x00	; 0
     9e6:	cb 01       	movw	r24, r22
     9e8:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
		PORTB |= (1<<6);
     9ec:	85 b1       	in	r24, 0x05	; 5
     9ee:	80 64       	ori	r24, 0x40	; 64
     9f0:	85 b9       	out	0x05, r24	; 5
		if(!(PINB & 0x0040)) { // 
     9f2:	1e 99       	sbic	0x03, 6	; 3
     9f4:	12 c0       	rjmp	.+36     	; 0xa1a <changeFreqUp+0x70>
			AFTER(MSEC(200), self,  changeFreqUp, NULL);
     9f6:	c1 2c       	mov	r12, r1
     9f8:	d1 2c       	mov	r13, r1
     9fa:	0f 2e       	mov	r0, r31
     9fc:	f5 ed       	ldi	r31, 0xD5	; 213
     9fe:	ef 2e       	mov	r14, r31
     a00:	f4 e0       	ldi	r31, 0x04	; 4
     a02:	ff 2e       	mov	r15, r31
     a04:	f0 2d       	mov	r31, r0
     a06:	8e 01       	movw	r16, r28
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	a9 01       	movw	r20, r18
     a0e:	6a e6       	ldi	r22, 0x6A	; 106
     a10:	78 e1       	ldi	r23, 0x18	; 24
     a12:	80 e0       	ldi	r24, 0x00	; 0
     a14:	90 e0       	ldi	r25, 0x00	; 0
     a16:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
		}
	}
	

}
     a1a:	df 91       	pop	r29
     a1c:	cf 91       	pop	r28
     a1e:	1f 91       	pop	r17
     a20:	0f 91       	pop	r16
     a22:	ff 90       	pop	r15
     a24:	ef 90       	pop	r14
     a26:	df 90       	pop	r13
     a28:	cf 90       	pop	r12
     a2a:	08 95       	ret

00000a2c <changeFreqDown>:

void changeFreqDown(pulseGenerator *self){
     a2c:	cf 92       	push	r12
     a2e:	df 92       	push	r13
     a30:	ef 92       	push	r14
     a32:	ff 92       	push	r15
     a34:	0f 93       	push	r16
     a36:	1f 93       	push	r17
     a38:	cf 93       	push	r28
     a3a:	df 93       	push	r29
	
	if(self->freq > 0) {
     a3c:	fc 01       	movw	r30, r24
     a3e:	c5 80       	ldd	r12, Z+5	; 0x05
     a40:	cc 20       	and	r12, r12
     a42:	59 f1       	breq	.+86     	; 0xa9a <changeFreqDown+0x6e>
     a44:	ec 01       	movw	r28, r24
		self->freq -= 1;
     a46:	ca 94       	dec	r12
     a48:	c5 82       	std	Z+5, r12	; 0x05
		ASYNC(self->gui, printAt, self->freq);
     a4a:	01 85       	ldd	r16, Z+9	; 0x09
     a4c:	12 85       	ldd	r17, Z+10	; 0x0a
     a4e:	d1 2c       	mov	r13, r1
     a50:	0f 2e       	mov	r0, r31
     a52:	f7 e3       	ldi	r31, 0x37	; 55
     a54:	ef 2e       	mov	r14, r31
     a56:	f2 e0       	ldi	r31, 0x02	; 2
     a58:	ff 2e       	mov	r15, r31
     a5a:	f0 2d       	mov	r31, r0
     a5c:	20 e0       	ldi	r18, 0x00	; 0
     a5e:	30 e0       	ldi	r19, 0x00	; 0
     a60:	a9 01       	movw	r20, r18
     a62:	60 e0       	ldi	r22, 0x00	; 0
     a64:	70 e0       	ldi	r23, 0x00	; 0
     a66:	cb 01       	movw	r24, r22
     a68:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
			
			
		PORTB |= (1<<7);
     a6c:	85 b1       	in	r24, 0x05	; 5
     a6e:	80 68       	ori	r24, 0x80	; 128
     a70:	85 b9       	out	0x05, r24	; 5
		if(!(PINB & 0x0080)) { // Up
     a72:	1f 99       	sbic	0x03, 7	; 3
     a74:	12 c0       	rjmp	.+36     	; 0xa9a <changeFreqDown+0x6e>
			AFTER(MSEC(200), self,  changeFreqDown, NULL);
     a76:	c1 2c       	mov	r12, r1
     a78:	d1 2c       	mov	r13, r1
     a7a:	0f 2e       	mov	r0, r31
     a7c:	f6 e1       	ldi	r31, 0x16	; 22
     a7e:	ef 2e       	mov	r14, r31
     a80:	f5 e0       	ldi	r31, 0x05	; 5
     a82:	ff 2e       	mov	r15, r31
     a84:	f0 2d       	mov	r31, r0
     a86:	8e 01       	movw	r16, r28
     a88:	20 e0       	ldi	r18, 0x00	; 0
     a8a:	30 e0       	ldi	r19, 0x00	; 0
     a8c:	a9 01       	movw	r20, r18
     a8e:	6a e6       	ldi	r22, 0x6A	; 106
     a90:	78 e1       	ldi	r23, 0x18	; 24
     a92:	80 e0       	ldi	r24, 0x00	; 0
     a94:	90 e0       	ldi	r25, 0x00	; 0
     a96:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
		}
	}
	

}
     a9a:	df 91       	pop	r29
     a9c:	cf 91       	pop	r28
     a9e:	1f 91       	pop	r17
     aa0:	0f 91       	pop	r16
     aa2:	ff 90       	pop	r15
     aa4:	ef 90       	pop	r14
     aa6:	df 90       	pop	r13
     aa8:	cf 90       	pop	r12
     aaa:	08 95       	ret

00000aac <saveFreq>:
		AFTER(MSEC(1000/(1*2)), self, generatePulse, NULL);
        ASYNC(self->pSender, resetPin, self->pin);
    }
}

void saveFreq(pulseGenerator *self) {
     aac:	cf 92       	push	r12
     aae:	df 92       	push	r13
     ab0:	ef 92       	push	r14
     ab2:	ff 92       	push	r15
     ab4:	0f 93       	push	r16
     ab6:	1f 93       	push	r17
     ab8:	fc 01       	movw	r30, r24
	if (self->freq > 0) {
     aba:	85 81       	ldd	r24, Z+5	; 0x05
     abc:	88 23       	and	r24, r24
     abe:	19 f0       	breq	.+6      	; 0xac6 <saveFreq+0x1a>
		self->savedFreq = self->freq;
     ac0:	86 83       	std	Z+6, r24	; 0x06
		self->freq = 0;
     ac2:	15 82       	std	Z+5, r1	; 0x05
     ac4:	02 c0       	rjmp	.+4      	; 0xaca <saveFreq+0x1e>
	}
	else {
		self->freq = self->savedFreq;
     ac6:	86 81       	ldd	r24, Z+6	; 0x06
     ac8:	85 83       	std	Z+5, r24	; 0x05
	}
	ASYNC(self->gui, printAt, self->freq);
     aca:	c5 80       	ldd	r12, Z+5	; 0x05
     acc:	01 85       	ldd	r16, Z+9	; 0x09
     ace:	12 85       	ldd	r17, Z+10	; 0x0a
     ad0:	d1 2c       	mov	r13, r1
     ad2:	0f 2e       	mov	r0, r31
     ad4:	f7 e3       	ldi	r31, 0x37	; 55
     ad6:	ef 2e       	mov	r14, r31
     ad8:	f2 e0       	ldi	r31, 0x02	; 2
     ada:	ff 2e       	mov	r15, r31
     adc:	f0 2d       	mov	r31, r0
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	30 e0       	ldi	r19, 0x00	; 0
     ae2:	a9 01       	movw	r20, r18
     ae4:	60 e0       	ldi	r22, 0x00	; 0
     ae6:	70 e0       	ldi	r23, 0x00	; 0
     ae8:	cb 01       	movw	r24, r22
     aea:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
}
     aee:	1f 91       	pop	r17
     af0:	0f 91       	pop	r16
     af2:	ff 90       	pop	r15
     af4:	ef 90       	pop	r14
     af6:	df 90       	pop	r13
     af8:	cf 90       	pop	r12
     afa:	08 95       	ret

00000afc <sendPulse>:


void sendPulse(pulseSender *self, uint8_t pin){

    //Invert bit at position pin
    PORTE ^= 0x1 << pin;
     afc:	2e b1       	in	r18, 0x0e	; 14
     afe:	81 e0       	ldi	r24, 0x01	; 1
     b00:	90 e0       	ldi	r25, 0x00	; 0
     b02:	02 c0       	rjmp	.+4      	; 0xb08 <sendPulse+0xc>
     b04:	88 0f       	add	r24, r24
     b06:	99 1f       	adc	r25, r25
     b08:	6a 95       	dec	r22
     b0a:	e2 f7       	brpl	.-8      	; 0xb04 <sendPulse+0x8>
     b0c:	82 27       	eor	r24, r18
     b0e:	8e b9       	out	0x0e, r24	; 14
     b10:	08 95       	ret

00000b12 <resetPin>:
}   

void resetPin(pulseSender *self, uint8_t pin) {
    PORTE &= ~(0x1 << pin);
     b12:	2e b1       	in	r18, 0x0e	; 14
     b14:	81 e0       	ldi	r24, 0x01	; 1
     b16:	90 e0       	ldi	r25, 0x00	; 0
     b18:	02 c0       	rjmp	.+4      	; 0xb1e <resetPin+0xc>
     b1a:	88 0f       	add	r24, r24
     b1c:	99 1f       	adc	r25, r25
     b1e:	6a 95       	dec	r22
     b20:	e2 f7       	brpl	.-8      	; 0xb1a <resetPin+0x8>
     b22:	80 95       	com	r24
     b24:	82 23       	and	r24, r18
     b26:	8e b9       	out	0x0e, r24	; 14
     b28:	08 95       	ret

00000b2a <initialize>:
    Time now;
    DISABLE(status);
    TIMERGET(now);
    ENABLE(status);
    return now - (status ? current->msg->baseline : timestamp);
}
     b2a:	cf 93       	push	r28
     b2c:	df 93       	push	r29
     b2e:	00 d0       	rcall	.+0      	; 0xb30 <initialize+0x6>
     b30:	00 d0       	rcall	.+0      	; 0xb32 <initialize+0x8>
     b32:	cd b7       	in	r28, 0x3d	; 61
     b34:	de b7       	in	r29, 0x3e	; 62
     b36:	80 e0       	ldi	r24, 0x00	; 0
     b38:	90 e0       	ldi	r25, 0x00	; 0
     b3a:	18 c0       	rjmp	.+48     	; 0xb6c <initialize+0x42>
     b3c:	ac 01       	movw	r20, r24
     b3e:	4f 5f       	subi	r20, 0xFF	; 255
     b40:	5f 4f       	sbci	r21, 0xFF	; 255
     b42:	9a 01       	movw	r18, r20
     b44:	22 95       	swap	r18
     b46:	32 95       	swap	r19
     b48:	30 7f       	andi	r19, 0xF0	; 240
     b4a:	32 27       	eor	r19, r18
     b4c:	20 7f       	andi	r18, 0xF0	; 240
     b4e:	32 27       	eor	r19, r18
     b50:	2d 5c       	subi	r18, 0xCD	; 205
     b52:	3d 4f       	sbci	r19, 0xFD	; 253
     b54:	82 95       	swap	r24
     b56:	92 95       	swap	r25
     b58:	90 7f       	andi	r25, 0xF0	; 240
     b5a:	98 27       	eor	r25, r24
     b5c:	80 7f       	andi	r24, 0xF0	; 240
     b5e:	98 27       	eor	r25, r24
     b60:	fc 01       	movw	r30, r24
     b62:	ed 5c       	subi	r30, 0xCD	; 205
     b64:	fd 4f       	sbci	r31, 0xFD	; 253
     b66:	31 83       	std	Z+1, r19	; 0x01
     b68:	20 83       	st	Z, r18
     b6a:	ca 01       	movw	r24, r20
     b6c:	8e 30       	cpi	r24, 0x0E	; 14
     b6e:	91 05       	cpc	r25, r1
     b70:	2c f3       	brlt	.-54     	; 0xb3c <initialize+0x12>
     b72:	10 92 14 03 	sts	0x0314, r1	; 0x800314 <messages+0xe1>
     b76:	10 92 13 03 	sts	0x0313, r1	; 0x800313 <messages+0xe0>
     b7a:	80 e0       	ldi	r24, 0x00	; 0
     b7c:	90 e0       	ldi	r25, 0x00	; 0
     b7e:	15 c0       	rjmp	.+42     	; 0xbaa <initialize+0x80>
     b80:	ac 01       	movw	r20, r24
     b82:	4f 5f       	subi	r20, 0xFF	; 255
     b84:	5f 4f       	sbci	r21, 0xFF	; 255
     b86:	6d e1       	ldi	r22, 0x1D	; 29
     b88:	64 9f       	mul	r22, r20
     b8a:	90 01       	movw	r18, r0
     b8c:	65 9f       	mul	r22, r21
     b8e:	30 0d       	add	r19, r0
     b90:	11 24       	eor	r1, r1
     b92:	22 58       	subi	r18, 0x82	; 130
     b94:	3e 4f       	sbci	r19, 0xFE	; 254
     b96:	68 9f       	mul	r22, r24
     b98:	f0 01       	movw	r30, r0
     b9a:	69 9f       	mul	r22, r25
     b9c:	f0 0d       	add	r31, r0
     b9e:	11 24       	eor	r1, r1
     ba0:	e2 58       	subi	r30, 0x82	; 130
     ba2:	fe 4f       	sbci	r31, 0xFE	; 254
     ba4:	31 83       	std	Z+1, r19	; 0x01
     ba6:	20 83       	st	Z, r18
     ba8:	ca 01       	movw	r24, r20
     baa:	83 30       	cpi	r24, 0x03	; 3
     bac:	91 05       	cpc	r25, r1
     bae:	44 f3       	brlt	.-48     	; 0xb80 <initialize+0x56>
     bb0:	10 92 d6 01 	sts	0x01D6, r1	; 0x8001d6 <threads+0x58>
     bb4:	10 92 d5 01 	sts	0x01D5, r1	; 0x8001d5 <threads+0x57>
     bb8:	1a 82       	std	Y+2, r1	; 0x02
     bba:	19 82       	std	Y+1, r1	; 0x01
     bbc:	32 c0       	rjmp	.+100    	; 0xc22 <initialize+0xf8>
     bbe:	2d e1       	ldi	r18, 0x1D	; 29
     bc0:	49 81       	ldd	r20, Y+1	; 0x01
     bc2:	5a 81       	ldd	r21, Y+2	; 0x02
     bc4:	24 9f       	mul	r18, r20
     bc6:	c0 01       	movw	r24, r0
     bc8:	25 9f       	mul	r18, r21
     bca:	90 0d       	add	r25, r0
     bcc:	11 24       	eor	r1, r1
     bce:	fc 01       	movw	r30, r24
     bd0:	ec 57       	subi	r30, 0x7C	; 124
     bd2:	fe 4f       	sbci	r31, 0xFE	; 254
     bd4:	fc 83       	std	Y+4, r31	; 0x04
     bd6:	eb 83       	std	Y+3, r30	; 0x03
     bd8:	cf 01       	movw	r24, r30
     bda:	0e 94 50 12 	call	0x24a0	; 0x24a0 <setjmp>
     bde:	20 e6       	ldi	r18, 0x60	; 96
     be0:	49 81       	ldd	r20, Y+1	; 0x01
     be2:	5a 81       	ldd	r21, Y+2	; 0x02
     be4:	24 9f       	mul	r18, r20
     be6:	c0 01       	movw	r24, r0
     be8:	25 9f       	mul	r18, r21
     bea:	90 0d       	add	r25, r0
     bec:	11 24       	eor	r1, r1
     bee:	81 58       	subi	r24, 0x81	; 129
     bf0:	9c 4f       	sbci	r25, 0xFC	; 252
     bf2:	eb 81       	ldd	r30, Y+3	; 0x03
     bf4:	fc 81       	ldd	r31, Y+4	; 0x04
     bf6:	91 8b       	std	Z+17, r25	; 0x11
     bf8:	80 8b       	std	Z+16, r24	; 0x10
     bfa:	93 8b       	std	Z+19, r25	; 0x13
     bfc:	82 8b       	std	Z+18, r24	; 0x12
     bfe:	82 e8       	ldi	r24, 0x82	; 130
     c00:	91 e1       	ldi	r25, 0x11	; 17
     c02:	96 8b       	std	Z+22, r25	; 0x16
     c04:	85 8b       	std	Z+21, r24	; 0x15
     c06:	8d e1       	ldi	r24, 0x1D	; 29
     c08:	84 9f       	mul	r24, r20
     c0a:	f0 01       	movw	r30, r0
     c0c:	85 9f       	mul	r24, r21
     c0e:	f0 0d       	add	r31, r0
     c10:	11 24       	eor	r1, r1
     c12:	e2 58       	subi	r30, 0x82	; 130
     c14:	fe 4f       	sbci	r31, 0xFE	; 254
     c16:	15 82       	std	Z+5, r1	; 0x05
     c18:	14 82       	std	Z+4, r1	; 0x04
     c1a:	4f 5f       	subi	r20, 0xFF	; 255
     c1c:	5f 4f       	sbci	r21, 0xFF	; 255
     c1e:	5a 83       	std	Y+2, r21	; 0x02
     c20:	49 83       	std	Y+1, r20	; 0x01
     c22:	29 81       	ldd	r18, Y+1	; 0x01
     c24:	3a 81       	ldd	r19, Y+2	; 0x02
     c26:	24 30       	cpi	r18, 0x04	; 4
     c28:	31 05       	cpc	r19, r1
     c2a:	4c f2       	brlt	.-110    	; 0xbbe <initialize+0x94>
     c2c:	e6 e1       	ldi	r30, 0x16	; 22
     c2e:	f2 e0       	ldi	r31, 0x02	; 2
     c30:	11 82       	std	Z+1, r1	; 0x01
     c32:	10 82       	st	Z, r1
     c34:	15 82       	std	Z+5, r1	; 0x05
     c36:	14 82       	std	Z+4, r1	; 0x04
     c38:	13 82       	std	Z+3, r1	; 0x03
     c3a:	12 82       	std	Z+2, r1	; 0x02
     c3c:	e1 e6       	ldi	r30, 0x61	; 97
     c3e:	f0 e0       	ldi	r31, 0x00	; 0
     c40:	80 e8       	ldi	r24, 0x80	; 128
     c42:	80 83       	st	Z, r24
     c44:	10 82       	st	Z, r1
     c46:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     c4a:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     c4e:	84 e0       	ldi	r24, 0x04	; 4
     c50:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7fc081>
     c54:	81 e0       	ldi	r24, 0x01	; 1
     c56:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7fc06f>
     c5a:	0f 90       	pop	r0
     c5c:	0f 90       	pop	r0
     c5e:	0f 90       	pop	r0
     c60:	0f 90       	pop	r0
     c62:	df 91       	pop	r29
     c64:	cf 91       	pop	r28
     c66:	08 95       	ret

00000c68 <dispatch>:
     c68:	cf 93       	push	r28
     c6a:	df 93       	push	r29
     c6c:	00 d0       	rcall	.+0      	; 0xc6e <dispatch+0x6>
     c6e:	cd b7       	in	r28, 0x3d	; 61
     c70:	de b7       	in	r29, 0x3e	; 62
     c72:	9a 83       	std	Y+2, r25	; 0x02
     c74:	89 83       	std	Y+1, r24	; 0x01
     c76:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <current>
     c7a:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <current+0x1>
     c7e:	06 96       	adiw	r24, 0x06	; 6
     c80:	0e 94 50 12 	call	0x24a0	; 0x24a0 <setjmp>
     c84:	89 2b       	or	r24, r25
     c86:	59 f4       	brne	.+22     	; 0xc9e <dispatch+0x36>
     c88:	89 81       	ldd	r24, Y+1	; 0x01
     c8a:	9a 81       	ldd	r25, Y+2	; 0x02
     c8c:	90 93 30 01 	sts	0x0130, r25	; 0x800130 <current+0x1>
     c90:	80 93 2f 01 	sts	0x012F, r24	; 0x80012f <current>
     c94:	61 e0       	ldi	r22, 0x01	; 1
     c96:	70 e0       	ldi	r23, 0x00	; 0
     c98:	06 96       	adiw	r24, 0x06	; 6
     c9a:	0e 94 70 12 	call	0x24e0	; 0x24e0 <longjmp>
     c9e:	0f 90       	pop	r0
     ca0:	0f 90       	pop	r0
     ca2:	df 91       	pop	r29
     ca4:	cf 91       	pop	r28
     ca6:	08 95       	ret

00000ca8 <enqueueByDeadline>:
     ca8:	0f 93       	push	r16
     caa:	1f 93       	push	r17
     cac:	cf 93       	push	r28
     cae:	df 93       	push	r29
     cb0:	dc 01       	movw	r26, r24
     cb2:	cb 01       	movw	r24, r22
     cb4:	eb 01       	movw	r28, r22
     cb6:	e8 81       	ld	r30, Y
     cb8:	f9 81       	ldd	r31, Y+1	; 0x01
     cba:	c0 e0       	ldi	r28, 0x00	; 0
     cbc:	d0 e0       	ldi	r29, 0x00	; 0
     cbe:	04 c0       	rjmp	.+8      	; 0xcc8 <enqueueByDeadline+0x20>
     cc0:	ef 01       	movw	r28, r30
     cc2:	01 90       	ld	r0, Z+
     cc4:	f0 81       	ld	r31, Z
     cc6:	e0 2d       	mov	r30, r0
     cc8:	30 97       	sbiw	r30, 0x00	; 0
     cca:	79 f0       	breq	.+30     	; 0xcea <enqueueByDeadline+0x42>
     ccc:	06 81       	ldd	r16, Z+6	; 0x06
     cce:	17 81       	ldd	r17, Z+7	; 0x07
     cd0:	20 85       	ldd	r18, Z+8	; 0x08
     cd2:	31 85       	ldd	r19, Z+9	; 0x09
     cd4:	16 96       	adiw	r26, 0x06	; 6
     cd6:	4d 91       	ld	r20, X+
     cd8:	5d 91       	ld	r21, X+
     cda:	6d 91       	ld	r22, X+
     cdc:	7c 91       	ld	r23, X
     cde:	19 97       	sbiw	r26, 0x09	; 9
     ce0:	40 17       	cp	r20, r16
     ce2:	51 07       	cpc	r21, r17
     ce4:	62 07       	cpc	r22, r18
     ce6:	73 07       	cpc	r23, r19
     ce8:	5c f7       	brge	.-42     	; 0xcc0 <enqueueByDeadline+0x18>
     cea:	11 96       	adiw	r26, 0x01	; 1
     cec:	fc 93       	st	X, r31
     cee:	ee 93       	st	-X, r30
     cf0:	20 97       	sbiw	r28, 0x00	; 0
     cf2:	21 f4       	brne	.+8      	; 0xcfc <enqueueByDeadline+0x54>
     cf4:	fc 01       	movw	r30, r24
     cf6:	b1 83       	std	Z+1, r27	; 0x01
     cf8:	a0 83       	st	Z, r26
     cfa:	02 c0       	rjmp	.+4      	; 0xd00 <enqueueByDeadline+0x58>
     cfc:	b9 83       	std	Y+1, r27	; 0x01
     cfe:	a8 83       	st	Y, r26
     d00:	df 91       	pop	r29
     d02:	cf 91       	pop	r28
     d04:	1f 91       	pop	r17
     d06:	0f 91       	pop	r16
     d08:	08 95       	ret

00000d0a <enqueueByBaseline>:
     d0a:	0f 93       	push	r16
     d0c:	1f 93       	push	r17
     d0e:	cf 93       	push	r28
     d10:	df 93       	push	r29
     d12:	dc 01       	movw	r26, r24
     d14:	cb 01       	movw	r24, r22
     d16:	eb 01       	movw	r28, r22
     d18:	e8 81       	ld	r30, Y
     d1a:	f9 81       	ldd	r31, Y+1	; 0x01
     d1c:	c0 e0       	ldi	r28, 0x00	; 0
     d1e:	d0 e0       	ldi	r29, 0x00	; 0
     d20:	04 c0       	rjmp	.+8      	; 0xd2a <enqueueByBaseline+0x20>
     d22:	ef 01       	movw	r28, r30
     d24:	01 90       	ld	r0, Z+
     d26:	f0 81       	ld	r31, Z
     d28:	e0 2d       	mov	r30, r0
     d2a:	30 97       	sbiw	r30, 0x00	; 0
     d2c:	79 f0       	breq	.+30     	; 0xd4c <enqueueByBaseline+0x42>
     d2e:	02 81       	ldd	r16, Z+2	; 0x02
     d30:	13 81       	ldd	r17, Z+3	; 0x03
     d32:	24 81       	ldd	r18, Z+4	; 0x04
     d34:	35 81       	ldd	r19, Z+5	; 0x05
     d36:	12 96       	adiw	r26, 0x02	; 2
     d38:	4d 91       	ld	r20, X+
     d3a:	5d 91       	ld	r21, X+
     d3c:	6d 91       	ld	r22, X+
     d3e:	7c 91       	ld	r23, X
     d40:	15 97       	sbiw	r26, 0x05	; 5
     d42:	40 17       	cp	r20, r16
     d44:	51 07       	cpc	r21, r17
     d46:	62 07       	cpc	r22, r18
     d48:	73 07       	cpc	r23, r19
     d4a:	5c f7       	brge	.-42     	; 0xd22 <enqueueByBaseline+0x18>
     d4c:	11 96       	adiw	r26, 0x01	; 1
     d4e:	fc 93       	st	X, r31
     d50:	ee 93       	st	-X, r30
     d52:	20 97       	sbiw	r28, 0x00	; 0
     d54:	21 f4       	brne	.+8      	; 0xd5e <enqueueByBaseline+0x54>
     d56:	fc 01       	movw	r30, r24
     d58:	b1 83       	std	Z+1, r27	; 0x01
     d5a:	a0 83       	st	Z, r26
     d5c:	02 c0       	rjmp	.+4      	; 0xd62 <enqueueByBaseline+0x58>
     d5e:	b9 83       	std	Y+1, r27	; 0x01
     d60:	a8 83       	st	Y, r26
     d62:	df 91       	pop	r29
     d64:	cf 91       	pop	r28
     d66:	1f 91       	pop	r17
     d68:	0f 91       	pop	r16
     d6a:	08 95       	ret

00000d6c <dequeue>:
     d6c:	cf 93       	push	r28
     d6e:	df 93       	push	r29
     d70:	00 d0       	rcall	.+0      	; 0xd72 <dequeue+0x6>
     d72:	cd b7       	in	r28, 0x3d	; 61
     d74:	de b7       	in	r29, 0x3e	; 62
     d76:	fc 01       	movw	r30, r24
     d78:	20 81       	ld	r18, Z
     d7a:	31 81       	ldd	r19, Z+1	; 0x01
     d7c:	3a 83       	std	Y+2, r19	; 0x02
     d7e:	29 83       	std	Y+1, r18	; 0x01
     d80:	29 81       	ldd	r18, Y+1	; 0x01
     d82:	3a 81       	ldd	r19, Y+2	; 0x02
     d84:	23 2b       	or	r18, r19
     d86:	51 f0       	breq	.+20     	; 0xd9c <dequeue+0x30>
     d88:	e9 81       	ldd	r30, Y+1	; 0x01
     d8a:	fa 81       	ldd	r31, Y+2	; 0x02
     d8c:	20 81       	ld	r18, Z
     d8e:	31 81       	ldd	r19, Z+1	; 0x01
     d90:	fc 01       	movw	r30, r24
     d92:	31 83       	std	Z+1, r19	; 0x01
     d94:	20 83       	st	Z, r18
     d96:	89 81       	ldd	r24, Y+1	; 0x01
     d98:	9a 81       	ldd	r25, Y+2	; 0x02
     d9a:	0b c0       	rjmp	.+22     	; 0xdb2 <dequeue+0x46>
     d9c:	8f ef       	ldi	r24, 0xFF	; 255
     d9e:	80 93 ec 00 	sts	0x00EC, r24	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7fc0ec>
     da2:	80 93 ed 00 	sts	0x00ED, r24	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7fc0ed>
     da6:	80 93 ee 00 	sts	0x00EE, r24	; 0x8000ee <__TEXT_REGION_LENGTH__+0x7fc0ee>
     daa:	81 e0       	ldi	r24, 0x01	; 1
     dac:	83 bf       	out	0x33, r24	; 51
     dae:	88 95       	sleep
     db0:	fc cf       	rjmp	.-8      	; 0xdaa <dequeue+0x3e>
     db2:	0f 90       	pop	r0
     db4:	0f 90       	pop	r0
     db6:	df 91       	pop	r29
     db8:	cf 91       	pop	r28
     dba:	08 95       	ret

00000dbc <insert>:
     dbc:	fb 01       	movw	r30, r22
     dbe:	20 81       	ld	r18, Z
     dc0:	31 81       	ldd	r19, Z+1	; 0x01
     dc2:	fc 01       	movw	r30, r24
     dc4:	31 83       	std	Z+1, r19	; 0x01
     dc6:	20 83       	st	Z, r18
     dc8:	fb 01       	movw	r30, r22
     dca:	91 83       	std	Z+1, r25	; 0x01
     dcc:	80 83       	st	Z, r24
     dce:	08 95       	ret

00000dd0 <push>:
     dd0:	fb 01       	movw	r30, r22
     dd2:	20 81       	ld	r18, Z
     dd4:	31 81       	ldd	r19, Z+1	; 0x01
     dd6:	fc 01       	movw	r30, r24
     dd8:	31 83       	std	Z+1, r19	; 0x01
     dda:	20 83       	st	Z, r18
     ddc:	fb 01       	movw	r30, r22
     dde:	91 83       	std	Z+1, r25	; 0x01
     de0:	80 83       	st	Z, r24
     de2:	08 95       	ret

00000de4 <pop>:
     de4:	dc 01       	movw	r26, r24
     de6:	ed 91       	ld	r30, X+
     de8:	fc 91       	ld	r31, X
     dea:	11 97       	sbiw	r26, 0x01	; 1
     dec:	20 81       	ld	r18, Z
     dee:	31 81       	ldd	r19, Z+1	; 0x01
     df0:	2d 93       	st	X+, r18
     df2:	3c 93       	st	X, r19
     df4:	cf 01       	movw	r24, r30
     df6:	08 95       	ret

00000df8 <schedule>:
     df8:	cf 93       	push	r28
     dfa:	df 93       	push	r29
     dfc:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <activeStack>
     e00:	f0 91 32 01 	lds	r31, 0x0132	; 0x800132 <activeStack+0x1>
     e04:	c2 81       	ldd	r28, Z+2	; 0x02
     e06:	d3 81       	ldd	r29, Z+3	; 0x03
     e08:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
     e0c:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
     e10:	30 97       	sbiw	r30, 0x00	; 0
     e12:	19 f1       	breq	.+70     	; 0xe5a <schedule+0x62>
     e14:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <threadPool>
     e18:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <threadPool+0x1>
     e1c:	89 2b       	or	r24, r25
     e1e:	e9 f0       	breq	.+58     	; 0xe5a <schedule+0x62>
     e20:	20 97       	sbiw	r28, 0x00	; 0
     e22:	69 f0       	breq	.+26     	; 0xe3e <schedule+0x46>
     e24:	86 81       	ldd	r24, Z+6	; 0x06
     e26:	97 81       	ldd	r25, Z+7	; 0x07
     e28:	a0 85       	ldd	r26, Z+8	; 0x08
     e2a:	b1 85       	ldd	r27, Z+9	; 0x09
     e2c:	4e 81       	ldd	r20, Y+6	; 0x06
     e2e:	5f 81       	ldd	r21, Y+7	; 0x07
     e30:	68 85       	ldd	r22, Y+8	; 0x08
     e32:	79 85       	ldd	r23, Y+9	; 0x09
     e34:	84 1b       	sub	r24, r20
     e36:	95 0b       	sbc	r25, r21
     e38:	a6 0b       	sbc	r26, r22
     e3a:	b7 0b       	sbc	r27, r23
     e3c:	72 f4       	brpl	.+28     	; 0xe5a <schedule+0x62>
     e3e:	83 e3       	ldi	r24, 0x33	; 51
     e40:	91 e0       	ldi	r25, 0x01	; 1
     e42:	0e 94 f2 06 	call	0xde4	; 0xde4 <pop>
     e46:	61 e3       	ldi	r22, 0x31	; 49
     e48:	71 e0       	ldi	r23, 0x01	; 1
     e4a:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <push>
     e4e:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <activeStack>
     e52:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <activeStack+0x1>
     e56:	0e 94 34 06 	call	0xc68	; 0xc68 <dispatch>
     e5a:	df 91       	pop	r29
     e5c:	cf 91       	pop	r28
     e5e:	08 95       	ret

00000e60 <__vector_1>:
     e60:	1f 92       	push	r1
     e62:	0f 92       	push	r0
     e64:	0f b6       	in	r0, 0x3f	; 63
     e66:	0f 92       	push	r0
     e68:	11 24       	eor	r1, r1
     e6a:	0f 93       	push	r16
     e6c:	1f 93       	push	r17
     e6e:	2f 93       	push	r18
     e70:	3f 93       	push	r19
     e72:	4f 93       	push	r20
     e74:	5f 93       	push	r21
     e76:	6f 93       	push	r22
     e78:	7f 93       	push	r23
     e7a:	8f 93       	push	r24
     e7c:	9f 93       	push	r25
     e7e:	af 93       	push	r26
     e80:	bf 93       	push	r27
     e82:	ef 93       	push	r30
     e84:	ff 93       	push	r31
     e86:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
     e8a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
     e8e:	ac 01       	movw	r20, r24
     e90:	09 2e       	mov	r0, r25
     e92:	00 0c       	add	r0, r0
     e94:	66 0b       	sbc	r22, r22
     e96:	77 0b       	sbc	r23, r23
     e98:	9a 01       	movw	r18, r20
     e9a:	11 27       	eor	r17, r17
     e9c:	00 27       	eor	r16, r16
     e9e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     ea2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ea6:	60 e0       	ldi	r22, 0x00	; 0
     ea8:	70 e0       	ldi	r23, 0x00	; 0
     eaa:	40 2b       	or	r20, r16
     eac:	51 2b       	or	r21, r17
     eae:	62 2b       	or	r22, r18
     eb0:	73 2b       	or	r23, r19
     eb2:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
     eb6:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
     eba:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
     ebe:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
     ec2:	b0 9b       	sbis	0x16, 0	; 22
     ec4:	1a c0       	rjmp	.+52     	; 0xefa <__vector_1+0x9a>
     ec6:	01 96       	adiw	r24, 0x01	; 1
     ec8:	09 2e       	mov	r0, r25
     eca:	00 0c       	add	r0, r0
     ecc:	aa 0b       	sbc	r26, r26
     ece:	bb 0b       	sbc	r27, r27
     ed0:	bc 01       	movw	r22, r24
     ed2:	55 27       	eor	r21, r21
     ed4:	44 27       	eor	r20, r20
     ed6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     eda:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     ede:	a0 e0       	ldi	r26, 0x00	; 0
     ee0:	b0 e0       	ldi	r27, 0x00	; 0
     ee2:	84 2b       	or	r24, r20
     ee4:	95 2b       	or	r25, r21
     ee6:	a6 2b       	or	r26, r22
     ee8:	b7 2b       	or	r27, r23
     eea:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     eee:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     ef2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     ef6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     efa:	e0 91 f2 01 	lds	r30, 0x01F2	; 0x8001f2 <mtable>
     efe:	f0 91 f3 01 	lds	r31, 0x01F3	; 0x8001f3 <mtable+0x1>
     f02:	30 97       	sbiw	r30, 0x00	; 0
     f04:	39 f0       	breq	.+14     	; 0xf14 <__vector_1+0xb4>
     f06:	60 e0       	ldi	r22, 0x00	; 0
     f08:	70 e0       	ldi	r23, 0x00	; 0
     f0a:	80 91 5a 01 	lds	r24, 0x015A	; 0x80015a <otable>
     f0e:	90 91 5b 01 	lds	r25, 0x015B	; 0x80015b <otable+0x1>
     f12:	09 95       	icall
     f14:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
     f18:	ff 91       	pop	r31
     f1a:	ef 91       	pop	r30
     f1c:	bf 91       	pop	r27
     f1e:	af 91       	pop	r26
     f20:	9f 91       	pop	r25
     f22:	8f 91       	pop	r24
     f24:	7f 91       	pop	r23
     f26:	6f 91       	pop	r22
     f28:	5f 91       	pop	r21
     f2a:	4f 91       	pop	r20
     f2c:	3f 91       	pop	r19
     f2e:	2f 91       	pop	r18
     f30:	1f 91       	pop	r17
     f32:	0f 91       	pop	r16
     f34:	0f 90       	pop	r0
     f36:	0f be       	out	0x3f, r0	; 63
     f38:	0f 90       	pop	r0
     f3a:	1f 90       	pop	r1
     f3c:	18 95       	reti

00000f3e <__vector_2>:
     f3e:	1f 92       	push	r1
     f40:	0f 92       	push	r0
     f42:	0f b6       	in	r0, 0x3f	; 63
     f44:	0f 92       	push	r0
     f46:	11 24       	eor	r1, r1
     f48:	0f 93       	push	r16
     f4a:	1f 93       	push	r17
     f4c:	2f 93       	push	r18
     f4e:	3f 93       	push	r19
     f50:	4f 93       	push	r20
     f52:	5f 93       	push	r21
     f54:	6f 93       	push	r22
     f56:	7f 93       	push	r23
     f58:	8f 93       	push	r24
     f5a:	9f 93       	push	r25
     f5c:	af 93       	push	r26
     f5e:	bf 93       	push	r27
     f60:	ef 93       	push	r30
     f62:	ff 93       	push	r31
     f64:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
     f68:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
     f6c:	ac 01       	movw	r20, r24
     f6e:	09 2e       	mov	r0, r25
     f70:	00 0c       	add	r0, r0
     f72:	66 0b       	sbc	r22, r22
     f74:	77 0b       	sbc	r23, r23
     f76:	9a 01       	movw	r18, r20
     f78:	11 27       	eor	r17, r17
     f7a:	00 27       	eor	r16, r16
     f7c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     f80:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     f84:	60 e0       	ldi	r22, 0x00	; 0
     f86:	70 e0       	ldi	r23, 0x00	; 0
     f88:	40 2b       	or	r20, r16
     f8a:	51 2b       	or	r21, r17
     f8c:	62 2b       	or	r22, r18
     f8e:	73 2b       	or	r23, r19
     f90:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
     f94:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
     f98:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
     f9c:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
     fa0:	b0 9b       	sbis	0x16, 0	; 22
     fa2:	1a c0       	rjmp	.+52     	; 0xfd8 <__vector_2+0x9a>
     fa4:	01 96       	adiw	r24, 0x01	; 1
     fa6:	09 2e       	mov	r0, r25
     fa8:	00 0c       	add	r0, r0
     faa:	aa 0b       	sbc	r26, r26
     fac:	bb 0b       	sbc	r27, r27
     fae:	bc 01       	movw	r22, r24
     fb0:	55 27       	eor	r21, r21
     fb2:	44 27       	eor	r20, r20
     fb4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
     fb8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
     fbc:	a0 e0       	ldi	r26, 0x00	; 0
     fbe:	b0 e0       	ldi	r27, 0x00	; 0
     fc0:	84 2b       	or	r24, r20
     fc2:	95 2b       	or	r25, r21
     fc4:	a6 2b       	or	r26, r22
     fc6:	b7 2b       	or	r27, r23
     fc8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
     fcc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
     fd0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
     fd4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
     fd8:	e0 91 f4 01 	lds	r30, 0x01F4	; 0x8001f4 <mtable+0x2>
     fdc:	f0 91 f5 01 	lds	r31, 0x01F5	; 0x8001f5 <mtable+0x3>
     fe0:	30 97       	sbiw	r30, 0x00	; 0
     fe2:	39 f0       	breq	.+14     	; 0xff2 <__vector_2+0xb4>
     fe4:	61 e0       	ldi	r22, 0x01	; 1
     fe6:	70 e0       	ldi	r23, 0x00	; 0
     fe8:	80 91 5c 01 	lds	r24, 0x015C	; 0x80015c <otable+0x2>
     fec:	90 91 5d 01 	lds	r25, 0x015D	; 0x80015d <otable+0x3>
     ff0:	09 95       	icall
     ff2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
     ff6:	ff 91       	pop	r31
     ff8:	ef 91       	pop	r30
     ffa:	bf 91       	pop	r27
     ffc:	af 91       	pop	r26
     ffe:	9f 91       	pop	r25
    1000:	8f 91       	pop	r24
    1002:	7f 91       	pop	r23
    1004:	6f 91       	pop	r22
    1006:	5f 91       	pop	r21
    1008:	4f 91       	pop	r20
    100a:	3f 91       	pop	r19
    100c:	2f 91       	pop	r18
    100e:	1f 91       	pop	r17
    1010:	0f 91       	pop	r16
    1012:	0f 90       	pop	r0
    1014:	0f be       	out	0x3f, r0	; 63
    1016:	0f 90       	pop	r0
    1018:	1f 90       	pop	r1
    101a:	18 95       	reti

0000101c <__vector_3>:
    101c:	1f 92       	push	r1
    101e:	0f 92       	push	r0
    1020:	0f b6       	in	r0, 0x3f	; 63
    1022:	0f 92       	push	r0
    1024:	11 24       	eor	r1, r1
    1026:	0f 93       	push	r16
    1028:	1f 93       	push	r17
    102a:	2f 93       	push	r18
    102c:	3f 93       	push	r19
    102e:	4f 93       	push	r20
    1030:	5f 93       	push	r21
    1032:	6f 93       	push	r22
    1034:	7f 93       	push	r23
    1036:	8f 93       	push	r24
    1038:	9f 93       	push	r25
    103a:	af 93       	push	r26
    103c:	bf 93       	push	r27
    103e:	ef 93       	push	r30
    1040:	ff 93       	push	r31
    1042:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1046:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    104a:	ac 01       	movw	r20, r24
    104c:	09 2e       	mov	r0, r25
    104e:	00 0c       	add	r0, r0
    1050:	66 0b       	sbc	r22, r22
    1052:	77 0b       	sbc	r23, r23
    1054:	9a 01       	movw	r18, r20
    1056:	11 27       	eor	r17, r17
    1058:	00 27       	eor	r16, r16
    105a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    105e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1062:	60 e0       	ldi	r22, 0x00	; 0
    1064:	70 e0       	ldi	r23, 0x00	; 0
    1066:	40 2b       	or	r20, r16
    1068:	51 2b       	or	r21, r17
    106a:	62 2b       	or	r22, r18
    106c:	73 2b       	or	r23, r19
    106e:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1072:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1076:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    107a:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    107e:	b0 9b       	sbis	0x16, 0	; 22
    1080:	1a c0       	rjmp	.+52     	; 0x10b6 <__vector_3+0x9a>
    1082:	01 96       	adiw	r24, 0x01	; 1
    1084:	09 2e       	mov	r0, r25
    1086:	00 0c       	add	r0, r0
    1088:	aa 0b       	sbc	r26, r26
    108a:	bb 0b       	sbc	r27, r27
    108c:	bc 01       	movw	r22, r24
    108e:	55 27       	eor	r21, r21
    1090:	44 27       	eor	r20, r20
    1092:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1096:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    109a:	a0 e0       	ldi	r26, 0x00	; 0
    109c:	b0 e0       	ldi	r27, 0x00	; 0
    109e:	84 2b       	or	r24, r20
    10a0:	95 2b       	or	r25, r21
    10a2:	a6 2b       	or	r26, r22
    10a4:	b7 2b       	or	r27, r23
    10a6:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    10aa:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    10ae:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    10b2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    10b6:	e0 91 f6 01 	lds	r30, 0x01F6	; 0x8001f6 <mtable+0x4>
    10ba:	f0 91 f7 01 	lds	r31, 0x01F7	; 0x8001f7 <mtable+0x5>
    10be:	30 97       	sbiw	r30, 0x00	; 0
    10c0:	39 f0       	breq	.+14     	; 0x10d0 <__vector_3+0xb4>
    10c2:	62 e0       	ldi	r22, 0x02	; 2
    10c4:	70 e0       	ldi	r23, 0x00	; 0
    10c6:	80 91 5e 01 	lds	r24, 0x015E	; 0x80015e <otable+0x4>
    10ca:	90 91 5f 01 	lds	r25, 0x015F	; 0x80015f <otable+0x5>
    10ce:	09 95       	icall
    10d0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    10d4:	ff 91       	pop	r31
    10d6:	ef 91       	pop	r30
    10d8:	bf 91       	pop	r27
    10da:	af 91       	pop	r26
    10dc:	9f 91       	pop	r25
    10de:	8f 91       	pop	r24
    10e0:	7f 91       	pop	r23
    10e2:	6f 91       	pop	r22
    10e4:	5f 91       	pop	r21
    10e6:	4f 91       	pop	r20
    10e8:	3f 91       	pop	r19
    10ea:	2f 91       	pop	r18
    10ec:	1f 91       	pop	r17
    10ee:	0f 91       	pop	r16
    10f0:	0f 90       	pop	r0
    10f2:	0f be       	out	0x3f, r0	; 63
    10f4:	0f 90       	pop	r0
    10f6:	1f 90       	pop	r1
    10f8:	18 95       	reti

000010fa <__vector_4>:
    10fa:	1f 92       	push	r1
    10fc:	0f 92       	push	r0
    10fe:	0f b6       	in	r0, 0x3f	; 63
    1100:	0f 92       	push	r0
    1102:	11 24       	eor	r1, r1
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	2f 93       	push	r18
    110a:	3f 93       	push	r19
    110c:	4f 93       	push	r20
    110e:	5f 93       	push	r21
    1110:	6f 93       	push	r22
    1112:	7f 93       	push	r23
    1114:	8f 93       	push	r24
    1116:	9f 93       	push	r25
    1118:	af 93       	push	r26
    111a:	bf 93       	push	r27
    111c:	ef 93       	push	r30
    111e:	ff 93       	push	r31
    1120:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1124:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1128:	ac 01       	movw	r20, r24
    112a:	09 2e       	mov	r0, r25
    112c:	00 0c       	add	r0, r0
    112e:	66 0b       	sbc	r22, r22
    1130:	77 0b       	sbc	r23, r23
    1132:	9a 01       	movw	r18, r20
    1134:	11 27       	eor	r17, r17
    1136:	00 27       	eor	r16, r16
    1138:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    113c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1140:	60 e0       	ldi	r22, 0x00	; 0
    1142:	70 e0       	ldi	r23, 0x00	; 0
    1144:	40 2b       	or	r20, r16
    1146:	51 2b       	or	r21, r17
    1148:	62 2b       	or	r22, r18
    114a:	73 2b       	or	r23, r19
    114c:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1150:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1154:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1158:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    115c:	b0 9b       	sbis	0x16, 0	; 22
    115e:	1a c0       	rjmp	.+52     	; 0x1194 <__vector_4+0x9a>
    1160:	01 96       	adiw	r24, 0x01	; 1
    1162:	09 2e       	mov	r0, r25
    1164:	00 0c       	add	r0, r0
    1166:	aa 0b       	sbc	r26, r26
    1168:	bb 0b       	sbc	r27, r27
    116a:	bc 01       	movw	r22, r24
    116c:	55 27       	eor	r21, r21
    116e:	44 27       	eor	r20, r20
    1170:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1174:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1178:	a0 e0       	ldi	r26, 0x00	; 0
    117a:	b0 e0       	ldi	r27, 0x00	; 0
    117c:	84 2b       	or	r24, r20
    117e:	95 2b       	or	r25, r21
    1180:	a6 2b       	or	r26, r22
    1182:	b7 2b       	or	r27, r23
    1184:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1188:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    118c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1190:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1194:	e0 91 f8 01 	lds	r30, 0x01F8	; 0x8001f8 <mtable+0x6>
    1198:	f0 91 f9 01 	lds	r31, 0x01F9	; 0x8001f9 <mtable+0x7>
    119c:	30 97       	sbiw	r30, 0x00	; 0
    119e:	39 f0       	breq	.+14     	; 0x11ae <__vector_4+0xb4>
    11a0:	63 e0       	ldi	r22, 0x03	; 3
    11a2:	70 e0       	ldi	r23, 0x00	; 0
    11a4:	80 91 60 01 	lds	r24, 0x0160	; 0x800160 <otable+0x6>
    11a8:	90 91 61 01 	lds	r25, 0x0161	; 0x800161 <otable+0x7>
    11ac:	09 95       	icall
    11ae:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    11b2:	ff 91       	pop	r31
    11b4:	ef 91       	pop	r30
    11b6:	bf 91       	pop	r27
    11b8:	af 91       	pop	r26
    11ba:	9f 91       	pop	r25
    11bc:	8f 91       	pop	r24
    11be:	7f 91       	pop	r23
    11c0:	6f 91       	pop	r22
    11c2:	5f 91       	pop	r21
    11c4:	4f 91       	pop	r20
    11c6:	3f 91       	pop	r19
    11c8:	2f 91       	pop	r18
    11ca:	1f 91       	pop	r17
    11cc:	0f 91       	pop	r16
    11ce:	0f 90       	pop	r0
    11d0:	0f be       	out	0x3f, r0	; 63
    11d2:	0f 90       	pop	r0
    11d4:	1f 90       	pop	r1
    11d6:	18 95       	reti

000011d8 <__vector_5>:
    11d8:	1f 92       	push	r1
    11da:	0f 92       	push	r0
    11dc:	0f b6       	in	r0, 0x3f	; 63
    11de:	0f 92       	push	r0
    11e0:	11 24       	eor	r1, r1
    11e2:	0f 93       	push	r16
    11e4:	1f 93       	push	r17
    11e6:	2f 93       	push	r18
    11e8:	3f 93       	push	r19
    11ea:	4f 93       	push	r20
    11ec:	5f 93       	push	r21
    11ee:	6f 93       	push	r22
    11f0:	7f 93       	push	r23
    11f2:	8f 93       	push	r24
    11f4:	9f 93       	push	r25
    11f6:	af 93       	push	r26
    11f8:	bf 93       	push	r27
    11fa:	ef 93       	push	r30
    11fc:	ff 93       	push	r31
    11fe:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1202:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1206:	ac 01       	movw	r20, r24
    1208:	09 2e       	mov	r0, r25
    120a:	00 0c       	add	r0, r0
    120c:	66 0b       	sbc	r22, r22
    120e:	77 0b       	sbc	r23, r23
    1210:	9a 01       	movw	r18, r20
    1212:	11 27       	eor	r17, r17
    1214:	00 27       	eor	r16, r16
    1216:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    121a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    121e:	60 e0       	ldi	r22, 0x00	; 0
    1220:	70 e0       	ldi	r23, 0x00	; 0
    1222:	40 2b       	or	r20, r16
    1224:	51 2b       	or	r21, r17
    1226:	62 2b       	or	r22, r18
    1228:	73 2b       	or	r23, r19
    122a:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    122e:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1232:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1236:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    123a:	b0 9b       	sbis	0x16, 0	; 22
    123c:	1a c0       	rjmp	.+52     	; 0x1272 <__vector_5+0x9a>
    123e:	01 96       	adiw	r24, 0x01	; 1
    1240:	09 2e       	mov	r0, r25
    1242:	00 0c       	add	r0, r0
    1244:	aa 0b       	sbc	r26, r26
    1246:	bb 0b       	sbc	r27, r27
    1248:	bc 01       	movw	r22, r24
    124a:	55 27       	eor	r21, r21
    124c:	44 27       	eor	r20, r20
    124e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1252:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1256:	a0 e0       	ldi	r26, 0x00	; 0
    1258:	b0 e0       	ldi	r27, 0x00	; 0
    125a:	84 2b       	or	r24, r20
    125c:	95 2b       	or	r25, r21
    125e:	a6 2b       	or	r26, r22
    1260:	b7 2b       	or	r27, r23
    1262:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1266:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    126a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    126e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1272:	e0 91 fa 01 	lds	r30, 0x01FA	; 0x8001fa <mtable+0x8>
    1276:	f0 91 fb 01 	lds	r31, 0x01FB	; 0x8001fb <mtable+0x9>
    127a:	30 97       	sbiw	r30, 0x00	; 0
    127c:	39 f0       	breq	.+14     	; 0x128c <__vector_5+0xb4>
    127e:	64 e0       	ldi	r22, 0x04	; 4
    1280:	70 e0       	ldi	r23, 0x00	; 0
    1282:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <otable+0x8>
    1286:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <otable+0x9>
    128a:	09 95       	icall
    128c:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1290:	ff 91       	pop	r31
    1292:	ef 91       	pop	r30
    1294:	bf 91       	pop	r27
    1296:	af 91       	pop	r26
    1298:	9f 91       	pop	r25
    129a:	8f 91       	pop	r24
    129c:	7f 91       	pop	r23
    129e:	6f 91       	pop	r22
    12a0:	5f 91       	pop	r21
    12a2:	4f 91       	pop	r20
    12a4:	3f 91       	pop	r19
    12a6:	2f 91       	pop	r18
    12a8:	1f 91       	pop	r17
    12aa:	0f 91       	pop	r16
    12ac:	0f 90       	pop	r0
    12ae:	0f be       	out	0x3f, r0	; 63
    12b0:	0f 90       	pop	r0
    12b2:	1f 90       	pop	r1
    12b4:	18 95       	reti

000012b6 <__vector_10>:
    12b6:	1f 92       	push	r1
    12b8:	0f 92       	push	r0
    12ba:	0f b6       	in	r0, 0x3f	; 63
    12bc:	0f 92       	push	r0
    12be:	11 24       	eor	r1, r1
    12c0:	0f 93       	push	r16
    12c2:	1f 93       	push	r17
    12c4:	2f 93       	push	r18
    12c6:	3f 93       	push	r19
    12c8:	4f 93       	push	r20
    12ca:	5f 93       	push	r21
    12cc:	6f 93       	push	r22
    12ce:	7f 93       	push	r23
    12d0:	8f 93       	push	r24
    12d2:	9f 93       	push	r25
    12d4:	af 93       	push	r26
    12d6:	bf 93       	push	r27
    12d8:	ef 93       	push	r30
    12da:	ff 93       	push	r31
    12dc:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    12e0:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    12e4:	ac 01       	movw	r20, r24
    12e6:	09 2e       	mov	r0, r25
    12e8:	00 0c       	add	r0, r0
    12ea:	66 0b       	sbc	r22, r22
    12ec:	77 0b       	sbc	r23, r23
    12ee:	9a 01       	movw	r18, r20
    12f0:	11 27       	eor	r17, r17
    12f2:	00 27       	eor	r16, r16
    12f4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    12f8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    12fc:	60 e0       	ldi	r22, 0x00	; 0
    12fe:	70 e0       	ldi	r23, 0x00	; 0
    1300:	40 2b       	or	r20, r16
    1302:	51 2b       	or	r21, r17
    1304:	62 2b       	or	r22, r18
    1306:	73 2b       	or	r23, r19
    1308:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    130c:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1310:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1314:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1318:	b0 9b       	sbis	0x16, 0	; 22
    131a:	1a c0       	rjmp	.+52     	; 0x1350 <__vector_10+0x9a>
    131c:	01 96       	adiw	r24, 0x01	; 1
    131e:	09 2e       	mov	r0, r25
    1320:	00 0c       	add	r0, r0
    1322:	aa 0b       	sbc	r26, r26
    1324:	bb 0b       	sbc	r27, r27
    1326:	bc 01       	movw	r22, r24
    1328:	55 27       	eor	r21, r21
    132a:	44 27       	eor	r20, r20
    132c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1330:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1334:	a0 e0       	ldi	r26, 0x00	; 0
    1336:	b0 e0       	ldi	r27, 0x00	; 0
    1338:	84 2b       	or	r24, r20
    133a:	95 2b       	or	r25, r21
    133c:	a6 2b       	or	r26, r22
    133e:	b7 2b       	or	r27, r23
    1340:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1344:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1348:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    134c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1350:	e0 91 fc 01 	lds	r30, 0x01FC	; 0x8001fc <mtable+0xa>
    1354:	f0 91 fd 01 	lds	r31, 0x01FD	; 0x8001fd <mtable+0xb>
    1358:	30 97       	sbiw	r30, 0x00	; 0
    135a:	39 f0       	breq	.+14     	; 0x136a <__vector_10+0xb4>
    135c:	65 e0       	ldi	r22, 0x05	; 5
    135e:	70 e0       	ldi	r23, 0x00	; 0
    1360:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <otable+0xa>
    1364:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <otable+0xb>
    1368:	09 95       	icall
    136a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    136e:	ff 91       	pop	r31
    1370:	ef 91       	pop	r30
    1372:	bf 91       	pop	r27
    1374:	af 91       	pop	r26
    1376:	9f 91       	pop	r25
    1378:	8f 91       	pop	r24
    137a:	7f 91       	pop	r23
    137c:	6f 91       	pop	r22
    137e:	5f 91       	pop	r21
    1380:	4f 91       	pop	r20
    1382:	3f 91       	pop	r19
    1384:	2f 91       	pop	r18
    1386:	1f 91       	pop	r17
    1388:	0f 91       	pop	r16
    138a:	0f 90       	pop	r0
    138c:	0f be       	out	0x3f, r0	; 63
    138e:	0f 90       	pop	r0
    1390:	1f 90       	pop	r1
    1392:	18 95       	reti

00001394 <__vector_11>:
    1394:	1f 92       	push	r1
    1396:	0f 92       	push	r0
    1398:	0f b6       	in	r0, 0x3f	; 63
    139a:	0f 92       	push	r0
    139c:	11 24       	eor	r1, r1
    139e:	0f 93       	push	r16
    13a0:	1f 93       	push	r17
    13a2:	2f 93       	push	r18
    13a4:	3f 93       	push	r19
    13a6:	4f 93       	push	r20
    13a8:	5f 93       	push	r21
    13aa:	6f 93       	push	r22
    13ac:	7f 93       	push	r23
    13ae:	8f 93       	push	r24
    13b0:	9f 93       	push	r25
    13b2:	af 93       	push	r26
    13b4:	bf 93       	push	r27
    13b6:	ef 93       	push	r30
    13b8:	ff 93       	push	r31
    13ba:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    13be:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    13c2:	ac 01       	movw	r20, r24
    13c4:	09 2e       	mov	r0, r25
    13c6:	00 0c       	add	r0, r0
    13c8:	66 0b       	sbc	r22, r22
    13ca:	77 0b       	sbc	r23, r23
    13cc:	9a 01       	movw	r18, r20
    13ce:	11 27       	eor	r17, r17
    13d0:	00 27       	eor	r16, r16
    13d2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    13d6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    13da:	60 e0       	ldi	r22, 0x00	; 0
    13dc:	70 e0       	ldi	r23, 0x00	; 0
    13de:	40 2b       	or	r20, r16
    13e0:	51 2b       	or	r21, r17
    13e2:	62 2b       	or	r22, r18
    13e4:	73 2b       	or	r23, r19
    13e6:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    13ea:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    13ee:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    13f2:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    13f6:	b0 9b       	sbis	0x16, 0	; 22
    13f8:	1a c0       	rjmp	.+52     	; 0x142e <__vector_11+0x9a>
    13fa:	01 96       	adiw	r24, 0x01	; 1
    13fc:	09 2e       	mov	r0, r25
    13fe:	00 0c       	add	r0, r0
    1400:	aa 0b       	sbc	r26, r26
    1402:	bb 0b       	sbc	r27, r27
    1404:	bc 01       	movw	r22, r24
    1406:	55 27       	eor	r21, r21
    1408:	44 27       	eor	r20, r20
    140a:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    140e:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1412:	a0 e0       	ldi	r26, 0x00	; 0
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	84 2b       	or	r24, r20
    1418:	95 2b       	or	r25, r21
    141a:	a6 2b       	or	r26, r22
    141c:	b7 2b       	or	r27, r23
    141e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1422:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1426:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    142a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    142e:	e0 91 fe 01 	lds	r30, 0x01FE	; 0x8001fe <mtable+0xc>
    1432:	f0 91 ff 01 	lds	r31, 0x01FF	; 0x8001ff <mtable+0xd>
    1436:	30 97       	sbiw	r30, 0x00	; 0
    1438:	39 f0       	breq	.+14     	; 0x1448 <__vector_11+0xb4>
    143a:	66 e0       	ldi	r22, 0x06	; 6
    143c:	70 e0       	ldi	r23, 0x00	; 0
    143e:	80 91 66 01 	lds	r24, 0x0166	; 0x800166 <otable+0xc>
    1442:	90 91 67 01 	lds	r25, 0x0167	; 0x800167 <otable+0xd>
    1446:	09 95       	icall
    1448:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    144c:	ff 91       	pop	r31
    144e:	ef 91       	pop	r30
    1450:	bf 91       	pop	r27
    1452:	af 91       	pop	r26
    1454:	9f 91       	pop	r25
    1456:	8f 91       	pop	r24
    1458:	7f 91       	pop	r23
    145a:	6f 91       	pop	r22
    145c:	5f 91       	pop	r21
    145e:	4f 91       	pop	r20
    1460:	3f 91       	pop	r19
    1462:	2f 91       	pop	r18
    1464:	1f 91       	pop	r17
    1466:	0f 91       	pop	r16
    1468:	0f 90       	pop	r0
    146a:	0f be       	out	0x3f, r0	; 63
    146c:	0f 90       	pop	r0
    146e:	1f 90       	pop	r1
    1470:	18 95       	reti

00001472 <__vector_12>:
    1472:	1f 92       	push	r1
    1474:	0f 92       	push	r0
    1476:	0f b6       	in	r0, 0x3f	; 63
    1478:	0f 92       	push	r0
    147a:	11 24       	eor	r1, r1
    147c:	0f 93       	push	r16
    147e:	1f 93       	push	r17
    1480:	2f 93       	push	r18
    1482:	3f 93       	push	r19
    1484:	4f 93       	push	r20
    1486:	5f 93       	push	r21
    1488:	6f 93       	push	r22
    148a:	7f 93       	push	r23
    148c:	8f 93       	push	r24
    148e:	9f 93       	push	r25
    1490:	af 93       	push	r26
    1492:	bf 93       	push	r27
    1494:	ef 93       	push	r30
    1496:	ff 93       	push	r31
    1498:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    149c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    14a0:	ac 01       	movw	r20, r24
    14a2:	09 2e       	mov	r0, r25
    14a4:	00 0c       	add	r0, r0
    14a6:	66 0b       	sbc	r22, r22
    14a8:	77 0b       	sbc	r23, r23
    14aa:	9a 01       	movw	r18, r20
    14ac:	11 27       	eor	r17, r17
    14ae:	00 27       	eor	r16, r16
    14b0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14b4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14b8:	60 e0       	ldi	r22, 0x00	; 0
    14ba:	70 e0       	ldi	r23, 0x00	; 0
    14bc:	40 2b       	or	r20, r16
    14be:	51 2b       	or	r21, r17
    14c0:	62 2b       	or	r22, r18
    14c2:	73 2b       	or	r23, r19
    14c4:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    14c8:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    14cc:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    14d0:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    14d4:	b0 9b       	sbis	0x16, 0	; 22
    14d6:	1a c0       	rjmp	.+52     	; 0x150c <__vector_12+0x9a>
    14d8:	01 96       	adiw	r24, 0x01	; 1
    14da:	09 2e       	mov	r0, r25
    14dc:	00 0c       	add	r0, r0
    14de:	aa 0b       	sbc	r26, r26
    14e0:	bb 0b       	sbc	r27, r27
    14e2:	bc 01       	movw	r22, r24
    14e4:	55 27       	eor	r21, r21
    14e6:	44 27       	eor	r20, r20
    14e8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    14ec:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    14f0:	a0 e0       	ldi	r26, 0x00	; 0
    14f2:	b0 e0       	ldi	r27, 0x00	; 0
    14f4:	84 2b       	or	r24, r20
    14f6:	95 2b       	or	r25, r21
    14f8:	a6 2b       	or	r26, r22
    14fa:	b7 2b       	or	r27, r23
    14fc:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1500:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1504:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1508:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    150c:	e0 91 00 02 	lds	r30, 0x0200	; 0x800200 <mtable+0xe>
    1510:	f0 91 01 02 	lds	r31, 0x0201	; 0x800201 <mtable+0xf>
    1514:	30 97       	sbiw	r30, 0x00	; 0
    1516:	39 f0       	breq	.+14     	; 0x1526 <__vector_12+0xb4>
    1518:	67 e0       	ldi	r22, 0x07	; 7
    151a:	70 e0       	ldi	r23, 0x00	; 0
    151c:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <otable+0xe>
    1520:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <otable+0xf>
    1524:	09 95       	icall
    1526:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    152a:	ff 91       	pop	r31
    152c:	ef 91       	pop	r30
    152e:	bf 91       	pop	r27
    1530:	af 91       	pop	r26
    1532:	9f 91       	pop	r25
    1534:	8f 91       	pop	r24
    1536:	7f 91       	pop	r23
    1538:	6f 91       	pop	r22
    153a:	5f 91       	pop	r21
    153c:	4f 91       	pop	r20
    153e:	3f 91       	pop	r19
    1540:	2f 91       	pop	r18
    1542:	1f 91       	pop	r17
    1544:	0f 91       	pop	r16
    1546:	0f 90       	pop	r0
    1548:	0f be       	out	0x3f, r0	; 63
    154a:	0f 90       	pop	r0
    154c:	1f 90       	pop	r1
    154e:	18 95       	reti

00001550 <__vector_13>:
    1550:	1f 92       	push	r1
    1552:	0f 92       	push	r0
    1554:	0f b6       	in	r0, 0x3f	; 63
    1556:	0f 92       	push	r0
    1558:	11 24       	eor	r1, r1
    155a:	0f 93       	push	r16
    155c:	1f 93       	push	r17
    155e:	2f 93       	push	r18
    1560:	3f 93       	push	r19
    1562:	4f 93       	push	r20
    1564:	5f 93       	push	r21
    1566:	6f 93       	push	r22
    1568:	7f 93       	push	r23
    156a:	8f 93       	push	r24
    156c:	9f 93       	push	r25
    156e:	af 93       	push	r26
    1570:	bf 93       	push	r27
    1572:	ef 93       	push	r30
    1574:	ff 93       	push	r31
    1576:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    157a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    157e:	ac 01       	movw	r20, r24
    1580:	09 2e       	mov	r0, r25
    1582:	00 0c       	add	r0, r0
    1584:	66 0b       	sbc	r22, r22
    1586:	77 0b       	sbc	r23, r23
    1588:	9a 01       	movw	r18, r20
    158a:	11 27       	eor	r17, r17
    158c:	00 27       	eor	r16, r16
    158e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1592:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1596:	60 e0       	ldi	r22, 0x00	; 0
    1598:	70 e0       	ldi	r23, 0x00	; 0
    159a:	40 2b       	or	r20, r16
    159c:	51 2b       	or	r21, r17
    159e:	62 2b       	or	r22, r18
    15a0:	73 2b       	or	r23, r19
    15a2:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    15a6:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    15aa:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    15ae:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    15b2:	b0 9b       	sbis	0x16, 0	; 22
    15b4:	1a c0       	rjmp	.+52     	; 0x15ea <__vector_13+0x9a>
    15b6:	01 96       	adiw	r24, 0x01	; 1
    15b8:	09 2e       	mov	r0, r25
    15ba:	00 0c       	add	r0, r0
    15bc:	aa 0b       	sbc	r26, r26
    15be:	bb 0b       	sbc	r27, r27
    15c0:	bc 01       	movw	r22, r24
    15c2:	55 27       	eor	r21, r21
    15c4:	44 27       	eor	r20, r20
    15c6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    15ca:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    15ce:	a0 e0       	ldi	r26, 0x00	; 0
    15d0:	b0 e0       	ldi	r27, 0x00	; 0
    15d2:	84 2b       	or	r24, r20
    15d4:	95 2b       	or	r25, r21
    15d6:	a6 2b       	or	r26, r22
    15d8:	b7 2b       	or	r27, r23
    15da:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    15de:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    15e2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    15e6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    15ea:	e0 91 02 02 	lds	r30, 0x0202	; 0x800202 <mtable+0x10>
    15ee:	f0 91 03 02 	lds	r31, 0x0203	; 0x800203 <mtable+0x11>
    15f2:	30 97       	sbiw	r30, 0x00	; 0
    15f4:	39 f0       	breq	.+14     	; 0x1604 <__vector_13+0xb4>
    15f6:	68 e0       	ldi	r22, 0x08	; 8
    15f8:	70 e0       	ldi	r23, 0x00	; 0
    15fa:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <otable+0x10>
    15fe:	90 91 6b 01 	lds	r25, 0x016B	; 0x80016b <otable+0x11>
    1602:	09 95       	icall
    1604:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1608:	ff 91       	pop	r31
    160a:	ef 91       	pop	r30
    160c:	bf 91       	pop	r27
    160e:	af 91       	pop	r26
    1610:	9f 91       	pop	r25
    1612:	8f 91       	pop	r24
    1614:	7f 91       	pop	r23
    1616:	6f 91       	pop	r22
    1618:	5f 91       	pop	r21
    161a:	4f 91       	pop	r20
    161c:	3f 91       	pop	r19
    161e:	2f 91       	pop	r18
    1620:	1f 91       	pop	r17
    1622:	0f 91       	pop	r16
    1624:	0f 90       	pop	r0
    1626:	0f be       	out	0x3f, r0	; 63
    1628:	0f 90       	pop	r0
    162a:	1f 90       	pop	r1
    162c:	18 95       	reti

0000162e <__vector_14>:
    162e:	1f 92       	push	r1
    1630:	0f 92       	push	r0
    1632:	0f b6       	in	r0, 0x3f	; 63
    1634:	0f 92       	push	r0
    1636:	11 24       	eor	r1, r1
    1638:	0f 93       	push	r16
    163a:	1f 93       	push	r17
    163c:	2f 93       	push	r18
    163e:	3f 93       	push	r19
    1640:	4f 93       	push	r20
    1642:	5f 93       	push	r21
    1644:	6f 93       	push	r22
    1646:	7f 93       	push	r23
    1648:	8f 93       	push	r24
    164a:	9f 93       	push	r25
    164c:	af 93       	push	r26
    164e:	bf 93       	push	r27
    1650:	ef 93       	push	r30
    1652:	ff 93       	push	r31
    1654:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1658:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    165c:	ac 01       	movw	r20, r24
    165e:	09 2e       	mov	r0, r25
    1660:	00 0c       	add	r0, r0
    1662:	66 0b       	sbc	r22, r22
    1664:	77 0b       	sbc	r23, r23
    1666:	9a 01       	movw	r18, r20
    1668:	11 27       	eor	r17, r17
    166a:	00 27       	eor	r16, r16
    166c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1670:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1674:	60 e0       	ldi	r22, 0x00	; 0
    1676:	70 e0       	ldi	r23, 0x00	; 0
    1678:	40 2b       	or	r20, r16
    167a:	51 2b       	or	r21, r17
    167c:	62 2b       	or	r22, r18
    167e:	73 2b       	or	r23, r19
    1680:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1684:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1688:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    168c:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1690:	b0 9b       	sbis	0x16, 0	; 22
    1692:	1a c0       	rjmp	.+52     	; 0x16c8 <__vector_14+0x9a>
    1694:	01 96       	adiw	r24, 0x01	; 1
    1696:	09 2e       	mov	r0, r25
    1698:	00 0c       	add	r0, r0
    169a:	aa 0b       	sbc	r26, r26
    169c:	bb 0b       	sbc	r27, r27
    169e:	bc 01       	movw	r22, r24
    16a0:	55 27       	eor	r21, r21
    16a2:	44 27       	eor	r20, r20
    16a4:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    16a8:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    16ac:	a0 e0       	ldi	r26, 0x00	; 0
    16ae:	b0 e0       	ldi	r27, 0x00	; 0
    16b0:	84 2b       	or	r24, r20
    16b2:	95 2b       	or	r25, r21
    16b4:	a6 2b       	or	r26, r22
    16b6:	b7 2b       	or	r27, r23
    16b8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    16bc:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    16c0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    16c4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    16c8:	e0 91 04 02 	lds	r30, 0x0204	; 0x800204 <mtable+0x12>
    16cc:	f0 91 05 02 	lds	r31, 0x0205	; 0x800205 <mtable+0x13>
    16d0:	30 97       	sbiw	r30, 0x00	; 0
    16d2:	39 f0       	breq	.+14     	; 0x16e2 <__vector_14+0xb4>
    16d4:	69 e0       	ldi	r22, 0x09	; 9
    16d6:	70 e0       	ldi	r23, 0x00	; 0
    16d8:	80 91 6c 01 	lds	r24, 0x016C	; 0x80016c <otable+0x12>
    16dc:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <otable+0x13>
    16e0:	09 95       	icall
    16e2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    16e6:	ff 91       	pop	r31
    16e8:	ef 91       	pop	r30
    16ea:	bf 91       	pop	r27
    16ec:	af 91       	pop	r26
    16ee:	9f 91       	pop	r25
    16f0:	8f 91       	pop	r24
    16f2:	7f 91       	pop	r23
    16f4:	6f 91       	pop	r22
    16f6:	5f 91       	pop	r21
    16f8:	4f 91       	pop	r20
    16fa:	3f 91       	pop	r19
    16fc:	2f 91       	pop	r18
    16fe:	1f 91       	pop	r17
    1700:	0f 91       	pop	r16
    1702:	0f 90       	pop	r0
    1704:	0f be       	out	0x3f, r0	; 63
    1706:	0f 90       	pop	r0
    1708:	1f 90       	pop	r1
    170a:	18 95       	reti

0000170c <__vector_15>:
    170c:	1f 92       	push	r1
    170e:	0f 92       	push	r0
    1710:	0f b6       	in	r0, 0x3f	; 63
    1712:	0f 92       	push	r0
    1714:	11 24       	eor	r1, r1
    1716:	0f 93       	push	r16
    1718:	1f 93       	push	r17
    171a:	2f 93       	push	r18
    171c:	3f 93       	push	r19
    171e:	4f 93       	push	r20
    1720:	5f 93       	push	r21
    1722:	6f 93       	push	r22
    1724:	7f 93       	push	r23
    1726:	8f 93       	push	r24
    1728:	9f 93       	push	r25
    172a:	af 93       	push	r26
    172c:	bf 93       	push	r27
    172e:	ef 93       	push	r30
    1730:	ff 93       	push	r31
    1732:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1736:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    173a:	ac 01       	movw	r20, r24
    173c:	09 2e       	mov	r0, r25
    173e:	00 0c       	add	r0, r0
    1740:	66 0b       	sbc	r22, r22
    1742:	77 0b       	sbc	r23, r23
    1744:	9a 01       	movw	r18, r20
    1746:	11 27       	eor	r17, r17
    1748:	00 27       	eor	r16, r16
    174a:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    174e:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1752:	60 e0       	ldi	r22, 0x00	; 0
    1754:	70 e0       	ldi	r23, 0x00	; 0
    1756:	40 2b       	or	r20, r16
    1758:	51 2b       	or	r21, r17
    175a:	62 2b       	or	r22, r18
    175c:	73 2b       	or	r23, r19
    175e:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1762:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1766:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    176a:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    176e:	b0 9b       	sbis	0x16, 0	; 22
    1770:	1a c0       	rjmp	.+52     	; 0x17a6 <__vector_15+0x9a>
    1772:	01 96       	adiw	r24, 0x01	; 1
    1774:	09 2e       	mov	r0, r25
    1776:	00 0c       	add	r0, r0
    1778:	aa 0b       	sbc	r26, r26
    177a:	bb 0b       	sbc	r27, r27
    177c:	bc 01       	movw	r22, r24
    177e:	55 27       	eor	r21, r21
    1780:	44 27       	eor	r20, r20
    1782:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1786:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    178a:	a0 e0       	ldi	r26, 0x00	; 0
    178c:	b0 e0       	ldi	r27, 0x00	; 0
    178e:	84 2b       	or	r24, r20
    1790:	95 2b       	or	r25, r21
    1792:	a6 2b       	or	r26, r22
    1794:	b7 2b       	or	r27, r23
    1796:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    179a:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    179e:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    17a2:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    17a6:	e0 91 06 02 	lds	r30, 0x0206	; 0x800206 <mtable+0x14>
    17aa:	f0 91 07 02 	lds	r31, 0x0207	; 0x800207 <mtable+0x15>
    17ae:	30 97       	sbiw	r30, 0x00	; 0
    17b0:	39 f0       	breq	.+14     	; 0x17c0 <__vector_15+0xb4>
    17b2:	6a e0       	ldi	r22, 0x0A	; 10
    17b4:	70 e0       	ldi	r23, 0x00	; 0
    17b6:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <otable+0x14>
    17ba:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <otable+0x15>
    17be:	09 95       	icall
    17c0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    17c4:	ff 91       	pop	r31
    17c6:	ef 91       	pop	r30
    17c8:	bf 91       	pop	r27
    17ca:	af 91       	pop	r26
    17cc:	9f 91       	pop	r25
    17ce:	8f 91       	pop	r24
    17d0:	7f 91       	pop	r23
    17d2:	6f 91       	pop	r22
    17d4:	5f 91       	pop	r21
    17d6:	4f 91       	pop	r20
    17d8:	3f 91       	pop	r19
    17da:	2f 91       	pop	r18
    17dc:	1f 91       	pop	r17
    17de:	0f 91       	pop	r16
    17e0:	0f 90       	pop	r0
    17e2:	0f be       	out	0x3f, r0	; 63
    17e4:	0f 90       	pop	r0
    17e6:	1f 90       	pop	r1
    17e8:	18 95       	reti

000017ea <__vector_16>:
    17ea:	1f 92       	push	r1
    17ec:	0f 92       	push	r0
    17ee:	0f b6       	in	r0, 0x3f	; 63
    17f0:	0f 92       	push	r0
    17f2:	11 24       	eor	r1, r1
    17f4:	0f 93       	push	r16
    17f6:	1f 93       	push	r17
    17f8:	2f 93       	push	r18
    17fa:	3f 93       	push	r19
    17fc:	4f 93       	push	r20
    17fe:	5f 93       	push	r21
    1800:	6f 93       	push	r22
    1802:	7f 93       	push	r23
    1804:	8f 93       	push	r24
    1806:	9f 93       	push	r25
    1808:	af 93       	push	r26
    180a:	bf 93       	push	r27
    180c:	ef 93       	push	r30
    180e:	ff 93       	push	r31
    1810:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1814:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1818:	ac 01       	movw	r20, r24
    181a:	09 2e       	mov	r0, r25
    181c:	00 0c       	add	r0, r0
    181e:	66 0b       	sbc	r22, r22
    1820:	77 0b       	sbc	r23, r23
    1822:	9a 01       	movw	r18, r20
    1824:	11 27       	eor	r17, r17
    1826:	00 27       	eor	r16, r16
    1828:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    182c:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1830:	60 e0       	ldi	r22, 0x00	; 0
    1832:	70 e0       	ldi	r23, 0x00	; 0
    1834:	40 2b       	or	r20, r16
    1836:	51 2b       	or	r21, r17
    1838:	62 2b       	or	r22, r18
    183a:	73 2b       	or	r23, r19
    183c:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1840:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1844:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1848:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    184c:	b0 9b       	sbis	0x16, 0	; 22
    184e:	1a c0       	rjmp	.+52     	; 0x1884 <__vector_16+0x9a>
    1850:	01 96       	adiw	r24, 0x01	; 1
    1852:	09 2e       	mov	r0, r25
    1854:	00 0c       	add	r0, r0
    1856:	aa 0b       	sbc	r26, r26
    1858:	bb 0b       	sbc	r27, r27
    185a:	bc 01       	movw	r22, r24
    185c:	55 27       	eor	r21, r21
    185e:	44 27       	eor	r20, r20
    1860:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1864:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1868:	a0 e0       	ldi	r26, 0x00	; 0
    186a:	b0 e0       	ldi	r27, 0x00	; 0
    186c:	84 2b       	or	r24, r20
    186e:	95 2b       	or	r25, r21
    1870:	a6 2b       	or	r26, r22
    1872:	b7 2b       	or	r27, r23
    1874:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1878:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    187c:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1880:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1884:	e0 91 08 02 	lds	r30, 0x0208	; 0x800208 <mtable+0x16>
    1888:	f0 91 09 02 	lds	r31, 0x0209	; 0x800209 <mtable+0x17>
    188c:	30 97       	sbiw	r30, 0x00	; 0
    188e:	39 f0       	breq	.+14     	; 0x189e <__vector_16+0xb4>
    1890:	6b e0       	ldi	r22, 0x0B	; 11
    1892:	70 e0       	ldi	r23, 0x00	; 0
    1894:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <otable+0x16>
    1898:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <otable+0x17>
    189c:	09 95       	icall
    189e:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    18a2:	ff 91       	pop	r31
    18a4:	ef 91       	pop	r30
    18a6:	bf 91       	pop	r27
    18a8:	af 91       	pop	r26
    18aa:	9f 91       	pop	r25
    18ac:	8f 91       	pop	r24
    18ae:	7f 91       	pop	r23
    18b0:	6f 91       	pop	r22
    18b2:	5f 91       	pop	r21
    18b4:	4f 91       	pop	r20
    18b6:	3f 91       	pop	r19
    18b8:	2f 91       	pop	r18
    18ba:	1f 91       	pop	r17
    18bc:	0f 91       	pop	r16
    18be:	0f 90       	pop	r0
    18c0:	0f be       	out	0x3f, r0	; 63
    18c2:	0f 90       	pop	r0
    18c4:	1f 90       	pop	r1
    18c6:	18 95       	reti

000018c8 <__vector_17>:
    18c8:	1f 92       	push	r1
    18ca:	0f 92       	push	r0
    18cc:	0f b6       	in	r0, 0x3f	; 63
    18ce:	0f 92       	push	r0
    18d0:	11 24       	eor	r1, r1
    18d2:	0f 93       	push	r16
    18d4:	1f 93       	push	r17
    18d6:	2f 93       	push	r18
    18d8:	3f 93       	push	r19
    18da:	4f 93       	push	r20
    18dc:	5f 93       	push	r21
    18de:	6f 93       	push	r22
    18e0:	7f 93       	push	r23
    18e2:	8f 93       	push	r24
    18e4:	9f 93       	push	r25
    18e6:	af 93       	push	r26
    18e8:	bf 93       	push	r27
    18ea:	ef 93       	push	r30
    18ec:	ff 93       	push	r31
    18ee:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    18f2:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    18f6:	ac 01       	movw	r20, r24
    18f8:	09 2e       	mov	r0, r25
    18fa:	00 0c       	add	r0, r0
    18fc:	66 0b       	sbc	r22, r22
    18fe:	77 0b       	sbc	r23, r23
    1900:	9a 01       	movw	r18, r20
    1902:	11 27       	eor	r17, r17
    1904:	00 27       	eor	r16, r16
    1906:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    190a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    190e:	60 e0       	ldi	r22, 0x00	; 0
    1910:	70 e0       	ldi	r23, 0x00	; 0
    1912:	40 2b       	or	r20, r16
    1914:	51 2b       	or	r21, r17
    1916:	62 2b       	or	r22, r18
    1918:	73 2b       	or	r23, r19
    191a:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    191e:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1922:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1926:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    192a:	b0 9b       	sbis	0x16, 0	; 22
    192c:	1a c0       	rjmp	.+52     	; 0x1962 <__vector_17+0x9a>
    192e:	01 96       	adiw	r24, 0x01	; 1
    1930:	09 2e       	mov	r0, r25
    1932:	00 0c       	add	r0, r0
    1934:	aa 0b       	sbc	r26, r26
    1936:	bb 0b       	sbc	r27, r27
    1938:	bc 01       	movw	r22, r24
    193a:	55 27       	eor	r21, r21
    193c:	44 27       	eor	r20, r20
    193e:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1942:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1946:	a0 e0       	ldi	r26, 0x00	; 0
    1948:	b0 e0       	ldi	r27, 0x00	; 0
    194a:	84 2b       	or	r24, r20
    194c:	95 2b       	or	r25, r21
    194e:	a6 2b       	or	r26, r22
    1950:	b7 2b       	or	r27, r23
    1952:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1956:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    195a:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    195e:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1962:	e0 91 0a 02 	lds	r30, 0x020A	; 0x80020a <mtable+0x18>
    1966:	f0 91 0b 02 	lds	r31, 0x020B	; 0x80020b <mtable+0x19>
    196a:	30 97       	sbiw	r30, 0x00	; 0
    196c:	39 f0       	breq	.+14     	; 0x197c <__vector_17+0xb4>
    196e:	6c e0       	ldi	r22, 0x0C	; 12
    1970:	70 e0       	ldi	r23, 0x00	; 0
    1972:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <otable+0x18>
    1976:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <otable+0x19>
    197a:	09 95       	icall
    197c:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1980:	ff 91       	pop	r31
    1982:	ef 91       	pop	r30
    1984:	bf 91       	pop	r27
    1986:	af 91       	pop	r26
    1988:	9f 91       	pop	r25
    198a:	8f 91       	pop	r24
    198c:	7f 91       	pop	r23
    198e:	6f 91       	pop	r22
    1990:	5f 91       	pop	r21
    1992:	4f 91       	pop	r20
    1994:	3f 91       	pop	r19
    1996:	2f 91       	pop	r18
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	0f 90       	pop	r0
    199e:	0f be       	out	0x3f, r0	; 63
    19a0:	0f 90       	pop	r0
    19a2:	1f 90       	pop	r1
    19a4:	18 95       	reti

000019a6 <__vector_18>:
    19a6:	1f 92       	push	r1
    19a8:	0f 92       	push	r0
    19aa:	0f b6       	in	r0, 0x3f	; 63
    19ac:	0f 92       	push	r0
    19ae:	11 24       	eor	r1, r1
    19b0:	0f 93       	push	r16
    19b2:	1f 93       	push	r17
    19b4:	2f 93       	push	r18
    19b6:	3f 93       	push	r19
    19b8:	4f 93       	push	r20
    19ba:	5f 93       	push	r21
    19bc:	6f 93       	push	r22
    19be:	7f 93       	push	r23
    19c0:	8f 93       	push	r24
    19c2:	9f 93       	push	r25
    19c4:	af 93       	push	r26
    19c6:	bf 93       	push	r27
    19c8:	ef 93       	push	r30
    19ca:	ff 93       	push	r31
    19cc:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    19d0:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    19d4:	ac 01       	movw	r20, r24
    19d6:	09 2e       	mov	r0, r25
    19d8:	00 0c       	add	r0, r0
    19da:	66 0b       	sbc	r22, r22
    19dc:	77 0b       	sbc	r23, r23
    19de:	9a 01       	movw	r18, r20
    19e0:	11 27       	eor	r17, r17
    19e2:	00 27       	eor	r16, r16
    19e4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    19e8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    19ec:	60 e0       	ldi	r22, 0x00	; 0
    19ee:	70 e0       	ldi	r23, 0x00	; 0
    19f0:	40 2b       	or	r20, r16
    19f2:	51 2b       	or	r21, r17
    19f4:	62 2b       	or	r22, r18
    19f6:	73 2b       	or	r23, r19
    19f8:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    19fc:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1a00:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1a04:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1a08:	b0 9b       	sbis	0x16, 0	; 22
    1a0a:	1a c0       	rjmp	.+52     	; 0x1a40 <__vector_18+0x9a>
    1a0c:	01 96       	adiw	r24, 0x01	; 1
    1a0e:	09 2e       	mov	r0, r25
    1a10:	00 0c       	add	r0, r0
    1a12:	aa 0b       	sbc	r26, r26
    1a14:	bb 0b       	sbc	r27, r27
    1a16:	bc 01       	movw	r22, r24
    1a18:	55 27       	eor	r21, r21
    1a1a:	44 27       	eor	r20, r20
    1a1c:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1a20:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1a24:	a0 e0       	ldi	r26, 0x00	; 0
    1a26:	b0 e0       	ldi	r27, 0x00	; 0
    1a28:	84 2b       	or	r24, r20
    1a2a:	95 2b       	or	r25, r21
    1a2c:	a6 2b       	or	r26, r22
    1a2e:	b7 2b       	or	r27, r23
    1a30:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1a34:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1a38:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1a3c:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1a40:	e0 91 0c 02 	lds	r30, 0x020C	; 0x80020c <mtable+0x1a>
    1a44:	f0 91 0d 02 	lds	r31, 0x020D	; 0x80020d <mtable+0x1b>
    1a48:	30 97       	sbiw	r30, 0x00	; 0
    1a4a:	39 f0       	breq	.+14     	; 0x1a5a <__vector_18+0xb4>
    1a4c:	6d e0       	ldi	r22, 0x0D	; 13
    1a4e:	70 e0       	ldi	r23, 0x00	; 0
    1a50:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <otable+0x1a>
    1a54:	90 91 75 01 	lds	r25, 0x0175	; 0x800175 <otable+0x1b>
    1a58:	09 95       	icall
    1a5a:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1a5e:	ff 91       	pop	r31
    1a60:	ef 91       	pop	r30
    1a62:	bf 91       	pop	r27
    1a64:	af 91       	pop	r26
    1a66:	9f 91       	pop	r25
    1a68:	8f 91       	pop	r24
    1a6a:	7f 91       	pop	r23
    1a6c:	6f 91       	pop	r22
    1a6e:	5f 91       	pop	r21
    1a70:	4f 91       	pop	r20
    1a72:	3f 91       	pop	r19
    1a74:	2f 91       	pop	r18
    1a76:	1f 91       	pop	r17
    1a78:	0f 91       	pop	r16
    1a7a:	0f 90       	pop	r0
    1a7c:	0f be       	out	0x3f, r0	; 63
    1a7e:	0f 90       	pop	r0
    1a80:	1f 90       	pop	r1
    1a82:	18 95       	reti

00001a84 <__vector_19>:
    1a84:	1f 92       	push	r1
    1a86:	0f 92       	push	r0
    1a88:	0f b6       	in	r0, 0x3f	; 63
    1a8a:	0f 92       	push	r0
    1a8c:	11 24       	eor	r1, r1
    1a8e:	0f 93       	push	r16
    1a90:	1f 93       	push	r17
    1a92:	2f 93       	push	r18
    1a94:	3f 93       	push	r19
    1a96:	4f 93       	push	r20
    1a98:	5f 93       	push	r21
    1a9a:	6f 93       	push	r22
    1a9c:	7f 93       	push	r23
    1a9e:	8f 93       	push	r24
    1aa0:	9f 93       	push	r25
    1aa2:	af 93       	push	r26
    1aa4:	bf 93       	push	r27
    1aa6:	ef 93       	push	r30
    1aa8:	ff 93       	push	r31
    1aaa:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1aae:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1ab2:	ac 01       	movw	r20, r24
    1ab4:	09 2e       	mov	r0, r25
    1ab6:	00 0c       	add	r0, r0
    1ab8:	66 0b       	sbc	r22, r22
    1aba:	77 0b       	sbc	r23, r23
    1abc:	9a 01       	movw	r18, r20
    1abe:	11 27       	eor	r17, r17
    1ac0:	00 27       	eor	r16, r16
    1ac2:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ac6:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1aca:	60 e0       	ldi	r22, 0x00	; 0
    1acc:	70 e0       	ldi	r23, 0x00	; 0
    1ace:	40 2b       	or	r20, r16
    1ad0:	51 2b       	or	r21, r17
    1ad2:	62 2b       	or	r22, r18
    1ad4:	73 2b       	or	r23, r19
    1ad6:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1ada:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1ade:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1ae2:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1ae6:	b0 9b       	sbis	0x16, 0	; 22
    1ae8:	1a c0       	rjmp	.+52     	; 0x1b1e <__vector_19+0x9a>
    1aea:	01 96       	adiw	r24, 0x01	; 1
    1aec:	09 2e       	mov	r0, r25
    1aee:	00 0c       	add	r0, r0
    1af0:	aa 0b       	sbc	r26, r26
    1af2:	bb 0b       	sbc	r27, r27
    1af4:	bc 01       	movw	r22, r24
    1af6:	55 27       	eor	r21, r21
    1af8:	44 27       	eor	r20, r20
    1afa:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1afe:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1b02:	a0 e0       	ldi	r26, 0x00	; 0
    1b04:	b0 e0       	ldi	r27, 0x00	; 0
    1b06:	84 2b       	or	r24, r20
    1b08:	95 2b       	or	r25, r21
    1b0a:	a6 2b       	or	r26, r22
    1b0c:	b7 2b       	or	r27, r23
    1b0e:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1b12:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1b16:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1b1a:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1b1e:	e0 91 0e 02 	lds	r30, 0x020E	; 0x80020e <mtable+0x1c>
    1b22:	f0 91 0f 02 	lds	r31, 0x020F	; 0x80020f <mtable+0x1d>
    1b26:	30 97       	sbiw	r30, 0x00	; 0
    1b28:	39 f0       	breq	.+14     	; 0x1b38 <__vector_19+0xb4>
    1b2a:	6e e0       	ldi	r22, 0x0E	; 14
    1b2c:	70 e0       	ldi	r23, 0x00	; 0
    1b2e:	80 91 76 01 	lds	r24, 0x0176	; 0x800176 <otable+0x1c>
    1b32:	90 91 77 01 	lds	r25, 0x0177	; 0x800177 <otable+0x1d>
    1b36:	09 95       	icall
    1b38:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1b3c:	ff 91       	pop	r31
    1b3e:	ef 91       	pop	r30
    1b40:	bf 91       	pop	r27
    1b42:	af 91       	pop	r26
    1b44:	9f 91       	pop	r25
    1b46:	8f 91       	pop	r24
    1b48:	7f 91       	pop	r23
    1b4a:	6f 91       	pop	r22
    1b4c:	5f 91       	pop	r21
    1b4e:	4f 91       	pop	r20
    1b50:	3f 91       	pop	r19
    1b52:	2f 91       	pop	r18
    1b54:	1f 91       	pop	r17
    1b56:	0f 91       	pop	r16
    1b58:	0f 90       	pop	r0
    1b5a:	0f be       	out	0x3f, r0	; 63
    1b5c:	0f 90       	pop	r0
    1b5e:	1f 90       	pop	r1
    1b60:	18 95       	reti

00001b62 <__vector_20>:
    1b62:	1f 92       	push	r1
    1b64:	0f 92       	push	r0
    1b66:	0f b6       	in	r0, 0x3f	; 63
    1b68:	0f 92       	push	r0
    1b6a:	11 24       	eor	r1, r1
    1b6c:	0f 93       	push	r16
    1b6e:	1f 93       	push	r17
    1b70:	2f 93       	push	r18
    1b72:	3f 93       	push	r19
    1b74:	4f 93       	push	r20
    1b76:	5f 93       	push	r21
    1b78:	6f 93       	push	r22
    1b7a:	7f 93       	push	r23
    1b7c:	8f 93       	push	r24
    1b7e:	9f 93       	push	r25
    1b80:	af 93       	push	r26
    1b82:	bf 93       	push	r27
    1b84:	ef 93       	push	r30
    1b86:	ff 93       	push	r31
    1b88:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1b8c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1b90:	ac 01       	movw	r20, r24
    1b92:	09 2e       	mov	r0, r25
    1b94:	00 0c       	add	r0, r0
    1b96:	66 0b       	sbc	r22, r22
    1b98:	77 0b       	sbc	r23, r23
    1b9a:	9a 01       	movw	r18, r20
    1b9c:	11 27       	eor	r17, r17
    1b9e:	00 27       	eor	r16, r16
    1ba0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ba4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ba8:	60 e0       	ldi	r22, 0x00	; 0
    1baa:	70 e0       	ldi	r23, 0x00	; 0
    1bac:	40 2b       	or	r20, r16
    1bae:	51 2b       	or	r21, r17
    1bb0:	62 2b       	or	r22, r18
    1bb2:	73 2b       	or	r23, r19
    1bb4:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1bb8:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1bbc:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1bc0:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1bc4:	b0 9b       	sbis	0x16, 0	; 22
    1bc6:	1a c0       	rjmp	.+52     	; 0x1bfc <__vector_20+0x9a>
    1bc8:	01 96       	adiw	r24, 0x01	; 1
    1bca:	09 2e       	mov	r0, r25
    1bcc:	00 0c       	add	r0, r0
    1bce:	aa 0b       	sbc	r26, r26
    1bd0:	bb 0b       	sbc	r27, r27
    1bd2:	bc 01       	movw	r22, r24
    1bd4:	55 27       	eor	r21, r21
    1bd6:	44 27       	eor	r20, r20
    1bd8:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1bdc:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1be0:	a0 e0       	ldi	r26, 0x00	; 0
    1be2:	b0 e0       	ldi	r27, 0x00	; 0
    1be4:	84 2b       	or	r24, r20
    1be6:	95 2b       	or	r25, r21
    1be8:	a6 2b       	or	r26, r22
    1bea:	b7 2b       	or	r27, r23
    1bec:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1bf0:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1bf4:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1bf8:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1bfc:	e0 91 10 02 	lds	r30, 0x0210	; 0x800210 <mtable+0x1e>
    1c00:	f0 91 11 02 	lds	r31, 0x0211	; 0x800211 <mtable+0x1f>
    1c04:	30 97       	sbiw	r30, 0x00	; 0
    1c06:	39 f0       	breq	.+14     	; 0x1c16 <__vector_20+0xb4>
    1c08:	6f e0       	ldi	r22, 0x0F	; 15
    1c0a:	70 e0       	ldi	r23, 0x00	; 0
    1c0c:	80 91 78 01 	lds	r24, 0x0178	; 0x800178 <otable+0x1e>
    1c10:	90 91 79 01 	lds	r25, 0x0179	; 0x800179 <otable+0x1f>
    1c14:	09 95       	icall
    1c16:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1c1a:	ff 91       	pop	r31
    1c1c:	ef 91       	pop	r30
    1c1e:	bf 91       	pop	r27
    1c20:	af 91       	pop	r26
    1c22:	9f 91       	pop	r25
    1c24:	8f 91       	pop	r24
    1c26:	7f 91       	pop	r23
    1c28:	6f 91       	pop	r22
    1c2a:	5f 91       	pop	r21
    1c2c:	4f 91       	pop	r20
    1c2e:	3f 91       	pop	r19
    1c30:	2f 91       	pop	r18
    1c32:	1f 91       	pop	r17
    1c34:	0f 91       	pop	r16
    1c36:	0f 90       	pop	r0
    1c38:	0f be       	out	0x3f, r0	; 63
    1c3a:	0f 90       	pop	r0
    1c3c:	1f 90       	pop	r1
    1c3e:	18 95       	reti

00001c40 <__vector_21>:
    1c40:	1f 92       	push	r1
    1c42:	0f 92       	push	r0
    1c44:	0f b6       	in	r0, 0x3f	; 63
    1c46:	0f 92       	push	r0
    1c48:	11 24       	eor	r1, r1
    1c4a:	0f 93       	push	r16
    1c4c:	1f 93       	push	r17
    1c4e:	2f 93       	push	r18
    1c50:	3f 93       	push	r19
    1c52:	4f 93       	push	r20
    1c54:	5f 93       	push	r21
    1c56:	6f 93       	push	r22
    1c58:	7f 93       	push	r23
    1c5a:	8f 93       	push	r24
    1c5c:	9f 93       	push	r25
    1c5e:	af 93       	push	r26
    1c60:	bf 93       	push	r27
    1c62:	ef 93       	push	r30
    1c64:	ff 93       	push	r31
    1c66:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1c6a:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1c6e:	ac 01       	movw	r20, r24
    1c70:	09 2e       	mov	r0, r25
    1c72:	00 0c       	add	r0, r0
    1c74:	66 0b       	sbc	r22, r22
    1c76:	77 0b       	sbc	r23, r23
    1c78:	9a 01       	movw	r18, r20
    1c7a:	11 27       	eor	r17, r17
    1c7c:	00 27       	eor	r16, r16
    1c7e:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1c82:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1c86:	60 e0       	ldi	r22, 0x00	; 0
    1c88:	70 e0       	ldi	r23, 0x00	; 0
    1c8a:	40 2b       	or	r20, r16
    1c8c:	51 2b       	or	r21, r17
    1c8e:	62 2b       	or	r22, r18
    1c90:	73 2b       	or	r23, r19
    1c92:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1c96:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1c9a:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1c9e:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1ca2:	b0 9b       	sbis	0x16, 0	; 22
    1ca4:	1a c0       	rjmp	.+52     	; 0x1cda <__vector_21+0x9a>
    1ca6:	01 96       	adiw	r24, 0x01	; 1
    1ca8:	09 2e       	mov	r0, r25
    1caa:	00 0c       	add	r0, r0
    1cac:	aa 0b       	sbc	r26, r26
    1cae:	bb 0b       	sbc	r27, r27
    1cb0:	bc 01       	movw	r22, r24
    1cb2:	55 27       	eor	r21, r21
    1cb4:	44 27       	eor	r20, r20
    1cb6:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1cba:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1cbe:	a0 e0       	ldi	r26, 0x00	; 0
    1cc0:	b0 e0       	ldi	r27, 0x00	; 0
    1cc2:	84 2b       	or	r24, r20
    1cc4:	95 2b       	or	r25, r21
    1cc6:	a6 2b       	or	r26, r22
    1cc8:	b7 2b       	or	r27, r23
    1cca:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1cce:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1cd2:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1cd6:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1cda:	e0 91 12 02 	lds	r30, 0x0212	; 0x800212 <mtable+0x20>
    1cde:	f0 91 13 02 	lds	r31, 0x0213	; 0x800213 <mtable+0x21>
    1ce2:	30 97       	sbiw	r30, 0x00	; 0
    1ce4:	39 f0       	breq	.+14     	; 0x1cf4 <__vector_21+0xb4>
    1ce6:	60 e1       	ldi	r22, 0x10	; 16
    1ce8:	70 e0       	ldi	r23, 0x00	; 0
    1cea:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <otable+0x20>
    1cee:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <otable+0x21>
    1cf2:	09 95       	icall
    1cf4:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1cf8:	ff 91       	pop	r31
    1cfa:	ef 91       	pop	r30
    1cfc:	bf 91       	pop	r27
    1cfe:	af 91       	pop	r26
    1d00:	9f 91       	pop	r25
    1d02:	8f 91       	pop	r24
    1d04:	7f 91       	pop	r23
    1d06:	6f 91       	pop	r22
    1d08:	5f 91       	pop	r21
    1d0a:	4f 91       	pop	r20
    1d0c:	3f 91       	pop	r19
    1d0e:	2f 91       	pop	r18
    1d10:	1f 91       	pop	r17
    1d12:	0f 91       	pop	r16
    1d14:	0f 90       	pop	r0
    1d16:	0f be       	out	0x3f, r0	; 63
    1d18:	0f 90       	pop	r0
    1d1a:	1f 90       	pop	r1
    1d1c:	18 95       	reti

00001d1e <__vector_22>:
    1d1e:	1f 92       	push	r1
    1d20:	0f 92       	push	r0
    1d22:	0f b6       	in	r0, 0x3f	; 63
    1d24:	0f 92       	push	r0
    1d26:	11 24       	eor	r1, r1
    1d28:	0f 93       	push	r16
    1d2a:	1f 93       	push	r17
    1d2c:	2f 93       	push	r18
    1d2e:	3f 93       	push	r19
    1d30:	4f 93       	push	r20
    1d32:	5f 93       	push	r21
    1d34:	6f 93       	push	r22
    1d36:	7f 93       	push	r23
    1d38:	8f 93       	push	r24
    1d3a:	9f 93       	push	r25
    1d3c:	af 93       	push	r26
    1d3e:	bf 93       	push	r27
    1d40:	ef 93       	push	r30
    1d42:	ff 93       	push	r31
    1d44:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1d48:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1d4c:	ac 01       	movw	r20, r24
    1d4e:	09 2e       	mov	r0, r25
    1d50:	00 0c       	add	r0, r0
    1d52:	66 0b       	sbc	r22, r22
    1d54:	77 0b       	sbc	r23, r23
    1d56:	9a 01       	movw	r18, r20
    1d58:	11 27       	eor	r17, r17
    1d5a:	00 27       	eor	r16, r16
    1d5c:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d60:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d64:	60 e0       	ldi	r22, 0x00	; 0
    1d66:	70 e0       	ldi	r23, 0x00	; 0
    1d68:	40 2b       	or	r20, r16
    1d6a:	51 2b       	or	r21, r17
    1d6c:	62 2b       	or	r22, r18
    1d6e:	73 2b       	or	r23, r19
    1d70:	40 93 52 01 	sts	0x0152, r20	; 0x800152 <timestamp>
    1d74:	50 93 53 01 	sts	0x0153, r21	; 0x800153 <timestamp+0x1>
    1d78:	60 93 54 01 	sts	0x0154, r22	; 0x800154 <timestamp+0x2>
    1d7c:	70 93 55 01 	sts	0x0155, r23	; 0x800155 <timestamp+0x3>
    1d80:	b0 9b       	sbis	0x16, 0	; 22
    1d82:	1a c0       	rjmp	.+52     	; 0x1db8 <__vector_22+0x9a>
    1d84:	01 96       	adiw	r24, 0x01	; 1
    1d86:	09 2e       	mov	r0, r25
    1d88:	00 0c       	add	r0, r0
    1d8a:	aa 0b       	sbc	r26, r26
    1d8c:	bb 0b       	sbc	r27, r27
    1d8e:	bc 01       	movw	r22, r24
    1d90:	55 27       	eor	r21, r21
    1d92:	44 27       	eor	r20, r20
    1d94:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1d98:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1d9c:	a0 e0       	ldi	r26, 0x00	; 0
    1d9e:	b0 e0       	ldi	r27, 0x00	; 0
    1da0:	84 2b       	or	r24, r20
    1da2:	95 2b       	or	r25, r21
    1da4:	a6 2b       	or	r26, r22
    1da6:	b7 2b       	or	r27, r23
    1da8:	80 93 52 01 	sts	0x0152, r24	; 0x800152 <timestamp>
    1dac:	90 93 53 01 	sts	0x0153, r25	; 0x800153 <timestamp+0x1>
    1db0:	a0 93 54 01 	sts	0x0154, r26	; 0x800154 <timestamp+0x2>
    1db4:	b0 93 55 01 	sts	0x0155, r27	; 0x800155 <timestamp+0x3>
    1db8:	e0 91 14 02 	lds	r30, 0x0214	; 0x800214 <mtable+0x22>
    1dbc:	f0 91 15 02 	lds	r31, 0x0215	; 0x800215 <mtable+0x23>
    1dc0:	30 97       	sbiw	r30, 0x00	; 0
    1dc2:	39 f0       	breq	.+14     	; 0x1dd2 <__vector_22+0xb4>
    1dc4:	61 e1       	ldi	r22, 0x11	; 17
    1dc6:	70 e0       	ldi	r23, 0x00	; 0
    1dc8:	80 91 7c 01 	lds	r24, 0x017C	; 0x80017c <otable+0x22>
    1dcc:	90 91 7d 01 	lds	r25, 0x017D	; 0x80017d <otable+0x23>
    1dd0:	09 95       	icall
    1dd2:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1dd6:	ff 91       	pop	r31
    1dd8:	ef 91       	pop	r30
    1dda:	bf 91       	pop	r27
    1ddc:	af 91       	pop	r26
    1dde:	9f 91       	pop	r25
    1de0:	8f 91       	pop	r24
    1de2:	7f 91       	pop	r23
    1de4:	6f 91       	pop	r22
    1de6:	5f 91       	pop	r21
    1de8:	4f 91       	pop	r20
    1dea:	3f 91       	pop	r19
    1dec:	2f 91       	pop	r18
    1dee:	1f 91       	pop	r17
    1df0:	0f 91       	pop	r16
    1df2:	0f 90       	pop	r0
    1df4:	0f be       	out	0x3f, r0	; 63
    1df6:	0f 90       	pop	r0
    1df8:	1f 90       	pop	r1
    1dfa:	18 95       	reti

00001dfc <idle>:
    1dfc:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1e00:	78 94       	sei
    1e02:	81 e0       	ldi	r24, 0x01	; 1
    1e04:	83 bf       	out	0x33, r24	; 51
    1e06:	88 95       	sleep
    1e08:	fc cf       	rjmp	.-8      	; 0x1e02 <idle+0x6>

00001e0a <__vector_9>:
    1e0a:	1f 92       	push	r1
    1e0c:	0f 92       	push	r0
    1e0e:	0f b6       	in	r0, 0x3f	; 63
    1e10:	0f 92       	push	r0
    1e12:	11 24       	eor	r1, r1
    1e14:	2f 93       	push	r18
    1e16:	3f 93       	push	r19
    1e18:	4f 93       	push	r20
    1e1a:	5f 93       	push	r21
    1e1c:	6f 93       	push	r22
    1e1e:	7f 93       	push	r23
    1e20:	8f 93       	push	r24
    1e22:	9f 93       	push	r25
    1e24:	ef 93       	push	r30
    1e26:	ff 93       	push	r31
    1e28:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1e2c:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1e30:	01 96       	adiw	r24, 0x01	; 1
    1e32:	90 93 51 01 	sts	0x0151, r25	; 0x800151 <overflows+0x1>
    1e36:	80 93 50 01 	sts	0x0150, r24	; 0x800150 <overflows>
    1e3a:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1e3e:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1e42:	30 97       	sbiw	r30, 0x00	; 0
    1e44:	01 f1       	breq	.+64     	; 0x1e86 <__vector_9+0x7c>
    1e46:	42 81       	ldd	r20, Z+2	; 0x02
    1e48:	53 81       	ldd	r21, Z+3	; 0x03
    1e4a:	64 81       	ldd	r22, Z+4	; 0x04
    1e4c:	75 81       	ldd	r23, Z+5	; 0x05
    1e4e:	86 17       	cp	r24, r22
    1e50:	97 07       	cpc	r25, r23
    1e52:	c9 f4       	brne	.+50     	; 0x1e86 <__vector_9+0x7c>
    1e54:	ca 01       	movw	r24, r20
    1e56:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e5a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e5e:	42 1b       	sub	r20, r18
    1e60:	53 0b       	sbc	r21, r19
    1e62:	41 30       	cpi	r20, 0x01	; 1
    1e64:	51 05       	cpc	r21, r1
    1e66:	29 f4       	brne	.+10     	; 0x1e72 <__vector_9+0x68>
    1e68:	80 91 84 00 	lds	r24, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1e6c:	90 91 85 00 	lds	r25, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1e70:	01 96       	adiw	r24, 0x01	; 1
    1e72:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1e76:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1e7a:	ef e6       	ldi	r30, 0x6F	; 111
    1e7c:	f0 e0       	ldi	r31, 0x00	; 0
    1e7e:	80 81       	ld	r24, Z
    1e80:	82 60       	ori	r24, 0x02	; 2
    1e82:	80 83       	st	Z, r24
    1e84:	05 c0       	rjmp	.+10     	; 0x1e90 <__vector_9+0x86>
    1e86:	ef e6       	ldi	r30, 0x6F	; 111
    1e88:	f0 e0       	ldi	r31, 0x00	; 0
    1e8a:	80 81       	ld	r24, Z
    1e8c:	8d 7f       	andi	r24, 0xFD	; 253
    1e8e:	80 83       	st	Z, r24
    1e90:	ff 91       	pop	r31
    1e92:	ef 91       	pop	r30
    1e94:	9f 91       	pop	r25
    1e96:	8f 91       	pop	r24
    1e98:	7f 91       	pop	r23
    1e9a:	6f 91       	pop	r22
    1e9c:	5f 91       	pop	r21
    1e9e:	4f 91       	pop	r20
    1ea0:	3f 91       	pop	r19
    1ea2:	2f 91       	pop	r18
    1ea4:	0f 90       	pop	r0
    1ea6:	0f be       	out	0x3f, r0	; 63
    1ea8:	0f 90       	pop	r0
    1eaa:	1f 90       	pop	r1
    1eac:	18 95       	reti

00001eae <__vector_7>:
    1eae:	1f 92       	push	r1
    1eb0:	0f 92       	push	r0
    1eb2:	0f b6       	in	r0, 0x3f	; 63
    1eb4:	0f 92       	push	r0
    1eb6:	11 24       	eor	r1, r1
    1eb8:	cf 92       	push	r12
    1eba:	df 92       	push	r13
    1ebc:	ef 92       	push	r14
    1ebe:	ff 92       	push	r15
    1ec0:	2f 93       	push	r18
    1ec2:	3f 93       	push	r19
    1ec4:	4f 93       	push	r20
    1ec6:	5f 93       	push	r21
    1ec8:	6f 93       	push	r22
    1eca:	7f 93       	push	r23
    1ecc:	8f 93       	push	r24
    1ece:	9f 93       	push	r25
    1ed0:	af 93       	push	r26
    1ed2:	bf 93       	push	r27
    1ed4:	ef 93       	push	r30
    1ed6:	ff 93       	push	r31
    1ed8:	80 91 50 01 	lds	r24, 0x0150	; 0x800150 <overflows>
    1edc:	90 91 51 01 	lds	r25, 0x0151	; 0x800151 <overflows+0x1>
    1ee0:	6c 01       	movw	r12, r24
    1ee2:	09 2e       	mov	r0, r25
    1ee4:	00 0c       	add	r0, r0
    1ee6:	ee 08       	sbc	r14, r14
    1ee8:	ff 08       	sbc	r15, r15
    1eea:	76 01       	movw	r14, r12
    1eec:	dd 24       	eor	r13, r13
    1eee:	cc 24       	eor	r12, r12
    1ef0:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1ef4:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1ef8:	60 e0       	ldi	r22, 0x00	; 0
    1efa:	70 e0       	ldi	r23, 0x00	; 0
    1efc:	c4 2a       	or	r12, r20
    1efe:	d5 2a       	or	r13, r21
    1f00:	e6 2a       	or	r14, r22
    1f02:	f7 2a       	or	r15, r23
    1f04:	b0 9b       	sbis	0x16, 0	; 22
    1f06:	1e c0       	rjmp	.+60     	; 0x1f44 <__vector_7+0x96>
    1f08:	6c 01       	movw	r12, r24
    1f0a:	2f ef       	ldi	r18, 0xFF	; 255
    1f0c:	c2 1a       	sub	r12, r18
    1f0e:	d2 0a       	sbc	r13, r18
    1f10:	0d 2c       	mov	r0, r13
    1f12:	00 0c       	add	r0, r0
    1f14:	ee 08       	sbc	r14, r14
    1f16:	ff 08       	sbc	r15, r15
    1f18:	d6 01       	movw	r26, r12
    1f1a:	99 27       	eor	r25, r25
    1f1c:	88 27       	eor	r24, r24
    1f1e:	c0 90 84 00 	lds	r12, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f22:	d0 90 85 00 	lds	r13, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f26:	e1 2c       	mov	r14, r1
    1f28:	f1 2c       	mov	r15, r1
    1f2a:	c8 2a       	or	r12, r24
    1f2c:	d9 2a       	or	r13, r25
    1f2e:	ea 2a       	or	r14, r26
    1f30:	fb 2a       	or	r15, r27
    1f32:	08 c0       	rjmp	.+16     	; 0x1f44 <__vector_7+0x96>
    1f34:	86 e5       	ldi	r24, 0x56	; 86
    1f36:	91 e0       	ldi	r25, 0x01	; 1
    1f38:	0e 94 b6 06 	call	0xd6c	; 0xd6c <dequeue>
    1f3c:	68 e5       	ldi	r22, 0x58	; 88
    1f3e:	71 e0       	ldi	r23, 0x01	; 1
    1f40:	0e 94 54 06 	call	0xca8	; 0xca8 <enqueueByDeadline>
    1f44:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    1f48:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    1f4c:	30 97       	sbiw	r30, 0x00	; 0
    1f4e:	69 f0       	breq	.+26     	; 0x1f6a <__vector_7+0xbc>
    1f50:	82 81       	ldd	r24, Z+2	; 0x02
    1f52:	93 81       	ldd	r25, Z+3	; 0x03
    1f54:	a4 81       	ldd	r26, Z+4	; 0x04
    1f56:	b5 81       	ldd	r27, Z+5	; 0x05
    1f58:	8c 19       	sub	r24, r12
    1f5a:	9d 09       	sbc	r25, r13
    1f5c:	ae 09       	sbc	r26, r14
    1f5e:	bf 09       	sbc	r27, r15
    1f60:	18 16       	cp	r1, r24
    1f62:	19 06       	cpc	r1, r25
    1f64:	1a 06       	cpc	r1, r26
    1f66:	1b 06       	cpc	r1, r27
    1f68:	2c f7       	brge	.-54     	; 0x1f34 <__vector_7+0x86>
    1f6a:	30 97       	sbiw	r30, 0x00	; 0
    1f6c:	21 f1       	breq	.+72     	; 0x1fb6 <__vector_7+0x108>
    1f6e:	82 81       	ldd	r24, Z+2	; 0x02
    1f70:	93 81       	ldd	r25, Z+3	; 0x03
    1f72:	a4 81       	ldd	r26, Z+4	; 0x04
    1f74:	b5 81       	ldd	r27, Z+5	; 0x05
    1f76:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    1f7a:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    1f7e:	2a 17       	cp	r18, r26
    1f80:	3b 07       	cpc	r19, r27
    1f82:	c9 f4       	brne	.+50     	; 0x1fb6 <__vector_7+0x108>
    1f84:	9c 01       	movw	r18, r24
    1f86:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f8a:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f8e:	84 1b       	sub	r24, r20
    1f90:	95 0b       	sbc	r25, r21
    1f92:	01 97       	sbiw	r24, 0x01	; 1
    1f94:	31 f4       	brne	.+12     	; 0x1fa2 <__vector_7+0xf4>
    1f96:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    1f9a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    1f9e:	2f 5f       	subi	r18, 0xFF	; 255
    1fa0:	3f 4f       	sbci	r19, 0xFF	; 255
    1fa2:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    1fa6:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    1faa:	ef e6       	ldi	r30, 0x6F	; 111
    1fac:	f0 e0       	ldi	r31, 0x00	; 0
    1fae:	80 81       	ld	r24, Z
    1fb0:	82 60       	ori	r24, 0x02	; 2
    1fb2:	80 83       	st	Z, r24
    1fb4:	05 c0       	rjmp	.+10     	; 0x1fc0 <__vector_7+0x112>
    1fb6:	ef e6       	ldi	r30, 0x6F	; 111
    1fb8:	f0 e0       	ldi	r31, 0x00	; 0
    1fba:	80 81       	ld	r24, Z
    1fbc:	8d 7f       	andi	r24, 0xFD	; 253
    1fbe:	80 83       	st	Z, r24
    1fc0:	0e 94 fc 06 	call	0xdf8	; 0xdf8 <schedule>
    1fc4:	ff 91       	pop	r31
    1fc6:	ef 91       	pop	r30
    1fc8:	bf 91       	pop	r27
    1fca:	af 91       	pop	r26
    1fcc:	9f 91       	pop	r25
    1fce:	8f 91       	pop	r24
    1fd0:	7f 91       	pop	r23
    1fd2:	6f 91       	pop	r22
    1fd4:	5f 91       	pop	r21
    1fd6:	4f 91       	pop	r20
    1fd8:	3f 91       	pop	r19
    1fda:	2f 91       	pop	r18
    1fdc:	ff 90       	pop	r15
    1fde:	ef 90       	pop	r14
    1fe0:	df 90       	pop	r13
    1fe2:	cf 90       	pop	r12
    1fe4:	0f 90       	pop	r0
    1fe6:	0f be       	out	0x3f, r0	; 63
    1fe8:	0f 90       	pop	r0
    1fea:	1f 90       	pop	r1
    1fec:	18 95       	reti

00001fee <async>:
    1fee:	3f 92       	push	r3
    1ff0:	4f 92       	push	r4
    1ff2:	5f 92       	push	r5
    1ff4:	6f 92       	push	r6
    1ff6:	7f 92       	push	r7
    1ff8:	8f 92       	push	r8
    1ffa:	9f 92       	push	r9
    1ffc:	af 92       	push	r10
    1ffe:	bf 92       	push	r11
    2000:	cf 92       	push	r12
    2002:	df 92       	push	r13
    2004:	ef 92       	push	r14
    2006:	ff 92       	push	r15
    2008:	0f 93       	push	r16
    200a:	1f 93       	push	r17
    200c:	cf 93       	push	r28
    200e:	df 93       	push	r29
    2010:	2b 01       	movw	r4, r22
    2012:	3c 01       	movw	r6, r24
    2014:	49 01       	movw	r8, r18
    2016:	5a 01       	movw	r10, r20
    2018:	8f b7       	in	r24, 0x3f	; 63
    201a:	80 78       	andi	r24, 0x80	; 128
    201c:	38 2e       	mov	r3, r24
    201e:	f8 94       	cli
    2020:	85 e3       	ldi	r24, 0x35	; 53
    2022:	91 e0       	ldi	r25, 0x01	; 1
    2024:	0e 94 b6 06 	call	0xd6c	; 0xd6c <dequeue>
    2028:	ec 01       	movw	r28, r24
    202a:	1b 87       	std	Y+11, r17	; 0x0b
    202c:	0a 87       	std	Y+10, r16	; 0x0a
    202e:	fd 86       	std	Y+13, r15	; 0x0d
    2030:	ec 86       	std	Y+12, r14	; 0x0c
    2032:	df 86       	std	Y+15, r13	; 0x0f
    2034:	ce 86       	std	Y+14, r12	; 0x0e
    2036:	33 20       	and	r3, r3
    2038:	61 f0       	breq	.+24     	; 0x2052 <async+0x64>
    203a:	e0 91 2f 01 	lds	r30, 0x012F	; 0x80012f <current>
    203e:	f0 91 30 01 	lds	r31, 0x0130	; 0x800130 <current+0x1>
    2042:	02 80       	ldd	r0, Z+2	; 0x02
    2044:	f3 81       	ldd	r31, Z+3	; 0x03
    2046:	e0 2d       	mov	r30, r0
    2048:	82 81       	ldd	r24, Z+2	; 0x02
    204a:	93 81       	ldd	r25, Z+3	; 0x03
    204c:	a4 81       	ldd	r26, Z+4	; 0x04
    204e:	b5 81       	ldd	r27, Z+5	; 0x05
    2050:	08 c0       	rjmp	.+16     	; 0x2062 <async+0x74>
    2052:	80 91 52 01 	lds	r24, 0x0152	; 0x800152 <timestamp>
    2056:	90 91 53 01 	lds	r25, 0x0153	; 0x800153 <timestamp+0x1>
    205a:	a0 91 54 01 	lds	r26, 0x0154	; 0x800154 <timestamp+0x2>
    205e:	b0 91 55 01 	lds	r27, 0x0155	; 0x800155 <timestamp+0x3>
    2062:	48 0e       	add	r4, r24
    2064:	59 1e       	adc	r5, r25
    2066:	6a 1e       	adc	r6, r26
    2068:	7b 1e       	adc	r7, r27
    206a:	4a 82       	std	Y+2, r4	; 0x02
    206c:	5b 82       	std	Y+3, r5	; 0x03
    206e:	6c 82       	std	Y+4, r6	; 0x04
    2070:	7d 82       	std	Y+5, r7	; 0x05
    2072:	18 14       	cp	r1, r8
    2074:	19 04       	cpc	r1, r9
    2076:	1a 04       	cpc	r1, r10
    2078:	1b 04       	cpc	r1, r11
    207a:	44 f0       	brlt	.+16     	; 0x208c <async+0x9e>
    207c:	0f 2e       	mov	r0, r31
    207e:	88 24       	eor	r8, r8
    2080:	8a 94       	dec	r8
    2082:	98 2c       	mov	r9, r8
    2084:	a8 2c       	mov	r10, r8
    2086:	ff e7       	ldi	r31, 0x7F	; 127
    2088:	bf 2e       	mov	r11, r31
    208a:	f0 2d       	mov	r31, r0
    208c:	84 0c       	add	r8, r4
    208e:	95 1c       	adc	r9, r5
    2090:	a6 1c       	adc	r10, r6
    2092:	b7 1c       	adc	r11, r7
    2094:	8e 82       	std	Y+6, r8	; 0x06
    2096:	9f 82       	std	Y+7, r9	; 0x07
    2098:	a8 86       	std	Y+8, r10	; 0x08
    209a:	b9 86       	std	Y+9, r11	; 0x09
    209c:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    20a0:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    20a4:	c9 01       	movw	r24, r18
    20a6:	03 2e       	mov	r0, r19
    20a8:	00 0c       	add	r0, r0
    20aa:	aa 0b       	sbc	r26, r26
    20ac:	bb 0b       	sbc	r27, r27
    20ae:	dc 01       	movw	r26, r24
    20b0:	99 27       	eor	r25, r25
    20b2:	88 27       	eor	r24, r24
    20b4:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    20b8:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    20bc:	60 e0       	ldi	r22, 0x00	; 0
    20be:	70 e0       	ldi	r23, 0x00	; 0
    20c0:	84 2b       	or	r24, r20
    20c2:	95 2b       	or	r25, r21
    20c4:	a6 2b       	or	r26, r22
    20c6:	b7 2b       	or	r27, r23
    20c8:	b0 9b       	sbis	0x16, 0	; 22
    20ca:	13 c0       	rjmp	.+38     	; 0x20f2 <async+0x104>
    20cc:	c9 01       	movw	r24, r18
    20ce:	01 96       	adiw	r24, 0x01	; 1
    20d0:	09 2e       	mov	r0, r25
    20d2:	00 0c       	add	r0, r0
    20d4:	aa 0b       	sbc	r26, r26
    20d6:	bb 0b       	sbc	r27, r27
    20d8:	dc 01       	movw	r26, r24
    20da:	99 27       	eor	r25, r25
    20dc:	88 27       	eor	r24, r24
    20de:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    20e2:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    20e6:	60 e0       	ldi	r22, 0x00	; 0
    20e8:	70 e0       	ldi	r23, 0x00	; 0
    20ea:	84 2b       	or	r24, r20
    20ec:	95 2b       	or	r25, r21
    20ee:	a6 2b       	or	r26, r22
    20f0:	b7 2b       	or	r27, r23
    20f2:	48 1a       	sub	r4, r24
    20f4:	59 0a       	sbc	r5, r25
    20f6:	6a 0a       	sbc	r6, r26
    20f8:	7b 0a       	sbc	r7, r27
    20fa:	14 14       	cp	r1, r4
    20fc:	15 04       	cpc	r1, r5
    20fe:	16 04       	cpc	r1, r6
    2100:	17 04       	cpc	r1, r7
    2102:	ac f5       	brge	.+106    	; 0x216e <async+0x180>
    2104:	66 e5       	ldi	r22, 0x56	; 86
    2106:	71 e0       	ldi	r23, 0x01	; 1
    2108:	ce 01       	movw	r24, r28
    210a:	0e 94 85 06 	call	0xd0a	; 0xd0a <enqueueByBaseline>
    210e:	e0 91 56 01 	lds	r30, 0x0156	; 0x800156 <timerQ>
    2112:	f0 91 57 01 	lds	r31, 0x0157	; 0x800157 <timerQ+0x1>
    2116:	30 97       	sbiw	r30, 0x00	; 0
    2118:	21 f1       	breq	.+72     	; 0x2162 <async+0x174>
    211a:	82 81       	ldd	r24, Z+2	; 0x02
    211c:	93 81       	ldd	r25, Z+3	; 0x03
    211e:	a4 81       	ldd	r26, Z+4	; 0x04
    2120:	b5 81       	ldd	r27, Z+5	; 0x05
    2122:	20 91 50 01 	lds	r18, 0x0150	; 0x800150 <overflows>
    2126:	30 91 51 01 	lds	r19, 0x0151	; 0x800151 <overflows+0x1>
    212a:	2a 17       	cp	r18, r26
    212c:	3b 07       	cpc	r19, r27
    212e:	c9 f4       	brne	.+50     	; 0x2162 <async+0x174>
    2130:	9c 01       	movw	r18, r24
    2132:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    2136:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    213a:	84 1b       	sub	r24, r20
    213c:	95 0b       	sbc	r25, r21
    213e:	01 97       	sbiw	r24, 0x01	; 1
    2140:	31 f4       	brne	.+12     	; 0x214e <async+0x160>
    2142:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x7fc084>
    2146:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x7fc085>
    214a:	2f 5f       	subi	r18, 0xFF	; 255
    214c:	3f 4f       	sbci	r19, 0xFF	; 255
    214e:	30 93 89 00 	sts	0x0089, r19	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fc089>
    2152:	20 93 88 00 	sts	0x0088, r18	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fc088>
    2156:	ef e6       	ldi	r30, 0x6F	; 111
    2158:	f0 e0       	ldi	r31, 0x00	; 0
    215a:	80 81       	ld	r24, Z
    215c:	82 60       	ori	r24, 0x02	; 2
    215e:	80 83       	st	Z, r24
    2160:	39 c0       	rjmp	.+114    	; 0x21d4 <async+0x1e6>
    2162:	ef e6       	ldi	r30, 0x6F	; 111
    2164:	f0 e0       	ldi	r31, 0x00	; 0
    2166:	80 81       	ld	r24, Z
    2168:	8d 7f       	andi	r24, 0xFD	; 253
    216a:	80 83       	st	Z, r24
    216c:	33 c0       	rjmp	.+102    	; 0x21d4 <async+0x1e6>
    216e:	68 e5       	ldi	r22, 0x58	; 88
    2170:	71 e0       	ldi	r23, 0x01	; 1
    2172:	ce 01       	movw	r24, r28
    2174:	0e 94 54 06 	call	0xca8	; 0xca8 <enqueueByDeadline>
    2178:	33 20       	and	r3, r3
    217a:	61 f1       	breq	.+88     	; 0x21d4 <async+0x1e6>
    217c:	80 91 33 01 	lds	r24, 0x0133	; 0x800133 <threadPool>
    2180:	90 91 34 01 	lds	r25, 0x0134	; 0x800134 <threadPool+0x1>
    2184:	89 2b       	or	r24, r25
    2186:	31 f1       	breq	.+76     	; 0x21d4 <async+0x1e6>
    2188:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
    218c:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
    2190:	86 81       	ldd	r24, Z+6	; 0x06
    2192:	97 81       	ldd	r25, Z+7	; 0x07
    2194:	a0 85       	ldd	r26, Z+8	; 0x08
    2196:	b1 85       	ldd	r27, Z+9	; 0x09
    2198:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <activeStack>
    219c:	f0 91 32 01 	lds	r31, 0x0132	; 0x800132 <activeStack+0x1>
    21a0:	02 80       	ldd	r0, Z+2	; 0x02
    21a2:	f3 81       	ldd	r31, Z+3	; 0x03
    21a4:	e0 2d       	mov	r30, r0
    21a6:	46 81       	ldd	r20, Z+6	; 0x06
    21a8:	57 81       	ldd	r21, Z+7	; 0x07
    21aa:	60 85       	ldd	r22, Z+8	; 0x08
    21ac:	71 85       	ldd	r23, Z+9	; 0x09
    21ae:	84 1b       	sub	r24, r20
    21b0:	95 0b       	sbc	r25, r21
    21b2:	a6 0b       	sbc	r26, r22
    21b4:	b7 0b       	sbc	r27, r23
    21b6:	72 f4       	brpl	.+28     	; 0x21d4 <async+0x1e6>
    21b8:	83 e3       	ldi	r24, 0x33	; 51
    21ba:	91 e0       	ldi	r25, 0x01	; 1
    21bc:	0e 94 f2 06 	call	0xde4	; 0xde4 <pop>
    21c0:	61 e3       	ldi	r22, 0x31	; 49
    21c2:	71 e0       	ldi	r23, 0x01	; 1
    21c4:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <push>
    21c8:	80 91 31 01 	lds	r24, 0x0131	; 0x800131 <activeStack>
    21cc:	90 91 32 01 	lds	r25, 0x0132	; 0x800132 <activeStack+0x1>
    21d0:	0e 94 34 06 	call	0xc68	; 0xc68 <dispatch>
    21d4:	33 20       	and	r3, r3
    21d6:	09 f0       	breq	.+2      	; 0x21da <async+0x1ec>
    21d8:	78 94       	sei
    21da:	ce 01       	movw	r24, r28
    21dc:	df 91       	pop	r29
    21de:	cf 91       	pop	r28
    21e0:	1f 91       	pop	r17
    21e2:	0f 91       	pop	r16
    21e4:	ff 90       	pop	r15
    21e6:	ef 90       	pop	r14
    21e8:	df 90       	pop	r13
    21ea:	cf 90       	pop	r12
    21ec:	bf 90       	pop	r11
    21ee:	af 90       	pop	r10
    21f0:	9f 90       	pop	r9
    21f2:	8f 90       	pop	r8
    21f4:	7f 90       	pop	r7
    21f6:	6f 90       	pop	r6
    21f8:	5f 90       	pop	r5
    21fa:	4f 90       	pop	r4
    21fc:	3f 90       	pop	r3
    21fe:	08 95       	ret

00002200 <sync>:
    2200:	cf 92       	push	r12
    2202:	df 92       	push	r13
    2204:	ef 92       	push	r14
    2206:	ff 92       	push	r15
    2208:	0f 93       	push	r16
    220a:	1f 93       	push	r17
    220c:	cf 93       	push	r28
    220e:	df 93       	push	r29
    2210:	ec 01       	movw	r28, r24
    2212:	7b 01       	movw	r14, r22
    2214:	6a 01       	movw	r12, r20
    2216:	1f b7       	in	r17, 0x3f	; 63
    2218:	10 78       	andi	r17, 0x80	; 128
    221a:	f8 94       	cli
    221c:	a8 81       	ld	r26, Y
    221e:	b9 81       	ldd	r27, Y+1	; 0x01
    2220:	10 97       	sbiw	r26, 0x00	; 0
    2222:	19 f4       	brne	.+6      	; 0x222a <sync+0x2a>
    2224:	35 c0       	rjmp	.+106    	; 0x2290 <sync+0x90>
    2226:	a0 81       	ld	r26, Z
    2228:	b1 81       	ldd	r27, Z+1	; 0x01
    222a:	14 96       	adiw	r26, 0x04	; 4
    222c:	ed 91       	ld	r30, X+
    222e:	fc 91       	ld	r31, X
    2230:	15 97       	sbiw	r26, 0x05	; 5
    2232:	30 97       	sbiw	r30, 0x00	; 0
    2234:	c1 f7       	brne	.-16     	; 0x2226 <sync+0x26>
    2236:	20 91 2f 01 	lds	r18, 0x012F	; 0x80012f <current>
    223a:	30 91 30 01 	lds	r19, 0x0130	; 0x800130 <current+0x1>
    223e:	a2 17       	cp	r26, r18
    2240:	b3 07       	cpc	r27, r19
    2242:	11 f0       	breq	.+4      	; 0x2248 <sync+0x48>
    2244:	11 11       	cpse	r17, r1
    2246:	07 c0       	rjmp	.+14     	; 0x2256 <sync+0x56>
    2248:	11 23       	and	r17, r17
    224a:	09 f4       	brne	.+2      	; 0x224e <sync+0x4e>
    224c:	4a c0       	rjmp	.+148    	; 0x22e2 <sync+0xe2>
    224e:	78 94       	sei
    2250:	8f ef       	ldi	r24, 0xFF	; 255
    2252:	9f ef       	ldi	r25, 0xFF	; 255
    2254:	4e c0       	rjmp	.+156    	; 0x22f2 <sync+0xf2>
    2256:	8a 81       	ldd	r24, Y+2	; 0x02
    2258:	9b 81       	ldd	r25, Y+3	; 0x03
    225a:	00 97       	sbiw	r24, 0x00	; 0
    225c:	19 f0       	breq	.+6      	; 0x2264 <sync+0x64>
    225e:	fc 01       	movw	r30, r24
    2260:	15 82       	std	Z+5, r1	; 0x05
    2262:	14 82       	std	Z+4, r1	; 0x04
    2264:	3b 83       	std	Y+3, r19	; 0x03
    2266:	2a 83       	std	Y+2, r18	; 0x02
    2268:	f9 01       	movw	r30, r18
    226a:	d5 83       	std	Z+5, r29	; 0x05
    226c:	c4 83       	std	Z+4, r28	; 0x04
    226e:	cd 01       	movw	r24, r26
    2270:	0e 94 34 06 	call	0xc68	; 0xc68 <dispatch>
    2274:	e0 91 2f 01 	lds	r30, 0x012F	; 0x80012f <current>
    2278:	f0 91 30 01 	lds	r31, 0x0130	; 0x800130 <current+0x1>
    227c:	82 81       	ldd	r24, Z+2	; 0x02
    227e:	93 81       	ldd	r25, Z+3	; 0x03
    2280:	89 2b       	or	r24, r25
    2282:	31 f4       	brne	.+12     	; 0x2290 <sync+0x90>
    2284:	11 23       	and	r17, r17
    2286:	81 f1       	breq	.+96     	; 0x22e8 <sync+0xe8>
    2288:	78 94       	sei
    228a:	80 e0       	ldi	r24, 0x00	; 0
    228c:	90 e0       	ldi	r25, 0x00	; 0
    228e:	31 c0       	rjmp	.+98     	; 0x22f2 <sync+0xf2>
    2290:	80 91 2f 01 	lds	r24, 0x012F	; 0x80012f <current>
    2294:	90 91 30 01 	lds	r25, 0x0130	; 0x800130 <current+0x1>
    2298:	99 83       	std	Y+1, r25	; 0x01
    229a:	88 83       	st	Y, r24
    229c:	11 23       	and	r17, r17
    229e:	29 f0       	breq	.+10     	; 0x22aa <sync+0xaa>
    22a0:	8a 81       	ldd	r24, Y+2	; 0x02
    22a2:	9b 81       	ldd	r25, Y+3	; 0x03
    22a4:	01 97       	sbiw	r24, 0x01	; 1
    22a6:	09 f0       	breq	.+2      	; 0x22aa <sync+0xaa>
    22a8:	78 94       	sei
    22aa:	b6 01       	movw	r22, r12
    22ac:	ce 01       	movw	r24, r28
    22ae:	f7 01       	movw	r30, r14
    22b0:	09 95       	icall
    22b2:	f8 2e       	mov	r15, r24
    22b4:	09 2f       	mov	r16, r25
    22b6:	8f b7       	in	r24, 0x3f	; 63
    22b8:	f8 94       	cli
    22ba:	19 82       	std	Y+1, r1	; 0x01
    22bc:	18 82       	st	Y, r1
    22be:	8a 81       	ldd	r24, Y+2	; 0x02
    22c0:	9b 81       	ldd	r25, Y+3	; 0x03
    22c2:	82 30       	cpi	r24, 0x02	; 2
    22c4:	91 05       	cpc	r25, r1
    22c6:	38 f0       	brcs	.+14     	; 0x22d6 <sync+0xd6>
    22c8:	1b 82       	std	Y+3, r1	; 0x03
    22ca:	1a 82       	std	Y+2, r1	; 0x02
    22cc:	fc 01       	movw	r30, r24
    22ce:	15 82       	std	Z+5, r1	; 0x05
    22d0:	14 82       	std	Z+4, r1	; 0x04
    22d2:	0e 94 34 06 	call	0xc68	; 0xc68 <dispatch>
    22d6:	11 23       	and	r17, r17
    22d8:	51 f0       	breq	.+20     	; 0x22ee <sync+0xee>
    22da:	78 94       	sei
    22dc:	8f 2d       	mov	r24, r15
    22de:	90 2f       	mov	r25, r16
    22e0:	08 c0       	rjmp	.+16     	; 0x22f2 <sync+0xf2>
    22e2:	8f ef       	ldi	r24, 0xFF	; 255
    22e4:	9f ef       	ldi	r25, 0xFF	; 255
    22e6:	05 c0       	rjmp	.+10     	; 0x22f2 <sync+0xf2>
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	90 e0       	ldi	r25, 0x00	; 0
    22ec:	02 c0       	rjmp	.+4      	; 0x22f2 <sync+0xf2>
    22ee:	8f 2d       	mov	r24, r15
    22f0:	90 2f       	mov	r25, r16
    22f2:	df 91       	pop	r29
    22f4:	cf 91       	pop	r28
    22f6:	1f 91       	pop	r17
    22f8:	0f 91       	pop	r16
    22fa:	ff 90       	pop	r15
    22fc:	ef 90       	pop	r14
    22fe:	df 90       	pop	r13
    2300:	cf 90       	pop	r12
    2302:	08 95       	ret

00002304 <run>:
    2304:	00 91 2f 01 	lds	r16, 0x012F	; 0x80012f <current>
    2308:	10 91 30 01 	lds	r17, 0x0130	; 0x800130 <current+0x1>
    230c:	88 e5       	ldi	r24, 0x58	; 88
    230e:	91 e0       	ldi	r25, 0x01	; 1
    2310:	0e 94 b6 06 	call	0xd6c	; 0xd6c <dequeue>
    2314:	ec 01       	movw	r28, r24
    2316:	f8 01       	movw	r30, r16
    2318:	93 83       	std	Z+3, r25	; 0x03
    231a:	82 83       	std	Z+2, r24	; 0x02
    231c:	78 94       	sei
    231e:	6c 85       	ldd	r22, Y+12	; 0x0c
    2320:	7d 85       	ldd	r23, Y+13	; 0x0d
    2322:	4e 85       	ldd	r20, Y+14	; 0x0e
    2324:	5f 85       	ldd	r21, Y+15	; 0x0f
    2326:	8a 85       	ldd	r24, Y+10	; 0x0a
    2328:	9b 85       	ldd	r25, Y+11	; 0x0b
    232a:	0e 94 00 11 	call	0x2200	; 0x2200 <sync>
    232e:	8f b7       	in	r24, 0x3f	; 63
    2330:	f8 94       	cli
    2332:	65 e3       	ldi	r22, 0x35	; 53
    2334:	71 e0       	ldi	r23, 0x01	; 1
    2336:	ce 01       	movw	r24, r28
    2338:	0e 94 de 06 	call	0xdbc	; 0xdbc <insert>
    233c:	e0 91 31 01 	lds	r30, 0x0131	; 0x800131 <activeStack>
    2340:	f0 91 32 01 	lds	r31, 0x0132	; 0x800132 <activeStack+0x1>
    2344:	01 90       	ld	r0, Z+
    2346:	f0 81       	ld	r31, Z
    2348:	e0 2d       	mov	r30, r0
    234a:	c2 81       	ldd	r28, Z+2	; 0x02
    234c:	d3 81       	ldd	r29, Z+3	; 0x03
    234e:	e0 91 58 01 	lds	r30, 0x0158	; 0x800158 <msgQ>
    2352:	f0 91 59 01 	lds	r31, 0x0159	; 0x800159 <msgQ+0x1>
    2356:	30 97       	sbiw	r30, 0x00	; 0
    2358:	a1 f0       	breq	.+40     	; 0x2382 <run+0x7e>
    235a:	20 97       	sbiw	r28, 0x00	; 0
    235c:	99 f2       	breq	.-90     	; 0x2304 <run>
    235e:	86 81       	ldd	r24, Z+6	; 0x06
    2360:	97 81       	ldd	r25, Z+7	; 0x07
    2362:	a0 85       	ldd	r26, Z+8	; 0x08
    2364:	b1 85       	ldd	r27, Z+9	; 0x09
    2366:	4e 81       	ldd	r20, Y+6	; 0x06
    2368:	5f 81       	ldd	r21, Y+7	; 0x07
    236a:	68 85       	ldd	r22, Y+8	; 0x08
    236c:	79 85       	ldd	r23, Y+9	; 0x09
    236e:	84 1b       	sub	r24, r20
    2370:	95 0b       	sbc	r25, r21
    2372:	a6 0b       	sbc	r26, r22
    2374:	b7 0b       	sbc	r27, r23
    2376:	18 16       	cp	r1, r24
    2378:	19 06       	cpc	r1, r25
    237a:	1a 06       	cpc	r1, r26
    237c:	1b 06       	cpc	r1, r27
    237e:	0c f0       	brlt	.+2      	; 0x2382 <run+0x7e>
    2380:	c1 cf       	rjmp	.-126    	; 0x2304 <run>
    2382:	81 e3       	ldi	r24, 0x31	; 49
    2384:	91 e0       	ldi	r25, 0x01	; 1
    2386:	0e 94 f2 06 	call	0xde4	; 0xde4 <pop>
    238a:	63 e3       	ldi	r22, 0x33	; 51
    238c:	71 e0       	ldi	r23, 0x01	; 1
    238e:	0e 94 e8 06 	call	0xdd0	; 0xdd0 <push>
    2392:	a0 91 31 01 	lds	r26, 0x0131	; 0x800131 <activeStack>
    2396:	b0 91 32 01 	lds	r27, 0x0132	; 0x800132 <activeStack+0x1>
    239a:	02 c0       	rjmp	.+4      	; 0x23a0 <run+0x9c>
    239c:	a0 81       	ld	r26, Z
    239e:	b1 81       	ldd	r27, Z+1	; 0x01
    23a0:	14 96       	adiw	r26, 0x04	; 4
    23a2:	ed 91       	ld	r30, X+
    23a4:	fc 91       	ld	r31, X
    23a6:	15 97       	sbiw	r26, 0x05	; 5
    23a8:	30 97       	sbiw	r30, 0x00	; 0
    23aa:	c1 f7       	brne	.-16     	; 0x239c <run+0x98>
    23ac:	cd 01       	movw	r24, r26
    23ae:	0e 94 34 06 	call	0xc68	; 0xc68 <dispatch>
    23b2:	a8 cf       	rjmp	.-176    	; 0x2304 <run>

000023b4 <install>:
    thread0.msg = NULL;
    
    TIMER_INIT();
}

void install(Object *obj, Method m, enum Vector i) {
    23b4:	fc 01       	movw	r30, r24
    if (i >= 0 && i < N_VECTORS) {
    23b6:	42 31       	cpi	r20, 0x12	; 18
    23b8:	b8 f4       	brcc	.+46     	; 0x23e8 <install+0x34>
        char status;
        DISABLE(status);
    23ba:	9f b7       	in	r25, 0x3f	; 63
    23bc:	90 78       	andi	r25, 0x80	; 128
    23be:	f8 94       	cli
        otable[i] = obj;
    23c0:	50 e0       	ldi	r21, 0x00	; 0
    23c2:	44 0f       	add	r20, r20
    23c4:	55 1f       	adc	r21, r21
    23c6:	da 01       	movw	r26, r20
    23c8:	a6 5a       	subi	r26, 0xA6	; 166
    23ca:	be 4f       	sbci	r27, 0xFE	; 254
    23cc:	ed 93       	st	X+, r30
    23ce:	fc 93       	st	X, r31
        mtable[i] = m;
    23d0:	da 01       	movw	r26, r20
    23d2:	ae 50       	subi	r26, 0x0E	; 14
    23d4:	be 4f       	sbci	r27, 0xFE	; 254
    23d6:	6d 93       	st	X+, r22
    23d8:	7c 93       	st	X, r23
        obj->wantedBy = INSTALLED_TAG;  // Mark object as subject to synchronization by interrupt disabling
    23da:	21 e0       	ldi	r18, 0x01	; 1
    23dc:	30 e0       	ldi	r19, 0x00	; 0
    23de:	33 83       	std	Z+3, r19	; 0x03
    23e0:	22 83       	std	Z+2, r18	; 0x02
        ENABLE(status);
    23e2:	99 23       	and	r25, r25
    23e4:	09 f0       	breq	.+2      	; 0x23e8 <install+0x34>
    23e6:	78 94       	sei
    23e8:	08 95       	ret

000023ea <tinytimber>:
    }
}

int tinytimber(Object *obj, Method m, int arg) {
    23ea:	8c 01       	movw	r16, r24
    23ec:	7b 01       	movw	r14, r22
    23ee:	6a 01       	movw	r12, r20
    char status;
    DISABLE(status);
    23f0:	8f b7       	in	r24, 0x3f	; 63
    23f2:	f8 94       	cli
    initialize();
    23f4:	0e 94 95 05 	call	0xb2a	; 0xb2a <initialize>
    ENABLE(1);
    23f8:	78 94       	sei
    if (m != NULL)
    23fa:	e1 14       	cp	r14, r1
    23fc:	f1 04       	cpc	r15, r1
    23fe:	41 f0       	breq	.+16     	; 0x2410 <tinytimber+0x26>
        //m(obj, arg);
		ASYNC(obj,m,arg);
    2400:	20 e0       	ldi	r18, 0x00	; 0
    2402:	30 e0       	ldi	r19, 0x00	; 0
    2404:	a9 01       	movw	r20, r18
    2406:	60 e0       	ldi	r22, 0x00	; 0
    2408:	70 e0       	ldi	r23, 0x00	; 0
    240a:	cb 01       	movw	r24, r22
    240c:	0e 94 f7 0f 	call	0x1fee	; 0x1fee <async>
    DISABLE(status);
    2410:	8f b7       	in	r24, 0x3f	; 63
    2412:	f8 94       	cli
    idle();
    2414:	0e 94 fe 0e 	call	0x1dfc	; 0x1dfc <idle>

00002418 <__divmodhi4>:
    2418:	97 fb       	bst	r25, 7
    241a:	07 2e       	mov	r0, r23
    241c:	16 f4       	brtc	.+4      	; 0x2422 <__divmodhi4+0xa>
    241e:	00 94       	com	r0
    2420:	07 d0       	rcall	.+14     	; 0x2430 <__divmodhi4_neg1>
    2422:	77 fd       	sbrc	r23, 7
    2424:	09 d0       	rcall	.+18     	; 0x2438 <__divmodhi4_neg2>
    2426:	0e 94 2d 12 	call	0x245a	; 0x245a <__udivmodhi4>
    242a:	07 fc       	sbrc	r0, 7
    242c:	05 d0       	rcall	.+10     	; 0x2438 <__divmodhi4_neg2>
    242e:	3e f4       	brtc	.+14     	; 0x243e <__divmodhi4_exit>

00002430 <__divmodhi4_neg1>:
    2430:	90 95       	com	r25
    2432:	81 95       	neg	r24
    2434:	9f 4f       	sbci	r25, 0xFF	; 255
    2436:	08 95       	ret

00002438 <__divmodhi4_neg2>:
    2438:	70 95       	com	r23
    243a:	61 95       	neg	r22
    243c:	7f 4f       	sbci	r23, 0xFF	; 255

0000243e <__divmodhi4_exit>:
    243e:	08 95       	ret

00002440 <__tablejump2__>:
    2440:	ee 0f       	add	r30, r30
    2442:	ff 1f       	adc	r31, r31
    2444:	05 90       	lpm	r0, Z+
    2446:	f4 91       	lpm	r31, Z
    2448:	e0 2d       	mov	r30, r0
    244a:	09 94       	ijmp

0000244c <__usmulhisi3>:
    244c:	0e 94 41 12 	call	0x2482	; 0x2482 <__umulhisi3>

00002450 <__usmulhisi3_tail>:
    2450:	b7 ff       	sbrs	r27, 7
    2452:	08 95       	ret
    2454:	82 1b       	sub	r24, r18
    2456:	93 0b       	sbc	r25, r19
    2458:	08 95       	ret

0000245a <__udivmodhi4>:
    245a:	aa 1b       	sub	r26, r26
    245c:	bb 1b       	sub	r27, r27
    245e:	51 e1       	ldi	r21, 0x11	; 17
    2460:	07 c0       	rjmp	.+14     	; 0x2470 <__udivmodhi4_ep>

00002462 <__udivmodhi4_loop>:
    2462:	aa 1f       	adc	r26, r26
    2464:	bb 1f       	adc	r27, r27
    2466:	a6 17       	cp	r26, r22
    2468:	b7 07       	cpc	r27, r23
    246a:	10 f0       	brcs	.+4      	; 0x2470 <__udivmodhi4_ep>
    246c:	a6 1b       	sub	r26, r22
    246e:	b7 0b       	sbc	r27, r23

00002470 <__udivmodhi4_ep>:
    2470:	88 1f       	adc	r24, r24
    2472:	99 1f       	adc	r25, r25
    2474:	5a 95       	dec	r21
    2476:	a9 f7       	brne	.-22     	; 0x2462 <__udivmodhi4_loop>
    2478:	80 95       	com	r24
    247a:	90 95       	com	r25
    247c:	bc 01       	movw	r22, r24
    247e:	cd 01       	movw	r24, r26
    2480:	08 95       	ret

00002482 <__umulhisi3>:
    2482:	a2 9f       	mul	r26, r18
    2484:	b0 01       	movw	r22, r0
    2486:	b3 9f       	mul	r27, r19
    2488:	c0 01       	movw	r24, r0
    248a:	a3 9f       	mul	r26, r19
    248c:	70 0d       	add	r23, r0
    248e:	81 1d       	adc	r24, r1
    2490:	11 24       	eor	r1, r1
    2492:	91 1d       	adc	r25, r1
    2494:	b2 9f       	mul	r27, r18
    2496:	70 0d       	add	r23, r0
    2498:	81 1d       	adc	r24, r1
    249a:	11 24       	eor	r1, r1
    249c:	91 1d       	adc	r25, r1
    249e:	08 95       	ret

000024a0 <setjmp>:
    24a0:	dc 01       	movw	r26, r24
    24a2:	2d 92       	st	X+, r2
    24a4:	3d 92       	st	X+, r3
    24a6:	4d 92       	st	X+, r4
    24a8:	5d 92       	st	X+, r5
    24aa:	6d 92       	st	X+, r6
    24ac:	7d 92       	st	X+, r7
    24ae:	8d 92       	st	X+, r8
    24b0:	9d 92       	st	X+, r9
    24b2:	ad 92       	st	X+, r10
    24b4:	bd 92       	st	X+, r11
    24b6:	cd 92       	st	X+, r12
    24b8:	dd 92       	st	X+, r13
    24ba:	ed 92       	st	X+, r14
    24bc:	fd 92       	st	X+, r15
    24be:	0d 93       	st	X+, r16
    24c0:	1d 93       	st	X+, r17
    24c2:	cd 93       	st	X+, r28
    24c4:	dd 93       	st	X+, r29
    24c6:	ff 91       	pop	r31
    24c8:	ef 91       	pop	r30
    24ca:	8d b7       	in	r24, 0x3d	; 61
    24cc:	8d 93       	st	X+, r24
    24ce:	8e b7       	in	r24, 0x3e	; 62
    24d0:	8d 93       	st	X+, r24
    24d2:	8f b7       	in	r24, 0x3f	; 63
    24d4:	8d 93       	st	X+, r24
    24d6:	ed 93       	st	X+, r30
    24d8:	fd 93       	st	X+, r31
    24da:	88 27       	eor	r24, r24
    24dc:	99 27       	eor	r25, r25
    24de:	09 94       	ijmp

000024e0 <longjmp>:
    24e0:	dc 01       	movw	r26, r24
    24e2:	cb 01       	movw	r24, r22
    24e4:	81 30       	cpi	r24, 0x01	; 1
    24e6:	91 05       	cpc	r25, r1
    24e8:	81 1d       	adc	r24, r1
    24ea:	2d 90       	ld	r2, X+
    24ec:	3d 90       	ld	r3, X+
    24ee:	4d 90       	ld	r4, X+
    24f0:	5d 90       	ld	r5, X+
    24f2:	6d 90       	ld	r6, X+
    24f4:	7d 90       	ld	r7, X+
    24f6:	8d 90       	ld	r8, X+
    24f8:	9d 90       	ld	r9, X+
    24fa:	ad 90       	ld	r10, X+
    24fc:	bd 90       	ld	r11, X+
    24fe:	cd 90       	ld	r12, X+
    2500:	dd 90       	ld	r13, X+
    2502:	ed 90       	ld	r14, X+
    2504:	fd 90       	ld	r15, X+
    2506:	0d 91       	ld	r16, X+
    2508:	1d 91       	ld	r17, X+
    250a:	cd 91       	ld	r28, X+
    250c:	dd 91       	ld	r29, X+
    250e:	ed 91       	ld	r30, X+
    2510:	fd 91       	ld	r31, X+
    2512:	0d 90       	ld	r0, X+
    2514:	f8 94       	cli
    2516:	fe bf       	out	0x3e, r31	; 62
    2518:	0f be       	out	0x3f, r0	; 63
    251a:	ed bf       	out	0x3d, r30	; 61
    251c:	ed 91       	ld	r30, X+
    251e:	fd 91       	ld	r31, X+
    2520:	09 94       	ijmp

00002522 <_exit>:
    2522:	f8 94       	cli

00002524 <__stop_program>:
    2524:	ff cf       	rjmp	.-2      	; 0x2524 <__stop_program>
